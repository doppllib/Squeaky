//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/commons-lang/src/main/java/org/apache/commons/lang3/ArrayUtils.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "OrgApacheCommonsLang3ArrayUtils.h"
#include "OrgApacheCommonsLang3BooleanUtils.h"
#include "OrgApacheCommonsLang3BuilderEqualsBuilder.h"
#include "OrgApacheCommonsLang3BuilderHashCodeBuilder.h"
#include "OrgApacheCommonsLang3BuilderToStringBuilder.h"
#include "OrgApacheCommonsLang3BuilderToStringStyle.h"
#include "OrgApacheCommonsLang3CharUtils.h"
#include "OrgApacheCommonsLang3ClassUtils.h"
#include "OrgApacheCommonsLang3MathNumberUtils.h"
#include "OrgApacheCommonsLang3MutableMutableInt.h"
#include "java/lang/ArrayStoreException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/Comparable.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/Short.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Array.h"
#include "java/util/Arrays.h"
#include "java/util/BitSet.h"
#include "java/util/Comparator.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgApacheCommonsLang3ArrayUtils ()

+ (id)copyArrayGrow1WithId:(id)array
              withIOSClass:(IOSClass *)newArrayComponentType OBJC_METHOD_FAMILY_NONE;

+ (id)addWithId:(id)array
        withInt:(jint)index
         withId:(id)element
   withIOSClass:(IOSClass *)clss;

+ (id)removeWithId:(id)array
           withInt:(jint)index;

@end

__attribute__((unused)) static id OrgApacheCommonsLang3ArrayUtils_copyArrayGrow1WithId_withIOSClass_(id array, IOSClass *newArrayComponentType);

__attribute__((unused)) static id OrgApacheCommonsLang3ArrayUtils_addWithId_withInt_withId_withIOSClass_(id array, jint index, id element, IOSClass *clss);

__attribute__((unused)) static id OrgApacheCommonsLang3ArrayUtils_removeWithId_withInt_(id array, jint index);

__attribute__((unused)) static IOSObjectArray *OrgApacheCommonsLang3ArrayUtils__Annotations$0();

@interface OrgApacheCommonsLang3ArrayUtils_1 : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(id<JavaLangComparable>)o1
               withId:(id<JavaLangComparable>)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3ArrayUtils_1)

__attribute__((unused)) static void OrgApacheCommonsLang3ArrayUtils_1_init(OrgApacheCommonsLang3ArrayUtils_1 *self);

__attribute__((unused)) static OrgApacheCommonsLang3ArrayUtils_1 *new_OrgApacheCommonsLang3ArrayUtils_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheCommonsLang3ArrayUtils_1 *create_OrgApacheCommonsLang3ArrayUtils_1_init();

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsLang3ArrayUtils)

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_OBJECT_ARRAY;
IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_CLASS_ARRAY;
IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_STRING_ARRAY;
IOSLongArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_LONG_ARRAY;
IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_LONG_OBJECT_ARRAY;
IOSIntArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_INT_ARRAY;
IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_INTEGER_OBJECT_ARRAY;
IOSShortArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_SHORT_ARRAY;
IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_SHORT_OBJECT_ARRAY;
IOSByteArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_BYTE_ARRAY;
IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_BYTE_OBJECT_ARRAY;
IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_DOUBLE_ARRAY;
IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_DOUBLE_OBJECT_ARRAY;
IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_FLOAT_ARRAY;
IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_FLOAT_OBJECT_ARRAY;
IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_BOOLEAN_ARRAY;
IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_BOOLEAN_OBJECT_ARRAY;
IOSCharArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_CHAR_ARRAY;
IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_EMPTY_CHARACTER_OBJECT_ARRAY;

@implementation OrgApacheCommonsLang3ArrayUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3ArrayUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)toStringWithId:(id)array {
  return OrgApacheCommonsLang3ArrayUtils_toStringWithId_(array);
}

+ (NSString *)toStringWithId:(id)array
                withNSString:(NSString *)stringIfNull {
  return OrgApacheCommonsLang3ArrayUtils_toStringWithId_withNSString_(array, stringIfNull);
}

+ (jint)hashCodeWithId:(id)array {
  return OrgApacheCommonsLang3ArrayUtils_hashCodeWithId_(array);
}

+ (jboolean)isEqualsWithId:(id)array1
                    withId:(id)array2 {
  return OrgApacheCommonsLang3ArrayUtils_isEqualsWithId_withId_(array1, array2);
}

+ (id<JavaUtilMap>)toMapWithNSObjectArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toMapWithNSObjectArray_(array);
}

+ (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)items {
  return OrgApacheCommonsLang3ArrayUtils_toArrayWithNSObjectArray_(items);
}

+ (IOSObjectArray *)cloneWithNSObjectArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_cloneWithNSObjectArray_(array);
}

+ (IOSLongArray *)cloneWithLongArray:(IOSLongArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_cloneWithLongArray_(array);
}

+ (IOSIntArray *)cloneWithIntArray:(IOSIntArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_cloneWithIntArray_(array);
}

+ (IOSShortArray *)cloneWithShortArray:(IOSShortArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_cloneWithShortArray_(array);
}

+ (IOSCharArray *)cloneWithCharArray:(IOSCharArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_cloneWithCharArray_(array);
}

+ (IOSByteArray *)cloneWithByteArray:(IOSByteArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_cloneWithByteArray_(array);
}

+ (IOSDoubleArray *)cloneWithDoubleArray:(IOSDoubleArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_cloneWithDoubleArray_(array);
}

+ (IOSFloatArray *)cloneWithFloatArray:(IOSFloatArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_cloneWithFloatArray_(array);
}

+ (IOSBooleanArray *)cloneWithBooleanArray:(IOSBooleanArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_cloneWithBooleanArray_(array);
}

+ (IOSObjectArray *)nullToEmptyWithNSObjectArray:(IOSObjectArray *)array
                                    withIOSClass:(IOSClass *)type {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithNSObjectArray_withIOSClass_(array, type);
}

+ (IOSObjectArray *)nullToEmptyWithNSObjectArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithNSObjectArray_(array);
}

+ (IOSObjectArray *)nullToEmptyWithIOSClassArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithIOSClassArray_(array);
}

+ (IOSObjectArray *)nullToEmptyWithNSStringArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithNSStringArray_(array);
}

+ (IOSLongArray *)nullToEmptyWithLongArray:(IOSLongArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithLongArray_(array);
}

+ (IOSIntArray *)nullToEmptyWithIntArray:(IOSIntArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithIntArray_(array);
}

+ (IOSShortArray *)nullToEmptyWithShortArray:(IOSShortArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithShortArray_(array);
}

+ (IOSCharArray *)nullToEmptyWithCharArray:(IOSCharArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithCharArray_(array);
}

+ (IOSByteArray *)nullToEmptyWithByteArray:(IOSByteArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithByteArray_(array);
}

+ (IOSDoubleArray *)nullToEmptyWithDoubleArray:(IOSDoubleArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithDoubleArray_(array);
}

+ (IOSFloatArray *)nullToEmptyWithFloatArray:(IOSFloatArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithFloatArray_(array);
}

+ (IOSBooleanArray *)nullToEmptyWithBooleanArray:(IOSBooleanArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithBooleanArray_(array);
}

+ (IOSObjectArray *)nullToEmptyWithJavaLangLongArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangLongArray_(array);
}

+ (IOSObjectArray *)nullToEmptyWithJavaLangIntegerArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangIntegerArray_(array);
}

+ (IOSObjectArray *)nullToEmptyWithJavaLangShortArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangShortArray_(array);
}

+ (IOSObjectArray *)nullToEmptyWithJavaLangCharacterArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangCharacterArray_(array);
}

+ (IOSObjectArray *)nullToEmptyWithJavaLangByteArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangByteArray_(array);
}

+ (IOSObjectArray *)nullToEmptyWithJavaLangDoubleArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangDoubleArray_(array);
}

+ (IOSObjectArray *)nullToEmptyWithJavaLangFloatArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangFloatArray_(array);
}

+ (IOSObjectArray *)nullToEmptyWithJavaLangBooleanArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangBooleanArray_(array);
}

+ (IOSObjectArray *)subarrayWithNSObjectArray:(IOSObjectArray *)array
                                      withInt:(jint)startIndexInclusive
                                      withInt:(jint)endIndexExclusive {
  return OrgApacheCommonsLang3ArrayUtils_subarrayWithNSObjectArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (IOSLongArray *)subarrayWithLongArray:(IOSLongArray *)array
                                withInt:(jint)startIndexInclusive
                                withInt:(jint)endIndexExclusive {
  return OrgApacheCommonsLang3ArrayUtils_subarrayWithLongArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (IOSIntArray *)subarrayWithIntArray:(IOSIntArray *)array
                              withInt:(jint)startIndexInclusive
                              withInt:(jint)endIndexExclusive {
  return OrgApacheCommonsLang3ArrayUtils_subarrayWithIntArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (IOSShortArray *)subarrayWithShortArray:(IOSShortArray *)array
                                  withInt:(jint)startIndexInclusive
                                  withInt:(jint)endIndexExclusive {
  return OrgApacheCommonsLang3ArrayUtils_subarrayWithShortArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (IOSCharArray *)subarrayWithCharArray:(IOSCharArray *)array
                                withInt:(jint)startIndexInclusive
                                withInt:(jint)endIndexExclusive {
  return OrgApacheCommonsLang3ArrayUtils_subarrayWithCharArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (IOSByteArray *)subarrayWithByteArray:(IOSByteArray *)array
                                withInt:(jint)startIndexInclusive
                                withInt:(jint)endIndexExclusive {
  return OrgApacheCommonsLang3ArrayUtils_subarrayWithByteArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (IOSDoubleArray *)subarrayWithDoubleArray:(IOSDoubleArray *)array
                                    withInt:(jint)startIndexInclusive
                                    withInt:(jint)endIndexExclusive {
  return OrgApacheCommonsLang3ArrayUtils_subarrayWithDoubleArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (IOSFloatArray *)subarrayWithFloatArray:(IOSFloatArray *)array
                                  withInt:(jint)startIndexInclusive
                                  withInt:(jint)endIndexExclusive {
  return OrgApacheCommonsLang3ArrayUtils_subarrayWithFloatArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (IOSBooleanArray *)subarrayWithBooleanArray:(IOSBooleanArray *)array
                                      withInt:(jint)startIndexInclusive
                                      withInt:(jint)endIndexExclusive {
  return OrgApacheCommonsLang3ArrayUtils_subarrayWithBooleanArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (jboolean)isSameLengthWithNSObjectArray:(IOSObjectArray *)array1
                        withNSObjectArray:(IOSObjectArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_isSameLengthWithNSObjectArray_withNSObjectArray_(array1, array2);
}

+ (jboolean)isSameLengthWithLongArray:(IOSLongArray *)array1
                        withLongArray:(IOSLongArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_isSameLengthWithLongArray_withLongArray_(array1, array2);
}

+ (jboolean)isSameLengthWithIntArray:(IOSIntArray *)array1
                        withIntArray:(IOSIntArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_isSameLengthWithIntArray_withIntArray_(array1, array2);
}

+ (jboolean)isSameLengthWithShortArray:(IOSShortArray *)array1
                        withShortArray:(IOSShortArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_isSameLengthWithShortArray_withShortArray_(array1, array2);
}

+ (jboolean)isSameLengthWithCharArray:(IOSCharArray *)array1
                        withCharArray:(IOSCharArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_isSameLengthWithCharArray_withCharArray_(array1, array2);
}

+ (jboolean)isSameLengthWithByteArray:(IOSByteArray *)array1
                        withByteArray:(IOSByteArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_isSameLengthWithByteArray_withByteArray_(array1, array2);
}

+ (jboolean)isSameLengthWithDoubleArray:(IOSDoubleArray *)array1
                        withDoubleArray:(IOSDoubleArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_isSameLengthWithDoubleArray_withDoubleArray_(array1, array2);
}

+ (jboolean)isSameLengthWithFloatArray:(IOSFloatArray *)array1
                        withFloatArray:(IOSFloatArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_isSameLengthWithFloatArray_withFloatArray_(array1, array2);
}

+ (jboolean)isSameLengthWithBooleanArray:(IOSBooleanArray *)array1
                        withBooleanArray:(IOSBooleanArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_isSameLengthWithBooleanArray_withBooleanArray_(array1, array2);
}

+ (jint)getLengthWithId:(id)array {
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array);
}

+ (jboolean)isSameTypeWithId:(id)array1
                      withId:(id)array2 {
  return OrgApacheCommonsLang3ArrayUtils_isSameTypeWithId_withId_(array1, array2);
}

+ (void)reverseWithNSObjectArray:(IOSObjectArray *)array {
  OrgApacheCommonsLang3ArrayUtils_reverseWithNSObjectArray_(array);
}

+ (void)reverseWithLongArray:(IOSLongArray *)array {
  OrgApacheCommonsLang3ArrayUtils_reverseWithLongArray_(array);
}

+ (void)reverseWithIntArray:(IOSIntArray *)array {
  OrgApacheCommonsLang3ArrayUtils_reverseWithIntArray_(array);
}

+ (void)reverseWithShortArray:(IOSShortArray *)array {
  OrgApacheCommonsLang3ArrayUtils_reverseWithShortArray_(array);
}

+ (void)reverseWithCharArray:(IOSCharArray *)array {
  OrgApacheCommonsLang3ArrayUtils_reverseWithCharArray_(array);
}

+ (void)reverseWithByteArray:(IOSByteArray *)array {
  OrgApacheCommonsLang3ArrayUtils_reverseWithByteArray_(array);
}

+ (void)reverseWithDoubleArray:(IOSDoubleArray *)array {
  OrgApacheCommonsLang3ArrayUtils_reverseWithDoubleArray_(array);
}

+ (void)reverseWithFloatArray:(IOSFloatArray *)array {
  OrgApacheCommonsLang3ArrayUtils_reverseWithFloatArray_(array);
}

+ (void)reverseWithBooleanArray:(IOSBooleanArray *)array {
  OrgApacheCommonsLang3ArrayUtils_reverseWithBooleanArray_(array);
}

+ (void)reverseWithBooleanArray:(IOSBooleanArray *)array
                        withInt:(jint)startIndexInclusive
                        withInt:(jint)endIndexExclusive {
  OrgApacheCommonsLang3ArrayUtils_reverseWithBooleanArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (void)reverseWithByteArray:(IOSByteArray *)array
                     withInt:(jint)startIndexInclusive
                     withInt:(jint)endIndexExclusive {
  OrgApacheCommonsLang3ArrayUtils_reverseWithByteArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (void)reverseWithCharArray:(IOSCharArray *)array
                     withInt:(jint)startIndexInclusive
                     withInt:(jint)endIndexExclusive {
  OrgApacheCommonsLang3ArrayUtils_reverseWithCharArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (void)reverseWithDoubleArray:(IOSDoubleArray *)array
                       withInt:(jint)startIndexInclusive
                       withInt:(jint)endIndexExclusive {
  OrgApacheCommonsLang3ArrayUtils_reverseWithDoubleArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (void)reverseWithFloatArray:(IOSFloatArray *)array
                      withInt:(jint)startIndexInclusive
                      withInt:(jint)endIndexExclusive {
  OrgApacheCommonsLang3ArrayUtils_reverseWithFloatArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (void)reverseWithIntArray:(IOSIntArray *)array
                    withInt:(jint)startIndexInclusive
                    withInt:(jint)endIndexExclusive {
  OrgApacheCommonsLang3ArrayUtils_reverseWithIntArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (void)reverseWithLongArray:(IOSLongArray *)array
                     withInt:(jint)startIndexInclusive
                     withInt:(jint)endIndexExclusive {
  OrgApacheCommonsLang3ArrayUtils_reverseWithLongArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (void)reverseWithNSObjectArray:(IOSObjectArray *)array
                         withInt:(jint)startIndexInclusive
                         withInt:(jint)endIndexExclusive {
  OrgApacheCommonsLang3ArrayUtils_reverseWithNSObjectArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (void)reverseWithShortArray:(IOSShortArray *)array
                      withInt:(jint)startIndexInclusive
                      withInt:(jint)endIndexExclusive {
  OrgApacheCommonsLang3ArrayUtils_reverseWithShortArray_withInt_withInt_(array, startIndexInclusive, endIndexExclusive);
}

+ (void)swapWithNSObjectArray:(IOSObjectArray *)array
                      withInt:(jint)offset1
                      withInt:(jint)offset2 {
  OrgApacheCommonsLang3ArrayUtils_swapWithNSObjectArray_withInt_withInt_(array, offset1, offset2);
}

+ (void)swapWithLongArray:(IOSLongArray *)array
                  withInt:(jint)offset1
                  withInt:(jint)offset2 {
  OrgApacheCommonsLang3ArrayUtils_swapWithLongArray_withInt_withInt_(array, offset1, offset2);
}

+ (void)swapWithIntArray:(IOSIntArray *)array
                 withInt:(jint)offset1
                 withInt:(jint)offset2 {
  OrgApacheCommonsLang3ArrayUtils_swapWithIntArray_withInt_withInt_(array, offset1, offset2);
}

+ (void)swapWithShortArray:(IOSShortArray *)array
                   withInt:(jint)offset1
                   withInt:(jint)offset2 {
  OrgApacheCommonsLang3ArrayUtils_swapWithShortArray_withInt_withInt_(array, offset1, offset2);
}

+ (void)swapWithCharArray:(IOSCharArray *)array
                  withInt:(jint)offset1
                  withInt:(jint)offset2 {
  OrgApacheCommonsLang3ArrayUtils_swapWithCharArray_withInt_withInt_(array, offset1, offset2);
}

+ (void)swapWithByteArray:(IOSByteArray *)array
                  withInt:(jint)offset1
                  withInt:(jint)offset2 {
  OrgApacheCommonsLang3ArrayUtils_swapWithByteArray_withInt_withInt_(array, offset1, offset2);
}

+ (void)swapWithDoubleArray:(IOSDoubleArray *)array
                    withInt:(jint)offset1
                    withInt:(jint)offset2 {
  OrgApacheCommonsLang3ArrayUtils_swapWithDoubleArray_withInt_withInt_(array, offset1, offset2);
}

+ (void)swapWithFloatArray:(IOSFloatArray *)array
                   withInt:(jint)offset1
                   withInt:(jint)offset2 {
  OrgApacheCommonsLang3ArrayUtils_swapWithFloatArray_withInt_withInt_(array, offset1, offset2);
}

+ (void)swapWithBooleanArray:(IOSBooleanArray *)array
                     withInt:(jint)offset1
                     withInt:(jint)offset2 {
  OrgApacheCommonsLang3ArrayUtils_swapWithBooleanArray_withInt_withInt_(array, offset1, offset2);
}

+ (void)swapWithBooleanArray:(IOSBooleanArray *)array
                     withInt:(jint)offset1
                     withInt:(jint)offset2
                     withInt:(jint)len {
  OrgApacheCommonsLang3ArrayUtils_swapWithBooleanArray_withInt_withInt_withInt_(array, offset1, offset2, len);
}

+ (void)swapWithByteArray:(IOSByteArray *)array
                  withInt:(jint)offset1
                  withInt:(jint)offset2
                  withInt:(jint)len {
  OrgApacheCommonsLang3ArrayUtils_swapWithByteArray_withInt_withInt_withInt_(array, offset1, offset2, len);
}

+ (void)swapWithCharArray:(IOSCharArray *)array
                  withInt:(jint)offset1
                  withInt:(jint)offset2
                  withInt:(jint)len {
  OrgApacheCommonsLang3ArrayUtils_swapWithCharArray_withInt_withInt_withInt_(array, offset1, offset2, len);
}

+ (void)swapWithDoubleArray:(IOSDoubleArray *)array
                    withInt:(jint)offset1
                    withInt:(jint)offset2
                    withInt:(jint)len {
  OrgApacheCommonsLang3ArrayUtils_swapWithDoubleArray_withInt_withInt_withInt_(array, offset1, offset2, len);
}

+ (void)swapWithFloatArray:(IOSFloatArray *)array
                   withInt:(jint)offset1
                   withInt:(jint)offset2
                   withInt:(jint)len {
  OrgApacheCommonsLang3ArrayUtils_swapWithFloatArray_withInt_withInt_withInt_(array, offset1, offset2, len);
}

+ (void)swapWithIntArray:(IOSIntArray *)array
                 withInt:(jint)offset1
                 withInt:(jint)offset2
                 withInt:(jint)len {
  OrgApacheCommonsLang3ArrayUtils_swapWithIntArray_withInt_withInt_withInt_(array, offset1, offset2, len);
}

+ (void)swapWithLongArray:(IOSLongArray *)array
                  withInt:(jint)offset1
                  withInt:(jint)offset2
                  withInt:(jint)len {
  OrgApacheCommonsLang3ArrayUtils_swapWithLongArray_withInt_withInt_withInt_(array, offset1, offset2, len);
}

+ (void)swapWithNSObjectArray:(IOSObjectArray *)array
                      withInt:(jint)offset1
                      withInt:(jint)offset2
                      withInt:(jint)len {
  OrgApacheCommonsLang3ArrayUtils_swapWithNSObjectArray_withInt_withInt_withInt_(array, offset1, offset2, len);
}

+ (void)swapWithShortArray:(IOSShortArray *)array
                   withInt:(jint)offset1
                   withInt:(jint)offset2
                   withInt:(jint)len {
  OrgApacheCommonsLang3ArrayUtils_swapWithShortArray_withInt_withInt_withInt_(array, offset1, offset2, len);
}

+ (void)shiftWithNSObjectArray:(IOSObjectArray *)array
                       withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithNSObjectArray_withInt_(array, offset);
}

+ (void)shiftWithLongArray:(IOSLongArray *)array
                   withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithLongArray_withInt_(array, offset);
}

+ (void)shiftWithIntArray:(IOSIntArray *)array
                  withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithIntArray_withInt_(array, offset);
}

+ (void)shiftWithShortArray:(IOSShortArray *)array
                    withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithShortArray_withInt_(array, offset);
}

+ (void)shiftWithCharArray:(IOSCharArray *)array
                   withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithCharArray_withInt_(array, offset);
}

+ (void)shiftWithByteArray:(IOSByteArray *)array
                   withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithByteArray_withInt_(array, offset);
}

+ (void)shiftWithDoubleArray:(IOSDoubleArray *)array
                     withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithDoubleArray_withInt_(array, offset);
}

+ (void)shiftWithFloatArray:(IOSFloatArray *)array
                    withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithFloatArray_withInt_(array, offset);
}

+ (void)shiftWithBooleanArray:(IOSBooleanArray *)array
                      withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithBooleanArray_withInt_(array, offset);
}

+ (void)shiftWithBooleanArray:(IOSBooleanArray *)array
                      withInt:(jint)startIndexInclusive
                      withInt:(jint)endIndexExclusive
                      withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithBooleanArray_withInt_withInt_withInt_(array, startIndexInclusive, endIndexExclusive, offset);
}

+ (void)shiftWithByteArray:(IOSByteArray *)array
                   withInt:(jint)startIndexInclusive
                   withInt:(jint)endIndexExclusive
                   withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithByteArray_withInt_withInt_withInt_(array, startIndexInclusive, endIndexExclusive, offset);
}

+ (void)shiftWithCharArray:(IOSCharArray *)array
                   withInt:(jint)startIndexInclusive
                   withInt:(jint)endIndexExclusive
                   withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithCharArray_withInt_withInt_withInt_(array, startIndexInclusive, endIndexExclusive, offset);
}

+ (void)shiftWithDoubleArray:(IOSDoubleArray *)array
                     withInt:(jint)startIndexInclusive
                     withInt:(jint)endIndexExclusive
                     withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithDoubleArray_withInt_withInt_withInt_(array, startIndexInclusive, endIndexExclusive, offset);
}

+ (void)shiftWithFloatArray:(IOSFloatArray *)array
                    withInt:(jint)startIndexInclusive
                    withInt:(jint)endIndexExclusive
                    withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithFloatArray_withInt_withInt_withInt_(array, startIndexInclusive, endIndexExclusive, offset);
}

+ (void)shiftWithIntArray:(IOSIntArray *)array
                  withInt:(jint)startIndexInclusive
                  withInt:(jint)endIndexExclusive
                  withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithIntArray_withInt_withInt_withInt_(array, startIndexInclusive, endIndexExclusive, offset);
}

+ (void)shiftWithLongArray:(IOSLongArray *)array
                   withInt:(jint)startIndexInclusive
                   withInt:(jint)endIndexExclusive
                   withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithLongArray_withInt_withInt_withInt_(array, startIndexInclusive, endIndexExclusive, offset);
}

+ (void)shiftWithNSObjectArray:(IOSObjectArray *)array
                       withInt:(jint)startIndexInclusive
                       withInt:(jint)endIndexExclusive
                       withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithNSObjectArray_withInt_withInt_withInt_(array, startIndexInclusive, endIndexExclusive, offset);
}

+ (void)shiftWithShortArray:(IOSShortArray *)array
                    withInt:(jint)startIndexInclusive
                    withInt:(jint)endIndexExclusive
                    withInt:(jint)offset {
  OrgApacheCommonsLang3ArrayUtils_shiftWithShortArray_withInt_withInt_withInt_(array, startIndexInclusive, endIndexExclusive, offset);
}

+ (jint)indexOfWithNSObjectArray:(IOSObjectArray *)array
                          withId:(id)objectToFind {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithNSObjectArray_withId_(array, objectToFind);
}

+ (jint)indexOfWithNSObjectArray:(IOSObjectArray *)array
                          withId:(id)objectToFind
                         withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithNSObjectArray_withId_withInt_(array, objectToFind, startIndex);
}

+ (jint)lastIndexOfWithNSObjectArray:(IOSObjectArray *)array
                              withId:(id)objectToFind {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithNSObjectArray_withId_(array, objectToFind);
}

+ (jint)lastIndexOfWithNSObjectArray:(IOSObjectArray *)array
                              withId:(id)objectToFind
                             withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithNSObjectArray_withId_withInt_(array, objectToFind, startIndex);
}

+ (jboolean)containsWithNSObjectArray:(IOSObjectArray *)array
                               withId:(id)objectToFind {
  return OrgApacheCommonsLang3ArrayUtils_containsWithNSObjectArray_withId_(array, objectToFind);
}

+ (jint)indexOfWithLongArray:(IOSLongArray *)array
                    withLong:(jlong)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithLongArray_withLong_(array, valueToFind);
}

+ (jint)indexOfWithLongArray:(IOSLongArray *)array
                    withLong:(jlong)valueToFind
                     withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithLongArray_withLong_withInt_(array, valueToFind, startIndex);
}

+ (jint)lastIndexOfWithLongArray:(IOSLongArray *)array
                        withLong:(jlong)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithLongArray_withLong_(array, valueToFind);
}

+ (jint)lastIndexOfWithLongArray:(IOSLongArray *)array
                        withLong:(jlong)valueToFind
                         withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithLongArray_withLong_withInt_(array, valueToFind, startIndex);
}

+ (jboolean)containsWithLongArray:(IOSLongArray *)array
                         withLong:(jlong)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_containsWithLongArray_withLong_(array, valueToFind);
}

+ (jint)indexOfWithIntArray:(IOSIntArray *)array
                    withInt:(jint)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithIntArray_withInt_(array, valueToFind);
}

+ (jint)indexOfWithIntArray:(IOSIntArray *)array
                    withInt:(jint)valueToFind
                    withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithIntArray_withInt_withInt_(array, valueToFind, startIndex);
}

+ (jint)lastIndexOfWithIntArray:(IOSIntArray *)array
                        withInt:(jint)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithIntArray_withInt_(array, valueToFind);
}

+ (jint)lastIndexOfWithIntArray:(IOSIntArray *)array
                        withInt:(jint)valueToFind
                        withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithIntArray_withInt_withInt_(array, valueToFind, startIndex);
}

+ (jboolean)containsWithIntArray:(IOSIntArray *)array
                         withInt:(jint)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_containsWithIntArray_withInt_(array, valueToFind);
}

+ (jint)indexOfWithShortArray:(IOSShortArray *)array
                    withShort:(jshort)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithShortArray_withShort_(array, valueToFind);
}

+ (jint)indexOfWithShortArray:(IOSShortArray *)array
                    withShort:(jshort)valueToFind
                      withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithShortArray_withShort_withInt_(array, valueToFind, startIndex);
}

+ (jint)lastIndexOfWithShortArray:(IOSShortArray *)array
                        withShort:(jshort)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithShortArray_withShort_(array, valueToFind);
}

+ (jint)lastIndexOfWithShortArray:(IOSShortArray *)array
                        withShort:(jshort)valueToFind
                          withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithShortArray_withShort_withInt_(array, valueToFind, startIndex);
}

+ (jboolean)containsWithShortArray:(IOSShortArray *)array
                         withShort:(jshort)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_containsWithShortArray_withShort_(array, valueToFind);
}

+ (jint)indexOfWithCharArray:(IOSCharArray *)array
                    withChar:(jchar)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithCharArray_withChar_(array, valueToFind);
}

+ (jint)indexOfWithCharArray:(IOSCharArray *)array
                    withChar:(jchar)valueToFind
                     withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithCharArray_withChar_withInt_(array, valueToFind, startIndex);
}

+ (jint)lastIndexOfWithCharArray:(IOSCharArray *)array
                        withChar:(jchar)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithCharArray_withChar_(array, valueToFind);
}

+ (jint)lastIndexOfWithCharArray:(IOSCharArray *)array
                        withChar:(jchar)valueToFind
                         withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithCharArray_withChar_withInt_(array, valueToFind, startIndex);
}

+ (jboolean)containsWithCharArray:(IOSCharArray *)array
                         withChar:(jchar)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_containsWithCharArray_withChar_(array, valueToFind);
}

+ (jint)indexOfWithByteArray:(IOSByteArray *)array
                    withByte:(jbyte)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithByteArray_withByte_(array, valueToFind);
}

+ (jint)indexOfWithByteArray:(IOSByteArray *)array
                    withByte:(jbyte)valueToFind
                     withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithByteArray_withByte_withInt_(array, valueToFind, startIndex);
}

+ (jint)lastIndexOfWithByteArray:(IOSByteArray *)array
                        withByte:(jbyte)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithByteArray_withByte_(array, valueToFind);
}

+ (jint)lastIndexOfWithByteArray:(IOSByteArray *)array
                        withByte:(jbyte)valueToFind
                         withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithByteArray_withByte_withInt_(array, valueToFind, startIndex);
}

+ (jboolean)containsWithByteArray:(IOSByteArray *)array
                         withByte:(jbyte)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_containsWithByteArray_withByte_(array, valueToFind);
}

+ (jint)indexOfWithDoubleArray:(IOSDoubleArray *)array
                    withDouble:(jdouble)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_(array, valueToFind);
}

+ (jint)indexOfWithDoubleArray:(IOSDoubleArray *)array
                    withDouble:(jdouble)valueToFind
                    withDouble:(jdouble)tolerance {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_withDouble_(array, valueToFind, tolerance);
}

+ (jint)indexOfWithDoubleArray:(IOSDoubleArray *)array
                    withDouble:(jdouble)valueToFind
                       withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_withInt_(array, valueToFind, startIndex);
}

+ (jint)indexOfWithDoubleArray:(IOSDoubleArray *)array
                    withDouble:(jdouble)valueToFind
                       withInt:(jint)startIndex
                    withDouble:(jdouble)tolerance {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_withInt_withDouble_(array, valueToFind, startIndex, tolerance);
}

+ (jint)lastIndexOfWithDoubleArray:(IOSDoubleArray *)array
                        withDouble:(jdouble)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithDoubleArray_withDouble_(array, valueToFind);
}

+ (jint)lastIndexOfWithDoubleArray:(IOSDoubleArray *)array
                        withDouble:(jdouble)valueToFind
                        withDouble:(jdouble)tolerance {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithDoubleArray_withDouble_withDouble_(array, valueToFind, tolerance);
}

+ (jint)lastIndexOfWithDoubleArray:(IOSDoubleArray *)array
                        withDouble:(jdouble)valueToFind
                           withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithDoubleArray_withDouble_withInt_(array, valueToFind, startIndex);
}

+ (jint)lastIndexOfWithDoubleArray:(IOSDoubleArray *)array
                        withDouble:(jdouble)valueToFind
                           withInt:(jint)startIndex
                        withDouble:(jdouble)tolerance {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithDoubleArray_withDouble_withInt_withDouble_(array, valueToFind, startIndex, tolerance);
}

+ (jboolean)containsWithDoubleArray:(IOSDoubleArray *)array
                         withDouble:(jdouble)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_containsWithDoubleArray_withDouble_(array, valueToFind);
}

+ (jboolean)containsWithDoubleArray:(IOSDoubleArray *)array
                         withDouble:(jdouble)valueToFind
                         withDouble:(jdouble)tolerance {
  return OrgApacheCommonsLang3ArrayUtils_containsWithDoubleArray_withDouble_withDouble_(array, valueToFind, tolerance);
}

+ (jint)indexOfWithFloatArray:(IOSFloatArray *)array
                    withFloat:(jfloat)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithFloatArray_withFloat_(array, valueToFind);
}

+ (jint)indexOfWithFloatArray:(IOSFloatArray *)array
                    withFloat:(jfloat)valueToFind
                      withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithFloatArray_withFloat_withInt_(array, valueToFind, startIndex);
}

+ (jint)lastIndexOfWithFloatArray:(IOSFloatArray *)array
                        withFloat:(jfloat)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithFloatArray_withFloat_(array, valueToFind);
}

+ (jint)lastIndexOfWithFloatArray:(IOSFloatArray *)array
                        withFloat:(jfloat)valueToFind
                          withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithFloatArray_withFloat_withInt_(array, valueToFind, startIndex);
}

+ (jboolean)containsWithFloatArray:(IOSFloatArray *)array
                         withFloat:(jfloat)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_containsWithFloatArray_withFloat_(array, valueToFind);
}

+ (jint)indexOfWithBooleanArray:(IOSBooleanArray *)array
                    withBoolean:(jboolean)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithBooleanArray_withBoolean_(array, valueToFind);
}

+ (jint)indexOfWithBooleanArray:(IOSBooleanArray *)array
                    withBoolean:(jboolean)valueToFind
                        withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithBooleanArray_withBoolean_withInt_(array, valueToFind, startIndex);
}

+ (jint)lastIndexOfWithBooleanArray:(IOSBooleanArray *)array
                        withBoolean:(jboolean)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithBooleanArray_withBoolean_(array, valueToFind);
}

+ (jint)lastIndexOfWithBooleanArray:(IOSBooleanArray *)array
                        withBoolean:(jboolean)valueToFind
                            withInt:(jint)startIndex {
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithBooleanArray_withBoolean_withInt_(array, valueToFind, startIndex);
}

+ (jboolean)containsWithBooleanArray:(IOSBooleanArray *)array
                         withBoolean:(jboolean)valueToFind {
  return OrgApacheCommonsLang3ArrayUtils_containsWithBooleanArray_withBoolean_(array, valueToFind);
}

+ (IOSCharArray *)toPrimitiveWithJavaLangCharacterArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangCharacterArray_(array);
}

+ (IOSCharArray *)toPrimitiveWithJavaLangCharacterArray:(IOSObjectArray *)array
                                               withChar:(jchar)valueForNull {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangCharacterArray_withChar_(array, valueForNull);
}

+ (IOSObjectArray *)toObjectWithCharArray:(IOSCharArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toObjectWithCharArray_(array);
}

+ (IOSLongArray *)toPrimitiveWithJavaLangLongArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangLongArray_(array);
}

+ (IOSLongArray *)toPrimitiveWithJavaLangLongArray:(IOSObjectArray *)array
                                          withLong:(jlong)valueForNull {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangLongArray_withLong_(array, valueForNull);
}

+ (IOSObjectArray *)toObjectWithLongArray:(IOSLongArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toObjectWithLongArray_(array);
}

+ (IOSIntArray *)toPrimitiveWithJavaLangIntegerArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangIntegerArray_(array);
}

+ (IOSIntArray *)toPrimitiveWithJavaLangIntegerArray:(IOSObjectArray *)array
                                             withInt:(jint)valueForNull {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangIntegerArray_withInt_(array, valueForNull);
}

+ (IOSObjectArray *)toObjectWithIntArray:(IOSIntArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toObjectWithIntArray_(array);
}

+ (IOSShortArray *)toPrimitiveWithJavaLangShortArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangShortArray_(array);
}

+ (IOSShortArray *)toPrimitiveWithJavaLangShortArray:(IOSObjectArray *)array
                                           withShort:(jshort)valueForNull {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangShortArray_withShort_(array, valueForNull);
}

+ (IOSObjectArray *)toObjectWithShortArray:(IOSShortArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toObjectWithShortArray_(array);
}

+ (IOSByteArray *)toPrimitiveWithJavaLangByteArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangByteArray_(array);
}

+ (IOSByteArray *)toPrimitiveWithJavaLangByteArray:(IOSObjectArray *)array
                                          withByte:(jbyte)valueForNull {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangByteArray_withByte_(array, valueForNull);
}

+ (IOSObjectArray *)toObjectWithByteArray:(IOSByteArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toObjectWithByteArray_(array);
}

+ (IOSDoubleArray *)toPrimitiveWithJavaLangDoubleArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangDoubleArray_(array);
}

+ (IOSDoubleArray *)toPrimitiveWithJavaLangDoubleArray:(IOSObjectArray *)array
                                            withDouble:(jdouble)valueForNull {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangDoubleArray_withDouble_(array, valueForNull);
}

+ (IOSObjectArray *)toObjectWithDoubleArray:(IOSDoubleArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toObjectWithDoubleArray_(array);
}

+ (IOSFloatArray *)toPrimitiveWithJavaLangFloatArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangFloatArray_(array);
}

+ (IOSFloatArray *)toPrimitiveWithJavaLangFloatArray:(IOSObjectArray *)array
                                           withFloat:(jfloat)valueForNull {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangFloatArray_withFloat_(array, valueForNull);
}

+ (IOSObjectArray *)toObjectWithFloatArray:(IOSFloatArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toObjectWithFloatArray_(array);
}

+ (id)toPrimitiveWithId:(id)array {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithId_(array);
}

+ (IOSBooleanArray *)toPrimitiveWithJavaLangBooleanArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangBooleanArray_(array);
}

+ (IOSBooleanArray *)toPrimitiveWithJavaLangBooleanArray:(IOSObjectArray *)array
                                             withBoolean:(jboolean)valueForNull {
  return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangBooleanArray_withBoolean_(array, valueForNull);
}

+ (IOSObjectArray *)toObjectWithBooleanArray:(IOSBooleanArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_toObjectWithBooleanArray_(array);
}

+ (jboolean)isEmptyWithNSObjectArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(array);
}

+ (jboolean)isEmptyWithLongArray:(IOSLongArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isEmptyWithLongArray_(array);
}

+ (jboolean)isEmptyWithIntArray:(IOSIntArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isEmptyWithIntArray_(array);
}

+ (jboolean)isEmptyWithShortArray:(IOSShortArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isEmptyWithShortArray_(array);
}

+ (jboolean)isEmptyWithCharArray:(IOSCharArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isEmptyWithCharArray_(array);
}

+ (jboolean)isEmptyWithByteArray:(IOSByteArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isEmptyWithByteArray_(array);
}

+ (jboolean)isEmptyWithDoubleArray:(IOSDoubleArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isEmptyWithDoubleArray_(array);
}

+ (jboolean)isEmptyWithFloatArray:(IOSFloatArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isEmptyWithFloatArray_(array);
}

+ (jboolean)isEmptyWithBooleanArray:(IOSBooleanArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isEmptyWithBooleanArray_(array);
}

+ (jboolean)isNotEmptyWithNSObjectArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithNSObjectArray_(array);
}

+ (jboolean)isNotEmptyWithLongArray:(IOSLongArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithLongArray_(array);
}

+ (jboolean)isNotEmptyWithIntArray:(IOSIntArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithIntArray_(array);
}

+ (jboolean)isNotEmptyWithShortArray:(IOSShortArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithShortArray_(array);
}

+ (jboolean)isNotEmptyWithCharArray:(IOSCharArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithCharArray_(array);
}

+ (jboolean)isNotEmptyWithByteArray:(IOSByteArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithByteArray_(array);
}

+ (jboolean)isNotEmptyWithDoubleArray:(IOSDoubleArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithDoubleArray_(array);
}

+ (jboolean)isNotEmptyWithFloatArray:(IOSFloatArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithFloatArray_(array);
}

+ (jboolean)isNotEmptyWithBooleanArray:(IOSBooleanArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithBooleanArray_(array);
}

+ (IOSObjectArray *)addAllWithNSObjectArray:(IOSObjectArray *)array1
                          withNSObjectArray:(IOSObjectArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_addAllWithNSObjectArray_withNSObjectArray_(array1, array2);
}

+ (IOSBooleanArray *)addAllWithBooleanArray:(IOSBooleanArray *)array1
                           withBooleanArray:(IOSBooleanArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_addAllWithBooleanArray_withBooleanArray_(array1, array2);
}

+ (IOSCharArray *)addAllWithCharArray:(IOSCharArray *)array1
                        withCharArray:(IOSCharArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_addAllWithCharArray_withCharArray_(array1, array2);
}

+ (IOSByteArray *)addAllWithByteArray:(IOSByteArray *)array1
                        withByteArray:(IOSByteArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_addAllWithByteArray_withByteArray_(array1, array2);
}

+ (IOSShortArray *)addAllWithShortArray:(IOSShortArray *)array1
                         withShortArray:(IOSShortArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_addAllWithShortArray_withShortArray_(array1, array2);
}

+ (IOSIntArray *)addAllWithIntArray:(IOSIntArray *)array1
                       withIntArray:(IOSIntArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_addAllWithIntArray_withIntArray_(array1, array2);
}

+ (IOSLongArray *)addAllWithLongArray:(IOSLongArray *)array1
                        withLongArray:(IOSLongArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_addAllWithLongArray_withLongArray_(array1, array2);
}

+ (IOSFloatArray *)addAllWithFloatArray:(IOSFloatArray *)array1
                         withFloatArray:(IOSFloatArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_addAllWithFloatArray_withFloatArray_(array1, array2);
}

+ (IOSDoubleArray *)addAllWithDoubleArray:(IOSDoubleArray *)array1
                          withDoubleArray:(IOSDoubleArray *)array2 {
  return OrgApacheCommonsLang3ArrayUtils_addAllWithDoubleArray_withDoubleArray_(array1, array2);
}

+ (IOSObjectArray *)addWithNSObjectArray:(IOSObjectArray *)array
                                  withId:(id)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithNSObjectArray_withId_(array, element);
}

+ (IOSBooleanArray *)addWithBooleanArray:(IOSBooleanArray *)array
                             withBoolean:(jboolean)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithBooleanArray_withBoolean_(array, element);
}

+ (IOSByteArray *)addWithByteArray:(IOSByteArray *)array
                          withByte:(jbyte)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithByteArray_withByte_(array, element);
}

+ (IOSCharArray *)addWithCharArray:(IOSCharArray *)array
                          withChar:(jchar)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithCharArray_withChar_(array, element);
}

+ (IOSDoubleArray *)addWithDoubleArray:(IOSDoubleArray *)array
                            withDouble:(jdouble)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithDoubleArray_withDouble_(array, element);
}

+ (IOSFloatArray *)addWithFloatArray:(IOSFloatArray *)array
                           withFloat:(jfloat)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithFloatArray_withFloat_(array, element);
}

+ (IOSIntArray *)addWithIntArray:(IOSIntArray *)array
                         withInt:(jint)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithIntArray_withInt_(array, element);
}

+ (IOSLongArray *)addWithLongArray:(IOSLongArray *)array
                          withLong:(jlong)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithLongArray_withLong_(array, element);
}

+ (IOSShortArray *)addWithShortArray:(IOSShortArray *)array
                           withShort:(jshort)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithShortArray_withShort_(array, element);
}

+ (id)copyArrayGrow1WithId:(id)array
              withIOSClass:(IOSClass *)newArrayComponentType {
  return OrgApacheCommonsLang3ArrayUtils_copyArrayGrow1WithId_withIOSClass_(array, newArrayComponentType);
}

+ (IOSObjectArray *)addWithNSObjectArray:(IOSObjectArray *)array
                                 withInt:(jint)index
                                  withId:(id)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithNSObjectArray_withInt_withId_(array, index, element);
}

+ (IOSBooleanArray *)addWithBooleanArray:(IOSBooleanArray *)array
                                 withInt:(jint)index
                             withBoolean:(jboolean)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithBooleanArray_withInt_withBoolean_(array, index, element);
}

+ (IOSCharArray *)addWithCharArray:(IOSCharArray *)array
                           withInt:(jint)index
                          withChar:(jchar)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithCharArray_withInt_withChar_(array, index, element);
}

+ (IOSByteArray *)addWithByteArray:(IOSByteArray *)array
                           withInt:(jint)index
                          withByte:(jbyte)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithByteArray_withInt_withByte_(array, index, element);
}

+ (IOSShortArray *)addWithShortArray:(IOSShortArray *)array
                             withInt:(jint)index
                           withShort:(jshort)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithShortArray_withInt_withShort_(array, index, element);
}

+ (IOSIntArray *)addWithIntArray:(IOSIntArray *)array
                         withInt:(jint)index
                         withInt:(jint)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithIntArray_withInt_withInt_(array, index, element);
}

+ (IOSLongArray *)addWithLongArray:(IOSLongArray *)array
                           withInt:(jint)index
                          withLong:(jlong)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithLongArray_withInt_withLong_(array, index, element);
}

+ (IOSFloatArray *)addWithFloatArray:(IOSFloatArray *)array
                             withInt:(jint)index
                           withFloat:(jfloat)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithFloatArray_withInt_withFloat_(array, index, element);
}

+ (IOSDoubleArray *)addWithDoubleArray:(IOSDoubleArray *)array
                               withInt:(jint)index
                            withDouble:(jdouble)element {
  return OrgApacheCommonsLang3ArrayUtils_addWithDoubleArray_withInt_withDouble_(array, index, element);
}

+ (id)addWithId:(id)array
        withInt:(jint)index
         withId:(id)element
   withIOSClass:(IOSClass *)clss {
  return OrgApacheCommonsLang3ArrayUtils_addWithId_withInt_withId_withIOSClass_(array, index, element, clss);
}

+ (IOSObjectArray *)removeWithNSObjectArray:(IOSObjectArray *)array
                                    withInt:(jint)index {
  return OrgApacheCommonsLang3ArrayUtils_removeWithNSObjectArray_withInt_(array, index);
}

+ (IOSObjectArray *)removeElementWithNSObjectArray:(IOSObjectArray *)array
                                            withId:(id)element {
  return OrgApacheCommonsLang3ArrayUtils_removeElementWithNSObjectArray_withId_(array, element);
}

+ (IOSBooleanArray *)removeWithBooleanArray:(IOSBooleanArray *)array
                                    withInt:(jint)index {
  return OrgApacheCommonsLang3ArrayUtils_removeWithBooleanArray_withInt_(array, index);
}

+ (IOSBooleanArray *)removeElementWithBooleanArray:(IOSBooleanArray *)array
                                       withBoolean:(jboolean)element {
  return OrgApacheCommonsLang3ArrayUtils_removeElementWithBooleanArray_withBoolean_(array, element);
}

+ (IOSByteArray *)removeWithByteArray:(IOSByteArray *)array
                              withInt:(jint)index {
  return OrgApacheCommonsLang3ArrayUtils_removeWithByteArray_withInt_(array, index);
}

+ (IOSByteArray *)removeElementWithByteArray:(IOSByteArray *)array
                                    withByte:(jbyte)element {
  return OrgApacheCommonsLang3ArrayUtils_removeElementWithByteArray_withByte_(array, element);
}

+ (IOSCharArray *)removeWithCharArray:(IOSCharArray *)array
                              withInt:(jint)index {
  return OrgApacheCommonsLang3ArrayUtils_removeWithCharArray_withInt_(array, index);
}

+ (IOSCharArray *)removeElementWithCharArray:(IOSCharArray *)array
                                    withChar:(jchar)element {
  return OrgApacheCommonsLang3ArrayUtils_removeElementWithCharArray_withChar_(array, element);
}

+ (IOSDoubleArray *)removeWithDoubleArray:(IOSDoubleArray *)array
                                  withInt:(jint)index {
  return OrgApacheCommonsLang3ArrayUtils_removeWithDoubleArray_withInt_(array, index);
}

+ (IOSDoubleArray *)removeElementWithDoubleArray:(IOSDoubleArray *)array
                                      withDouble:(jdouble)element {
  return OrgApacheCommonsLang3ArrayUtils_removeElementWithDoubleArray_withDouble_(array, element);
}

+ (IOSFloatArray *)removeWithFloatArray:(IOSFloatArray *)array
                                withInt:(jint)index {
  return OrgApacheCommonsLang3ArrayUtils_removeWithFloatArray_withInt_(array, index);
}

+ (IOSFloatArray *)removeElementWithFloatArray:(IOSFloatArray *)array
                                     withFloat:(jfloat)element {
  return OrgApacheCommonsLang3ArrayUtils_removeElementWithFloatArray_withFloat_(array, element);
}

+ (IOSIntArray *)removeWithIntArray:(IOSIntArray *)array
                            withInt:(jint)index {
  return OrgApacheCommonsLang3ArrayUtils_removeWithIntArray_withInt_(array, index);
}

+ (IOSIntArray *)removeElementWithIntArray:(IOSIntArray *)array
                                   withInt:(jint)element {
  return OrgApacheCommonsLang3ArrayUtils_removeElementWithIntArray_withInt_(array, element);
}

+ (IOSLongArray *)removeWithLongArray:(IOSLongArray *)array
                              withInt:(jint)index {
  return OrgApacheCommonsLang3ArrayUtils_removeWithLongArray_withInt_(array, index);
}

+ (IOSLongArray *)removeElementWithLongArray:(IOSLongArray *)array
                                    withLong:(jlong)element {
  return OrgApacheCommonsLang3ArrayUtils_removeElementWithLongArray_withLong_(array, element);
}

+ (IOSShortArray *)removeWithShortArray:(IOSShortArray *)array
                                withInt:(jint)index {
  return OrgApacheCommonsLang3ArrayUtils_removeWithShortArray_withInt_(array, index);
}

+ (IOSShortArray *)removeElementWithShortArray:(IOSShortArray *)array
                                     withShort:(jshort)element {
  return OrgApacheCommonsLang3ArrayUtils_removeElementWithShortArray_withShort_(array, element);
}

+ (id)removeWithId:(id)array
           withInt:(jint)index {
  return OrgApacheCommonsLang3ArrayUtils_removeWithId_withInt_(array, index);
}

+ (IOSObjectArray *)removeAllWithNSObjectArray:(IOSObjectArray *)array
                                  withIntArray:(IOSIntArray *)indices {
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithNSObjectArray_withIntArray_(array, indices);
}

+ (IOSObjectArray *)removeElementsWithNSObjectArray:(IOSObjectArray *)array
                                  withNSObjectArray:(IOSObjectArray *)values {
  return OrgApacheCommonsLang3ArrayUtils_removeElementsWithNSObjectArray_withNSObjectArray_(array, values);
}

+ (IOSByteArray *)removeAllWithByteArray:(IOSByteArray *)array
                            withIntArray:(IOSIntArray *)indices {
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithByteArray_withIntArray_(array, indices);
}

+ (IOSByteArray *)removeElementsWithByteArray:(IOSByteArray *)array
                                withByteArray:(IOSByteArray *)values {
  return OrgApacheCommonsLang3ArrayUtils_removeElementsWithByteArray_withByteArray_(array, values);
}

+ (IOSShortArray *)removeAllWithShortArray:(IOSShortArray *)array
                              withIntArray:(IOSIntArray *)indices {
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithShortArray_withIntArray_(array, indices);
}

+ (IOSShortArray *)removeElementsWithShortArray:(IOSShortArray *)array
                                 withShortArray:(IOSShortArray *)values {
  return OrgApacheCommonsLang3ArrayUtils_removeElementsWithShortArray_withShortArray_(array, values);
}

+ (IOSIntArray *)removeAllWithIntArray:(IOSIntArray *)array
                          withIntArray:(IOSIntArray *)indices {
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithIntArray_withIntArray_(array, indices);
}

+ (IOSIntArray *)removeElementsWithIntArray:(IOSIntArray *)array
                               withIntArray:(IOSIntArray *)values {
  return OrgApacheCommonsLang3ArrayUtils_removeElementsWithIntArray_withIntArray_(array, values);
}

+ (IOSCharArray *)removeAllWithCharArray:(IOSCharArray *)array
                            withIntArray:(IOSIntArray *)indices {
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithCharArray_withIntArray_(array, indices);
}

+ (IOSCharArray *)removeElementsWithCharArray:(IOSCharArray *)array
                                withCharArray:(IOSCharArray *)values {
  return OrgApacheCommonsLang3ArrayUtils_removeElementsWithCharArray_withCharArray_(array, values);
}

+ (IOSLongArray *)removeAllWithLongArray:(IOSLongArray *)array
                            withIntArray:(IOSIntArray *)indices {
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithLongArray_withIntArray_(array, indices);
}

+ (IOSLongArray *)removeElementsWithLongArray:(IOSLongArray *)array
                                withLongArray:(IOSLongArray *)values {
  return OrgApacheCommonsLang3ArrayUtils_removeElementsWithLongArray_withLongArray_(array, values);
}

+ (IOSFloatArray *)removeAllWithFloatArray:(IOSFloatArray *)array
                              withIntArray:(IOSIntArray *)indices {
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithFloatArray_withIntArray_(array, indices);
}

+ (IOSFloatArray *)removeElementsWithFloatArray:(IOSFloatArray *)array
                                 withFloatArray:(IOSFloatArray *)values {
  return OrgApacheCommonsLang3ArrayUtils_removeElementsWithFloatArray_withFloatArray_(array, values);
}

+ (IOSDoubleArray *)removeAllWithDoubleArray:(IOSDoubleArray *)array
                                withIntArray:(IOSIntArray *)indices {
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithDoubleArray_withIntArray_(array, indices);
}

+ (IOSDoubleArray *)removeElementsWithDoubleArray:(IOSDoubleArray *)array
                                  withDoubleArray:(IOSDoubleArray *)values {
  return OrgApacheCommonsLang3ArrayUtils_removeElementsWithDoubleArray_withDoubleArray_(array, values);
}

+ (IOSBooleanArray *)removeAllWithBooleanArray:(IOSBooleanArray *)array
                                  withIntArray:(IOSIntArray *)indices {
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithBooleanArray_withIntArray_(array, indices);
}

+ (IOSBooleanArray *)removeElementsWithBooleanArray:(IOSBooleanArray *)array
                                   withBooleanArray:(IOSBooleanArray *)values {
  return OrgApacheCommonsLang3ArrayUtils_removeElementsWithBooleanArray_withBooleanArray_(array, values);
}

+ (id)removeAllWithId:(id)array
         withIntArray:(IOSIntArray *)indices {
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withIntArray_(array, indices);
}

+ (id)removeAllWithId:(id)array
   withJavaUtilBitSet:(JavaUtilBitSet *)indices {
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withJavaUtilBitSet_(array, indices);
}

+ (jboolean)isSortedWithJavaLangComparableArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isSortedWithJavaLangComparableArray_(array);
}

+ (jboolean)isSortedWithNSObjectArray:(IOSObjectArray *)array
               withJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  return OrgApacheCommonsLang3ArrayUtils_isSortedWithNSObjectArray_withJavaUtilComparator_(array, comparator);
}

+ (jboolean)isSortedWithIntArray:(IOSIntArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isSortedWithIntArray_(array);
}

+ (jboolean)isSortedWithLongArray:(IOSLongArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isSortedWithLongArray_(array);
}

+ (jboolean)isSortedWithShortArray:(IOSShortArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isSortedWithShortArray_(array);
}

+ (jboolean)isSortedWithDoubleArray:(IOSDoubleArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isSortedWithDoubleArray_(array);
}

+ (jboolean)isSortedWithFloatArray:(IOSFloatArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isSortedWithFloatArray_(array);
}

+ (jboolean)isSortedWithByteArray:(IOSByteArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isSortedWithByteArray_(array);
}

+ (jboolean)isSortedWithCharArray:(IOSCharArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isSortedWithCharArray_(array);
}

+ (jboolean)isSortedWithBooleanArray:(IOSBooleanArray *)array {
  return OrgApacheCommonsLang3ArrayUtils_isSortedWithBooleanArray_(array);
}

+ (IOSBooleanArray *)removeAllOccurencesWithBooleanArray:(IOSBooleanArray *)array
                                             withBoolean:(jboolean)element {
  return OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithBooleanArray_withBoolean_(array, element);
}

+ (IOSCharArray *)removeAllOccurencesWithCharArray:(IOSCharArray *)array
                                          withChar:(jchar)element {
  return OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithCharArray_withChar_(array, element);
}

+ (IOSByteArray *)removeAllOccurencesWithByteArray:(IOSByteArray *)array
                                          withByte:(jbyte)element {
  return OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithByteArray_withByte_(array, element);
}

+ (IOSShortArray *)removeAllOccurencesWithShortArray:(IOSShortArray *)array
                                           withShort:(jshort)element {
  return OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithShortArray_withShort_(array, element);
}

+ (IOSIntArray *)removeAllOccurencesWithIntArray:(IOSIntArray *)array
                                         withInt:(jint)element {
  return OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithIntArray_withInt_(array, element);
}

+ (IOSLongArray *)removeAllOccurencesWithLongArray:(IOSLongArray *)array
                                          withLong:(jlong)element {
  return OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithLongArray_withLong_(array, element);
}

+ (IOSFloatArray *)removeAllOccurencesWithFloatArray:(IOSFloatArray *)array
                                           withFloat:(jfloat)element {
  return OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithFloatArray_withFloat_(array, element);
}

+ (IOSDoubleArray *)removeAllOccurencesWithDoubleArray:(IOSDoubleArray *)array
                                            withDouble:(jdouble)element {
  return OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithDoubleArray_withDouble_(array, element);
}

+ (IOSObjectArray *)removeAllOccurencesWithNSObjectArray:(IOSObjectArray *)array
                                                  withId:(id)element {
  return OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithNSObjectArray_withId_(array, element);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 3, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 4, 5, -1, -1, 6, -1 },
    { NULL, "LJavaUtilMap;", 0x9, 7, 8, -1, 9, -1, -1 },
    { NULL, "[LNSObject;", 0x89, 10, 8, -1, 11, -1, -1 },
    { NULL, "[LNSObject;", 0x9, 12, 8, -1, 11, -1, -1 },
    { NULL, "[J", 0x9, 12, 13, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 12, 14, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 12, 15, -1, -1, -1, -1 },
    { NULL, "[C", 0x9, 12, 16, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 12, 17, -1, -1, -1, -1 },
    { NULL, "[D", 0x9, 12, 18, -1, -1, -1, -1 },
    { NULL, "[F", 0x9, 12, 19, -1, -1, -1, -1 },
    { NULL, "[Z", 0x9, 12, 20, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x9, 21, 22, -1, 23, -1, -1 },
    { NULL, "[LNSObject;", 0x9, 21, 8, -1, -1, -1, -1 },
    { NULL, "[LIOSClass;", 0x9, 21, 24, -1, 25, -1, -1 },
    { NULL, "[LNSString;", 0x9, 21, 26, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 21, 13, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 21, 14, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 21, 15, -1, -1, -1, -1 },
    { NULL, "[C", 0x9, 21, 16, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 21, 17, -1, -1, -1, -1 },
    { NULL, "[D", 0x9, 21, 18, -1, -1, -1, -1 },
    { NULL, "[F", 0x9, 21, 19, -1, -1, -1, -1 },
    { NULL, "[Z", 0x9, 21, 20, -1, -1, -1, -1 },
    { NULL, "[LJavaLangLong;", 0x9, 21, 27, -1, -1, -1, -1 },
    { NULL, "[LJavaLangInteger;", 0x9, 21, 28, -1, -1, -1, -1 },
    { NULL, "[LJavaLangShort;", 0x9, 21, 29, -1, -1, -1, -1 },
    { NULL, "[LJavaLangCharacter;", 0x9, 21, 30, -1, -1, -1, -1 },
    { NULL, "[LJavaLangByte;", 0x9, 21, 31, -1, -1, -1, -1 },
    { NULL, "[LJavaLangDouble;", 0x9, 21, 32, -1, -1, -1, -1 },
    { NULL, "[LJavaLangFloat;", 0x9, 21, 33, -1, -1, -1, -1 },
    { NULL, "[LJavaLangBoolean;", 0x9, 21, 34, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x9, 35, 36, -1, 37, -1, -1 },
    { NULL, "[J", 0x9, 35, 38, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 35, 39, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 35, 40, -1, -1, -1, -1 },
    { NULL, "[C", 0x9, 35, 41, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 35, 42, -1, -1, -1, -1 },
    { NULL, "[D", 0x9, 35, 43, -1, -1, -1, -1 },
    { NULL, "[F", 0x9, 35, 44, -1, -1, -1, -1 },
    { NULL, "[Z", 0x9, 35, 45, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 46, 47, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 46, 48, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 46, 49, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 46, 50, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 46, 51, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 46, 52, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 46, 53, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 46, 54, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 46, 55, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 56, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 57, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 45, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 42, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 41, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 43, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 44, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 39, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 38, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 36, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 40, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 36, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 38, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 39, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 40, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 41, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 42, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 43, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 44, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 45, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 60, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 61, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 62, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 63, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 64, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 65, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 66, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 67, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 68, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 70, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 71, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 72, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 73, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 74, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 75, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 76, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 77, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 78, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 60, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 61, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 62, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 63, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 64, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 65, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 66, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 67, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 68, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 80, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 81, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 80, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 81, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 83, 80, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 84, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 85, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 84, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 85, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 83, 84, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 72, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 39, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 72, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 39, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 83, 72, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 86, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 87, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 86, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 87, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 83, 86, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 88, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 89, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 88, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 89, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 83, 88, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 90, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 91, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 90, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 91, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 83, 90, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 92, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 93, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 94, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 95, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 92, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 93, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 94, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 95, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 83, 92, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 83, 93, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 96, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 97, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 96, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 97, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 83, 96, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 98, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 79, 99, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 98, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 99, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 83, 98, -1, -1, -1, -1 },
    { NULL, "[C", 0x9, 100, 30, -1, -1, -1, -1 },
    { NULL, "[C", 0x9, 100, 101, -1, -1, -1, -1 },
    { NULL, "[LJavaLangCharacter;", 0x9, 102, 16, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 100, 27, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 100, 103, -1, -1, -1, -1 },
    { NULL, "[LJavaLangLong;", 0x9, 102, 13, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 100, 28, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 100, 104, -1, -1, -1, -1 },
    { NULL, "[LJavaLangInteger;", 0x9, 102, 14, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 100, 29, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 100, 105, -1, -1, -1, -1 },
    { NULL, "[LJavaLangShort;", 0x9, 102, 15, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 100, 31, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 100, 106, -1, -1, -1, -1 },
    { NULL, "[LJavaLangByte;", 0x9, 102, 17, -1, -1, -1, -1 },
    { NULL, "[D", 0x9, 100, 32, -1, -1, -1, -1 },
    { NULL, "[D", 0x9, 100, 107, -1, -1, -1, -1 },
    { NULL, "[LJavaLangDouble;", 0x9, 102, 18, -1, -1, -1, -1 },
    { NULL, "[F", 0x9, 100, 33, -1, -1, -1, -1 },
    { NULL, "[F", 0x9, 100, 108, -1, -1, -1, -1 },
    { NULL, "[LJavaLangFloat;", 0x9, 102, 19, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 100, 1, -1, -1, -1, -1 },
    { NULL, "[Z", 0x9, 100, 34, -1, -1, -1, -1 },
    { NULL, "[Z", 0x9, 100, 109, -1, -1, -1, -1 },
    { NULL, "[LJavaLangBoolean;", 0x9, 102, 20, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 110, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 110, 13, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 110, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 110, 15, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 110, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 110, 17, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 110, 18, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 110, 19, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 110, 20, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 111, 8, -1, 112, -1, -1 },
    { NULL, "Z", 0x9, 111, 13, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 111, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 111, 15, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 111, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 111, 17, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 111, 18, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 111, 19, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 111, 20, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x89, 113, 47, -1, 114, -1, -1 },
    { NULL, "[Z", 0x89, 113, 55, -1, -1, -1, -1 },
    { NULL, "[C", 0x89, 113, 51, -1, -1, -1, -1 },
    { NULL, "[B", 0x89, 113, 52, -1, -1, -1, -1 },
    { NULL, "[S", 0x89, 113, 50, -1, -1, -1, -1 },
    { NULL, "[I", 0x89, 113, 49, -1, -1, -1, -1 },
    { NULL, "[J", 0x89, 113, 48, -1, -1, -1, -1 },
    { NULL, "[F", 0x89, 113, 54, -1, -1, -1, -1 },
    { NULL, "[D", 0x89, 113, 53, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x9, 115, 80, -1, 116, -1, -1 },
    { NULL, "[Z", 0x9, 115, 98, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 115, 90, -1, -1, -1, -1 },
    { NULL, "[C", 0x9, 115, 88, -1, -1, -1, -1 },
    { NULL, "[D", 0x9, 115, 92, -1, -1, -1, -1 },
    { NULL, "[F", 0x9, 115, 96, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 115, 72, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 115, 84, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 115, 86, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0xa, 117, 118, -1, 119, -1, -1 },
    { NULL, "[LNSObject;", 0x9, 115, 120, -1, 121, -1, -1 },
    { NULL, "[Z", 0x9, 115, 122, -1, -1, -1, -1 },
    { NULL, "[C", 0x9, 115, 123, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 115, 124, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 115, 125, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 115, 39, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 115, 126, -1, -1, -1, -1 },
    { NULL, "[F", 0x9, 115, 127, -1, -1, -1, -1 },
    { NULL, "[D", 0x9, 115, 128, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0xa, 115, 129, -1, 130, -1, -1 },
    { NULL, "[LNSObject;", 0x9, 131, 70, -1, 132, -1, -1 },
    { NULL, "[LNSObject;", 0x9, 133, 80, -1, 134, -1, -1 },
    { NULL, "[Z", 0x9, 131, 78, -1, -1, -1, -1 },
    { NULL, "[Z", 0x9, 133, 98, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 131, 75, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 133, 90, -1, -1, -1, -1 },
    { NULL, "[C", 0x9, 131, 74, -1, -1, -1, -1 },
    { NULL, "[C", 0x9, 133, 88, -1, -1, -1, -1 },
    { NULL, "[D", 0x9, 131, 76, -1, -1, -1, -1 },
    { NULL, "[D", 0x9, 133, 92, -1, -1, -1, -1 },
    { NULL, "[F", 0x9, 131, 77, -1, -1, -1, -1 },
    { NULL, "[F", 0x9, 133, 96, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 131, 72, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 133, 72, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 131, 71, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 133, 84, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 131, 73, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 133, 86, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0xa, 131, 135, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x89, 136, 137, -1, 138, -1, -1 },
    { NULL, "[LNSObject;", 0x89, 139, 47, -1, 114, -1, -1 },
    { NULL, "[B", 0x89, 136, 140, -1, -1, -1, -1 },
    { NULL, "[B", 0x89, 139, 52, -1, -1, -1, -1 },
    { NULL, "[S", 0x89, 136, 141, -1, -1, -1, -1 },
    { NULL, "[S", 0x89, 139, 50, -1, -1, -1, -1 },
    { NULL, "[I", 0x89, 136, 49, -1, -1, -1, -1 },
    { NULL, "[I", 0x89, 139, 49, -1, -1, -1, -1 },
    { NULL, "[C", 0x89, 136, 142, -1, -1, -1, -1 },
    { NULL, "[C", 0x89, 139, 51, -1, -1, -1, -1 },
    { NULL, "[J", 0x89, 136, 143, -1, -1, -1, -1 },
    { NULL, "[J", 0x89, 139, 48, -1, -1, -1, -1 },
    { NULL, "[F", 0x89, 136, 144, -1, -1, -1, -1 },
    { NULL, "[F", 0x89, 139, 54, -1, -1, -1, -1 },
    { NULL, "[D", 0x89, 136, 145, -1, -1, -1, -1 },
    { NULL, "[D", 0x89, 139, 53, -1, -1, -1, -1 },
    { NULL, "[Z", 0x89, 136, 146, -1, -1, -1, -1 },
    { NULL, "[Z", 0x89, 139, 55, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x88, 136, 147, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x8, 136, 148, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 149, 150, -1, 151, -1, -1 },
    { NULL, "Z", 0x9, 149, 152, -1, 153, -1, -1 },
    { NULL, "Z", 0x9, 149, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 149, 13, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 149, 15, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 149, 18, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 149, 19, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 149, 17, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 149, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 149, 20, -1, -1, -1, -1 },
    { NULL, "[Z", 0x9, 154, 98, -1, -1, -1, -1 },
    { NULL, "[C", 0x9, 154, 88, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 154, 90, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 154, 86, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 154, 72, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 154, 84, -1, -1, -1, -1 },
    { NULL, "[F", 0x9, 154, 96, -1, -1, -1, -1 },
    { NULL, "[D", 0x9, 154, 92, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x9, 154, 80, -1, 116, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(toStringWithId:);
  methods[2].selector = @selector(toStringWithId:withNSString:);
  methods[3].selector = @selector(hashCodeWithId:);
  methods[4].selector = @selector(isEqualsWithId:withId:);
  methods[5].selector = @selector(toMapWithNSObjectArray:);
  methods[6].selector = @selector(toArrayWithNSObjectArray:);
  methods[7].selector = @selector(cloneWithNSObjectArray:);
  methods[8].selector = @selector(cloneWithLongArray:);
  methods[9].selector = @selector(cloneWithIntArray:);
  methods[10].selector = @selector(cloneWithShortArray:);
  methods[11].selector = @selector(cloneWithCharArray:);
  methods[12].selector = @selector(cloneWithByteArray:);
  methods[13].selector = @selector(cloneWithDoubleArray:);
  methods[14].selector = @selector(cloneWithFloatArray:);
  methods[15].selector = @selector(cloneWithBooleanArray:);
  methods[16].selector = @selector(nullToEmptyWithNSObjectArray:withIOSClass:);
  methods[17].selector = @selector(nullToEmptyWithNSObjectArray:);
  methods[18].selector = @selector(nullToEmptyWithIOSClassArray:);
  methods[19].selector = @selector(nullToEmptyWithNSStringArray:);
  methods[20].selector = @selector(nullToEmptyWithLongArray:);
  methods[21].selector = @selector(nullToEmptyWithIntArray:);
  methods[22].selector = @selector(nullToEmptyWithShortArray:);
  methods[23].selector = @selector(nullToEmptyWithCharArray:);
  methods[24].selector = @selector(nullToEmptyWithByteArray:);
  methods[25].selector = @selector(nullToEmptyWithDoubleArray:);
  methods[26].selector = @selector(nullToEmptyWithFloatArray:);
  methods[27].selector = @selector(nullToEmptyWithBooleanArray:);
  methods[28].selector = @selector(nullToEmptyWithJavaLangLongArray:);
  methods[29].selector = @selector(nullToEmptyWithJavaLangIntegerArray:);
  methods[30].selector = @selector(nullToEmptyWithJavaLangShortArray:);
  methods[31].selector = @selector(nullToEmptyWithJavaLangCharacterArray:);
  methods[32].selector = @selector(nullToEmptyWithJavaLangByteArray:);
  methods[33].selector = @selector(nullToEmptyWithJavaLangDoubleArray:);
  methods[34].selector = @selector(nullToEmptyWithJavaLangFloatArray:);
  methods[35].selector = @selector(nullToEmptyWithJavaLangBooleanArray:);
  methods[36].selector = @selector(subarrayWithNSObjectArray:withInt:withInt:);
  methods[37].selector = @selector(subarrayWithLongArray:withInt:withInt:);
  methods[38].selector = @selector(subarrayWithIntArray:withInt:withInt:);
  methods[39].selector = @selector(subarrayWithShortArray:withInt:withInt:);
  methods[40].selector = @selector(subarrayWithCharArray:withInt:withInt:);
  methods[41].selector = @selector(subarrayWithByteArray:withInt:withInt:);
  methods[42].selector = @selector(subarrayWithDoubleArray:withInt:withInt:);
  methods[43].selector = @selector(subarrayWithFloatArray:withInt:withInt:);
  methods[44].selector = @selector(subarrayWithBooleanArray:withInt:withInt:);
  methods[45].selector = @selector(isSameLengthWithNSObjectArray:withNSObjectArray:);
  methods[46].selector = @selector(isSameLengthWithLongArray:withLongArray:);
  methods[47].selector = @selector(isSameLengthWithIntArray:withIntArray:);
  methods[48].selector = @selector(isSameLengthWithShortArray:withShortArray:);
  methods[49].selector = @selector(isSameLengthWithCharArray:withCharArray:);
  methods[50].selector = @selector(isSameLengthWithByteArray:withByteArray:);
  methods[51].selector = @selector(isSameLengthWithDoubleArray:withDoubleArray:);
  methods[52].selector = @selector(isSameLengthWithFloatArray:withFloatArray:);
  methods[53].selector = @selector(isSameLengthWithBooleanArray:withBooleanArray:);
  methods[54].selector = @selector(getLengthWithId:);
  methods[55].selector = @selector(isSameTypeWithId:withId:);
  methods[56].selector = @selector(reverseWithNSObjectArray:);
  methods[57].selector = @selector(reverseWithLongArray:);
  methods[58].selector = @selector(reverseWithIntArray:);
  methods[59].selector = @selector(reverseWithShortArray:);
  methods[60].selector = @selector(reverseWithCharArray:);
  methods[61].selector = @selector(reverseWithByteArray:);
  methods[62].selector = @selector(reverseWithDoubleArray:);
  methods[63].selector = @selector(reverseWithFloatArray:);
  methods[64].selector = @selector(reverseWithBooleanArray:);
  methods[65].selector = @selector(reverseWithBooleanArray:withInt:withInt:);
  methods[66].selector = @selector(reverseWithByteArray:withInt:withInt:);
  methods[67].selector = @selector(reverseWithCharArray:withInt:withInt:);
  methods[68].selector = @selector(reverseWithDoubleArray:withInt:withInt:);
  methods[69].selector = @selector(reverseWithFloatArray:withInt:withInt:);
  methods[70].selector = @selector(reverseWithIntArray:withInt:withInt:);
  methods[71].selector = @selector(reverseWithLongArray:withInt:withInt:);
  methods[72].selector = @selector(reverseWithNSObjectArray:withInt:withInt:);
  methods[73].selector = @selector(reverseWithShortArray:withInt:withInt:);
  methods[74].selector = @selector(swapWithNSObjectArray:withInt:withInt:);
  methods[75].selector = @selector(swapWithLongArray:withInt:withInt:);
  methods[76].selector = @selector(swapWithIntArray:withInt:withInt:);
  methods[77].selector = @selector(swapWithShortArray:withInt:withInt:);
  methods[78].selector = @selector(swapWithCharArray:withInt:withInt:);
  methods[79].selector = @selector(swapWithByteArray:withInt:withInt:);
  methods[80].selector = @selector(swapWithDoubleArray:withInt:withInt:);
  methods[81].selector = @selector(swapWithFloatArray:withInt:withInt:);
  methods[82].selector = @selector(swapWithBooleanArray:withInt:withInt:);
  methods[83].selector = @selector(swapWithBooleanArray:withInt:withInt:withInt:);
  methods[84].selector = @selector(swapWithByteArray:withInt:withInt:withInt:);
  methods[85].selector = @selector(swapWithCharArray:withInt:withInt:withInt:);
  methods[86].selector = @selector(swapWithDoubleArray:withInt:withInt:withInt:);
  methods[87].selector = @selector(swapWithFloatArray:withInt:withInt:withInt:);
  methods[88].selector = @selector(swapWithIntArray:withInt:withInt:withInt:);
  methods[89].selector = @selector(swapWithLongArray:withInt:withInt:withInt:);
  methods[90].selector = @selector(swapWithNSObjectArray:withInt:withInt:withInt:);
  methods[91].selector = @selector(swapWithShortArray:withInt:withInt:withInt:);
  methods[92].selector = @selector(shiftWithNSObjectArray:withInt:);
  methods[93].selector = @selector(shiftWithLongArray:withInt:);
  methods[94].selector = @selector(shiftWithIntArray:withInt:);
  methods[95].selector = @selector(shiftWithShortArray:withInt:);
  methods[96].selector = @selector(shiftWithCharArray:withInt:);
  methods[97].selector = @selector(shiftWithByteArray:withInt:);
  methods[98].selector = @selector(shiftWithDoubleArray:withInt:);
  methods[99].selector = @selector(shiftWithFloatArray:withInt:);
  methods[100].selector = @selector(shiftWithBooleanArray:withInt:);
  methods[101].selector = @selector(shiftWithBooleanArray:withInt:withInt:withInt:);
  methods[102].selector = @selector(shiftWithByteArray:withInt:withInt:withInt:);
  methods[103].selector = @selector(shiftWithCharArray:withInt:withInt:withInt:);
  methods[104].selector = @selector(shiftWithDoubleArray:withInt:withInt:withInt:);
  methods[105].selector = @selector(shiftWithFloatArray:withInt:withInt:withInt:);
  methods[106].selector = @selector(shiftWithIntArray:withInt:withInt:withInt:);
  methods[107].selector = @selector(shiftWithLongArray:withInt:withInt:withInt:);
  methods[108].selector = @selector(shiftWithNSObjectArray:withInt:withInt:withInt:);
  methods[109].selector = @selector(shiftWithShortArray:withInt:withInt:withInt:);
  methods[110].selector = @selector(indexOfWithNSObjectArray:withId:);
  methods[111].selector = @selector(indexOfWithNSObjectArray:withId:withInt:);
  methods[112].selector = @selector(lastIndexOfWithNSObjectArray:withId:);
  methods[113].selector = @selector(lastIndexOfWithNSObjectArray:withId:withInt:);
  methods[114].selector = @selector(containsWithNSObjectArray:withId:);
  methods[115].selector = @selector(indexOfWithLongArray:withLong:);
  methods[116].selector = @selector(indexOfWithLongArray:withLong:withInt:);
  methods[117].selector = @selector(lastIndexOfWithLongArray:withLong:);
  methods[118].selector = @selector(lastIndexOfWithLongArray:withLong:withInt:);
  methods[119].selector = @selector(containsWithLongArray:withLong:);
  methods[120].selector = @selector(indexOfWithIntArray:withInt:);
  methods[121].selector = @selector(indexOfWithIntArray:withInt:withInt:);
  methods[122].selector = @selector(lastIndexOfWithIntArray:withInt:);
  methods[123].selector = @selector(lastIndexOfWithIntArray:withInt:withInt:);
  methods[124].selector = @selector(containsWithIntArray:withInt:);
  methods[125].selector = @selector(indexOfWithShortArray:withShort:);
  methods[126].selector = @selector(indexOfWithShortArray:withShort:withInt:);
  methods[127].selector = @selector(lastIndexOfWithShortArray:withShort:);
  methods[128].selector = @selector(lastIndexOfWithShortArray:withShort:withInt:);
  methods[129].selector = @selector(containsWithShortArray:withShort:);
  methods[130].selector = @selector(indexOfWithCharArray:withChar:);
  methods[131].selector = @selector(indexOfWithCharArray:withChar:withInt:);
  methods[132].selector = @selector(lastIndexOfWithCharArray:withChar:);
  methods[133].selector = @selector(lastIndexOfWithCharArray:withChar:withInt:);
  methods[134].selector = @selector(containsWithCharArray:withChar:);
  methods[135].selector = @selector(indexOfWithByteArray:withByte:);
  methods[136].selector = @selector(indexOfWithByteArray:withByte:withInt:);
  methods[137].selector = @selector(lastIndexOfWithByteArray:withByte:);
  methods[138].selector = @selector(lastIndexOfWithByteArray:withByte:withInt:);
  methods[139].selector = @selector(containsWithByteArray:withByte:);
  methods[140].selector = @selector(indexOfWithDoubleArray:withDouble:);
  methods[141].selector = @selector(indexOfWithDoubleArray:withDouble:withDouble:);
  methods[142].selector = @selector(indexOfWithDoubleArray:withDouble:withInt:);
  methods[143].selector = @selector(indexOfWithDoubleArray:withDouble:withInt:withDouble:);
  methods[144].selector = @selector(lastIndexOfWithDoubleArray:withDouble:);
  methods[145].selector = @selector(lastIndexOfWithDoubleArray:withDouble:withDouble:);
  methods[146].selector = @selector(lastIndexOfWithDoubleArray:withDouble:withInt:);
  methods[147].selector = @selector(lastIndexOfWithDoubleArray:withDouble:withInt:withDouble:);
  methods[148].selector = @selector(containsWithDoubleArray:withDouble:);
  methods[149].selector = @selector(containsWithDoubleArray:withDouble:withDouble:);
  methods[150].selector = @selector(indexOfWithFloatArray:withFloat:);
  methods[151].selector = @selector(indexOfWithFloatArray:withFloat:withInt:);
  methods[152].selector = @selector(lastIndexOfWithFloatArray:withFloat:);
  methods[153].selector = @selector(lastIndexOfWithFloatArray:withFloat:withInt:);
  methods[154].selector = @selector(containsWithFloatArray:withFloat:);
  methods[155].selector = @selector(indexOfWithBooleanArray:withBoolean:);
  methods[156].selector = @selector(indexOfWithBooleanArray:withBoolean:withInt:);
  methods[157].selector = @selector(lastIndexOfWithBooleanArray:withBoolean:);
  methods[158].selector = @selector(lastIndexOfWithBooleanArray:withBoolean:withInt:);
  methods[159].selector = @selector(containsWithBooleanArray:withBoolean:);
  methods[160].selector = @selector(toPrimitiveWithJavaLangCharacterArray:);
  methods[161].selector = @selector(toPrimitiveWithJavaLangCharacterArray:withChar:);
  methods[162].selector = @selector(toObjectWithCharArray:);
  methods[163].selector = @selector(toPrimitiveWithJavaLangLongArray:);
  methods[164].selector = @selector(toPrimitiveWithJavaLangLongArray:withLong:);
  methods[165].selector = @selector(toObjectWithLongArray:);
  methods[166].selector = @selector(toPrimitiveWithJavaLangIntegerArray:);
  methods[167].selector = @selector(toPrimitiveWithJavaLangIntegerArray:withInt:);
  methods[168].selector = @selector(toObjectWithIntArray:);
  methods[169].selector = @selector(toPrimitiveWithJavaLangShortArray:);
  methods[170].selector = @selector(toPrimitiveWithJavaLangShortArray:withShort:);
  methods[171].selector = @selector(toObjectWithShortArray:);
  methods[172].selector = @selector(toPrimitiveWithJavaLangByteArray:);
  methods[173].selector = @selector(toPrimitiveWithJavaLangByteArray:withByte:);
  methods[174].selector = @selector(toObjectWithByteArray:);
  methods[175].selector = @selector(toPrimitiveWithJavaLangDoubleArray:);
  methods[176].selector = @selector(toPrimitiveWithJavaLangDoubleArray:withDouble:);
  methods[177].selector = @selector(toObjectWithDoubleArray:);
  methods[178].selector = @selector(toPrimitiveWithJavaLangFloatArray:);
  methods[179].selector = @selector(toPrimitiveWithJavaLangFloatArray:withFloat:);
  methods[180].selector = @selector(toObjectWithFloatArray:);
  methods[181].selector = @selector(toPrimitiveWithId:);
  methods[182].selector = @selector(toPrimitiveWithJavaLangBooleanArray:);
  methods[183].selector = @selector(toPrimitiveWithJavaLangBooleanArray:withBoolean:);
  methods[184].selector = @selector(toObjectWithBooleanArray:);
  methods[185].selector = @selector(isEmptyWithNSObjectArray:);
  methods[186].selector = @selector(isEmptyWithLongArray:);
  methods[187].selector = @selector(isEmptyWithIntArray:);
  methods[188].selector = @selector(isEmptyWithShortArray:);
  methods[189].selector = @selector(isEmptyWithCharArray:);
  methods[190].selector = @selector(isEmptyWithByteArray:);
  methods[191].selector = @selector(isEmptyWithDoubleArray:);
  methods[192].selector = @selector(isEmptyWithFloatArray:);
  methods[193].selector = @selector(isEmptyWithBooleanArray:);
  methods[194].selector = @selector(isNotEmptyWithNSObjectArray:);
  methods[195].selector = @selector(isNotEmptyWithLongArray:);
  methods[196].selector = @selector(isNotEmptyWithIntArray:);
  methods[197].selector = @selector(isNotEmptyWithShortArray:);
  methods[198].selector = @selector(isNotEmptyWithCharArray:);
  methods[199].selector = @selector(isNotEmptyWithByteArray:);
  methods[200].selector = @selector(isNotEmptyWithDoubleArray:);
  methods[201].selector = @selector(isNotEmptyWithFloatArray:);
  methods[202].selector = @selector(isNotEmptyWithBooleanArray:);
  methods[203].selector = @selector(addAllWithNSObjectArray:withNSObjectArray:);
  methods[204].selector = @selector(addAllWithBooleanArray:withBooleanArray:);
  methods[205].selector = @selector(addAllWithCharArray:withCharArray:);
  methods[206].selector = @selector(addAllWithByteArray:withByteArray:);
  methods[207].selector = @selector(addAllWithShortArray:withShortArray:);
  methods[208].selector = @selector(addAllWithIntArray:withIntArray:);
  methods[209].selector = @selector(addAllWithLongArray:withLongArray:);
  methods[210].selector = @selector(addAllWithFloatArray:withFloatArray:);
  methods[211].selector = @selector(addAllWithDoubleArray:withDoubleArray:);
  methods[212].selector = @selector(addWithNSObjectArray:withId:);
  methods[213].selector = @selector(addWithBooleanArray:withBoolean:);
  methods[214].selector = @selector(addWithByteArray:withByte:);
  methods[215].selector = @selector(addWithCharArray:withChar:);
  methods[216].selector = @selector(addWithDoubleArray:withDouble:);
  methods[217].selector = @selector(addWithFloatArray:withFloat:);
  methods[218].selector = @selector(addWithIntArray:withInt:);
  methods[219].selector = @selector(addWithLongArray:withLong:);
  methods[220].selector = @selector(addWithShortArray:withShort:);
  methods[221].selector = @selector(copyArrayGrow1WithId:withIOSClass:);
  methods[222].selector = @selector(addWithNSObjectArray:withInt:withId:);
  methods[223].selector = @selector(addWithBooleanArray:withInt:withBoolean:);
  methods[224].selector = @selector(addWithCharArray:withInt:withChar:);
  methods[225].selector = @selector(addWithByteArray:withInt:withByte:);
  methods[226].selector = @selector(addWithShortArray:withInt:withShort:);
  methods[227].selector = @selector(addWithIntArray:withInt:withInt:);
  methods[228].selector = @selector(addWithLongArray:withInt:withLong:);
  methods[229].selector = @selector(addWithFloatArray:withInt:withFloat:);
  methods[230].selector = @selector(addWithDoubleArray:withInt:withDouble:);
  methods[231].selector = @selector(addWithId:withInt:withId:withIOSClass:);
  methods[232].selector = @selector(removeWithNSObjectArray:withInt:);
  methods[233].selector = @selector(removeElementWithNSObjectArray:withId:);
  methods[234].selector = @selector(removeWithBooleanArray:withInt:);
  methods[235].selector = @selector(removeElementWithBooleanArray:withBoolean:);
  methods[236].selector = @selector(removeWithByteArray:withInt:);
  methods[237].selector = @selector(removeElementWithByteArray:withByte:);
  methods[238].selector = @selector(removeWithCharArray:withInt:);
  methods[239].selector = @selector(removeElementWithCharArray:withChar:);
  methods[240].selector = @selector(removeWithDoubleArray:withInt:);
  methods[241].selector = @selector(removeElementWithDoubleArray:withDouble:);
  methods[242].selector = @selector(removeWithFloatArray:withInt:);
  methods[243].selector = @selector(removeElementWithFloatArray:withFloat:);
  methods[244].selector = @selector(removeWithIntArray:withInt:);
  methods[245].selector = @selector(removeElementWithIntArray:withInt:);
  methods[246].selector = @selector(removeWithLongArray:withInt:);
  methods[247].selector = @selector(removeElementWithLongArray:withLong:);
  methods[248].selector = @selector(removeWithShortArray:withInt:);
  methods[249].selector = @selector(removeElementWithShortArray:withShort:);
  methods[250].selector = @selector(removeWithId:withInt:);
  methods[251].selector = @selector(removeAllWithNSObjectArray:withIntArray:);
  methods[252].selector = @selector(removeElementsWithNSObjectArray:withNSObjectArray:);
  methods[253].selector = @selector(removeAllWithByteArray:withIntArray:);
  methods[254].selector = @selector(removeElementsWithByteArray:withByteArray:);
  methods[255].selector = @selector(removeAllWithShortArray:withIntArray:);
  methods[256].selector = @selector(removeElementsWithShortArray:withShortArray:);
  methods[257].selector = @selector(removeAllWithIntArray:withIntArray:);
  methods[258].selector = @selector(removeElementsWithIntArray:withIntArray:);
  methods[259].selector = @selector(removeAllWithCharArray:withIntArray:);
  methods[260].selector = @selector(removeElementsWithCharArray:withCharArray:);
  methods[261].selector = @selector(removeAllWithLongArray:withIntArray:);
  methods[262].selector = @selector(removeElementsWithLongArray:withLongArray:);
  methods[263].selector = @selector(removeAllWithFloatArray:withIntArray:);
  methods[264].selector = @selector(removeElementsWithFloatArray:withFloatArray:);
  methods[265].selector = @selector(removeAllWithDoubleArray:withIntArray:);
  methods[266].selector = @selector(removeElementsWithDoubleArray:withDoubleArray:);
  methods[267].selector = @selector(removeAllWithBooleanArray:withIntArray:);
  methods[268].selector = @selector(removeElementsWithBooleanArray:withBooleanArray:);
  methods[269].selector = @selector(removeAllWithId:withIntArray:);
  methods[270].selector = @selector(removeAllWithId:withJavaUtilBitSet:);
  methods[271].selector = @selector(isSortedWithJavaLangComparableArray:);
  methods[272].selector = @selector(isSortedWithNSObjectArray:withJavaUtilComparator:);
  methods[273].selector = @selector(isSortedWithIntArray:);
  methods[274].selector = @selector(isSortedWithLongArray:);
  methods[275].selector = @selector(isSortedWithShortArray:);
  methods[276].selector = @selector(isSortedWithDoubleArray:);
  methods[277].selector = @selector(isSortedWithFloatArray:);
  methods[278].selector = @selector(isSortedWithByteArray:);
  methods[279].selector = @selector(isSortedWithCharArray:);
  methods[280].selector = @selector(isSortedWithBooleanArray:);
  methods[281].selector = @selector(removeAllOccurencesWithBooleanArray:withBoolean:);
  methods[282].selector = @selector(removeAllOccurencesWithCharArray:withChar:);
  methods[283].selector = @selector(removeAllOccurencesWithByteArray:withByte:);
  methods[284].selector = @selector(removeAllOccurencesWithShortArray:withShort:);
  methods[285].selector = @selector(removeAllOccurencesWithIntArray:withInt:);
  methods[286].selector = @selector(removeAllOccurencesWithLongArray:withLong:);
  methods[287].selector = @selector(removeAllOccurencesWithFloatArray:withFloat:);
  methods[288].selector = @selector(removeAllOccurencesWithDoubleArray:withDouble:);
  methods[289].selector = @selector(removeAllOccurencesWithNSObjectArray:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_OBJECT_ARRAY", "[LNSObject;", .constantValue.asLong = 0, 0x19, -1, 155, -1, -1 },
    { "EMPTY_CLASS_ARRAY", "[LIOSClass;", .constantValue.asLong = 0, 0x19, -1, 156, 157, -1 },
    { "EMPTY_STRING_ARRAY", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 158, -1, -1 },
    { "EMPTY_LONG_ARRAY", "[J", .constantValue.asLong = 0, 0x19, -1, 159, -1, -1 },
    { "EMPTY_LONG_OBJECT_ARRAY", "[LJavaLangLong;", .constantValue.asLong = 0, 0x19, -1, 160, -1, -1 },
    { "EMPTY_INT_ARRAY", "[I", .constantValue.asLong = 0, 0x19, -1, 161, -1, -1 },
    { "EMPTY_INTEGER_OBJECT_ARRAY", "[LJavaLangInteger;", .constantValue.asLong = 0, 0x19, -1, 162, -1, -1 },
    { "EMPTY_SHORT_ARRAY", "[S", .constantValue.asLong = 0, 0x19, -1, 163, -1, -1 },
    { "EMPTY_SHORT_OBJECT_ARRAY", "[LJavaLangShort;", .constantValue.asLong = 0, 0x19, -1, 164, -1, -1 },
    { "EMPTY_BYTE_ARRAY", "[B", .constantValue.asLong = 0, 0x19, -1, 165, -1, -1 },
    { "EMPTY_BYTE_OBJECT_ARRAY", "[LJavaLangByte;", .constantValue.asLong = 0, 0x19, -1, 166, -1, -1 },
    { "EMPTY_DOUBLE_ARRAY", "[D", .constantValue.asLong = 0, 0x19, -1, 167, -1, -1 },
    { "EMPTY_DOUBLE_OBJECT_ARRAY", "[LJavaLangDouble;", .constantValue.asLong = 0, 0x19, -1, 168, -1, -1 },
    { "EMPTY_FLOAT_ARRAY", "[F", .constantValue.asLong = 0, 0x19, -1, 169, -1, -1 },
    { "EMPTY_FLOAT_OBJECT_ARRAY", "[LJavaLangFloat;", .constantValue.asLong = 0, 0x19, -1, 170, -1, -1 },
    { "EMPTY_BOOLEAN_ARRAY", "[Z", .constantValue.asLong = 0, 0x19, -1, 171, -1, -1 },
    { "EMPTY_BOOLEAN_OBJECT_ARRAY", "[LJavaLangBoolean;", .constantValue.asLong = 0, 0x19, -1, 172, -1, -1 },
    { "EMPTY_CHAR_ARRAY", "[C", .constantValue.asLong = 0, 0x19, -1, 173, -1, -1 },
    { "EMPTY_CHARACTER_OBJECT_ARRAY", "[LJavaLangCharacter;", .constantValue.asLong = 0, 0x19, -1, 174, -1, -1 },
    { "INDEX_NOT_FOUND", "I", .constantValue.asInt = OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "toString", "LNSObject;", "LNSObject;LNSString;", "hashCode", "isEquals", "LNSObject;LNSObject;", (void *)&OrgApacheCommonsLang3ArrayUtils__Annotations$0, "toMap", "[LNSObject;", "([Ljava/lang/Object;)Ljava/util/Map<Ljava/lang/Object;Ljava/lang/Object;>;", "toArray", "<T:Ljava/lang/Object;>([TT;)[TT;", "clone", "[J", "[I", "[S", "[C", "[B", "[D", "[F", "[Z", "nullToEmpty", "[LNSObject;LIOSClass;", "<T:Ljava/lang/Object;>([TT;Ljava/lang/Class<[TT;>;)[TT;", "[LIOSClass;", "([Ljava/lang/Class<*>;)[Ljava/lang/Class<*>;", "[LNSString;", "[LJavaLangLong;", "[LJavaLangInteger;", "[LJavaLangShort;", "[LJavaLangCharacter;", "[LJavaLangByte;", "[LJavaLangDouble;", "[LJavaLangFloat;", "[LJavaLangBoolean;", "subarray", "[LNSObject;II", "<T:Ljava/lang/Object;>([TT;II)[TT;", "[JII", "[III", "[SII", "[CII", "[BII", "[DII", "[FII", "[ZII", "isSameLength", "[LNSObject;[LNSObject;", "[J[J", "[I[I", "[S[S", "[C[C", "[B[B", "[D[D", "[F[F", "[Z[Z", "getLength", "isSameType", "reverse", "swap", "[ZIII", "[BIII", "[CIII", "[DIII", "[FIII", "[IIII", "[JIII", "[LNSObject;III", "[SIII", "shift", "[LNSObject;I", "[JI", "[II", "[SI", "[CI", "[BI", "[DI", "[FI", "[ZI", "indexOf", "[LNSObject;LNSObject;", "[LNSObject;LNSObject;I", "lastIndexOf", "contains", "[JJ", "[JJI", "[SS", "[SSI", "[CC", "[CCI", "[BB", "[BBI", "[DD", "[DDD", "[DDI", "[DDID", "[FF", "[FFI", "[ZZ", "[ZZI", "toPrimitive", "[LJavaLangCharacter;C", "toObject", "[LJavaLangLong;J", "[LJavaLangInteger;I", "[LJavaLangShort;S", "[LJavaLangByte;B", "[LJavaLangDouble;D", "[LJavaLangFloat;F", "[LJavaLangBoolean;Z", "isEmpty", "isNotEmpty", "<T:Ljava/lang/Object;>([TT;)Z", "addAll", "<T:Ljava/lang/Object;>([TT;[TT;)[TT;", "add", "<T:Ljava/lang/Object;>([TT;TT;)[TT;", "copyArrayGrow1", "LNSObject;LIOSClass;", "(Ljava/lang/Object;Ljava/lang/Class<*>;)Ljava/lang/Object;", "[LNSObject;ILNSObject;", "<T:Ljava/lang/Object;>([TT;ITT;)[TT;", "[ZIZ", "[CIC", "[BIB", "[SIS", "[JIJ", "[FIF", "[DID", "LNSObject;ILNSObject;LIOSClass;", "(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Class<*>;)Ljava/lang/Object;", "remove", "<T:Ljava/lang/Object;>([TT;I)[TT;", "removeElement", "<T:Ljava/lang/Object;>([TT;Ljava/lang/Object;)[TT;", "LNSObject;I", "removeAll", "[LNSObject;[I", "<T:Ljava/lang/Object;>([TT;[I)[TT;", "removeElements", "[B[I", "[S[I", "[C[I", "[J[I", "[F[I", "[D[I", "[Z[I", "LNSObject;[I", "LNSObject;LJavaUtilBitSet;", "isSorted", "[LJavaLangComparable;", "<T::Ljava/lang/Comparable<-TT;>;>([TT;)Z", "[LNSObject;LJavaUtilComparator;", "<T:Ljava/lang/Object;>([TT;Ljava/util/Comparator<TT;>;)Z", "removeAllOccurences", &OrgApacheCommonsLang3ArrayUtils_EMPTY_OBJECT_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_CLASS_ARRAY, "[Ljava/lang/Class<*>;", &OrgApacheCommonsLang3ArrayUtils_EMPTY_STRING_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_LONG_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_LONG_OBJECT_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_INT_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_INTEGER_OBJECT_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_SHORT_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_SHORT_OBJECT_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_BYTE_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_BYTE_OBJECT_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_DOUBLE_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_DOUBLE_OBJECT_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_FLOAT_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_FLOAT_OBJECT_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_BOOLEAN_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_BOOLEAN_OBJECT_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_CHAR_ARRAY, &OrgApacheCommonsLang3ArrayUtils_EMPTY_CHARACTER_OBJECT_ARRAY };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3ArrayUtils = { "ArrayUtils", "org.apache.commons.lang3", ptrTable, methods, fields, 7, 0x1, 290, 20, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3ArrayUtils;
}

+ (void)initialize {
  if (self == [OrgApacheCommonsLang3ArrayUtils class]) {
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_OBJECT_ARRAY, [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_CLASS_ARRAY, [IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_STRING_ARRAY, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_LONG_ARRAY, [IOSLongArray newArrayWithLength:0]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_LONG_OBJECT_ARRAY, [IOSObjectArray newArrayWithLength:0 type:JavaLangLong_class_()]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_INT_ARRAY, [IOSIntArray newArrayWithLength:0]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_INTEGER_OBJECT_ARRAY, [IOSObjectArray newArrayWithLength:0 type:JavaLangInteger_class_()]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_SHORT_ARRAY, [IOSShortArray newArrayWithLength:0]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_SHORT_OBJECT_ARRAY, [IOSObjectArray newArrayWithLength:0 type:JavaLangShort_class_()]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_BYTE_ARRAY, [IOSByteArray newArrayWithLength:0]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_BYTE_OBJECT_ARRAY, [IOSObjectArray newArrayWithLength:0 type:JavaLangByte_class_()]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_DOUBLE_ARRAY, [IOSDoubleArray newArrayWithLength:0]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_DOUBLE_OBJECT_ARRAY, [IOSObjectArray newArrayWithLength:0 type:JavaLangDouble_class_()]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_FLOAT_ARRAY, [IOSFloatArray newArrayWithLength:0]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_FLOAT_OBJECT_ARRAY, [IOSObjectArray newArrayWithLength:0 type:JavaLangFloat_class_()]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_BOOLEAN_ARRAY, [IOSBooleanArray newArrayWithLength:0]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_BOOLEAN_OBJECT_ARRAY, [IOSObjectArray newArrayWithLength:0 type:JavaLangBoolean_class_()]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_CHAR_ARRAY, [IOSCharArray newArrayWithLength:0]);
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3ArrayUtils_EMPTY_CHARACTER_OBJECT_ARRAY, [IOSObjectArray newArrayWithLength:0 type:JavaLangCharacter_class_()]);
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsLang3ArrayUtils)
  }
}

@end

void OrgApacheCommonsLang3ArrayUtils_init(OrgApacheCommonsLang3ArrayUtils *self) {
  NSObject_init(self);
}

OrgApacheCommonsLang3ArrayUtils *new_OrgApacheCommonsLang3ArrayUtils_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3ArrayUtils, init)
}

OrgApacheCommonsLang3ArrayUtils *create_OrgApacheCommonsLang3ArrayUtils_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3ArrayUtils, init)
}

NSString *OrgApacheCommonsLang3ArrayUtils_toStringWithId_(id array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_toStringWithId_withNSString_(array, @"{}");
}

NSString *OrgApacheCommonsLang3ArrayUtils_toStringWithId_withNSString_(id array, NSString *stringIfNull) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return stringIfNull;
  }
  return [((OrgApacheCommonsLang3BuilderToStringBuilder *) nil_chk([create_OrgApacheCommonsLang3BuilderToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_(array, JreLoadStatic(OrgApacheCommonsLang3BuilderToStringStyle, SIMPLE_STYLE)) appendWithId:array])) description];
}

jint OrgApacheCommonsLang3ArrayUtils_hashCodeWithId_(id array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return [((OrgApacheCommonsLang3BuilderHashCodeBuilder *) nil_chk([create_OrgApacheCommonsLang3BuilderHashCodeBuilder_init() appendWithId:array])) toHashCode];
}

jboolean OrgApacheCommonsLang3ArrayUtils_isEqualsWithId_withId_(id array1, id array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return [((OrgApacheCommonsLang3BuilderEqualsBuilder *) nil_chk([create_OrgApacheCommonsLang3BuilderEqualsBuilder_init() appendWithId:array1 withId:array2])) isEquals];
}

id<JavaUtilMap> OrgApacheCommonsLang3ArrayUtils_toMapWithNSObjectArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  id<JavaUtilMap> map = create_JavaUtilHashMap_initWithInt_(JreFpToInt((array->size_ * 1.5)));
  for (jint i = 0; i < array->size_; i++) {
    id object = IOSObjectArray_Get(array, i);
    if ([JavaUtilMap_Entry_class_() isInstance:object]) {
      id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) cast_check(object, JavaUtilMap_Entry_class_());
      [map putWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey] withId:[entry_ getValue]];
    }
    else if ([IOSClass_arrayType(NSObject_class_(), 1) isInstance:object]) {
      IOSObjectArray *entry_ = (IOSObjectArray *) cast_check(object, IOSClass_arrayType(NSObject_class_(), 1));
      if (((IOSObjectArray *) nil_chk(entry_))->size_ < 2) {
        @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$@$", @"Array element ", i, @", '", object, @"', has a length less than 2"));
      }
      [map putWithId:IOSObjectArray_Get(entry_, 0) withId:IOSObjectArray_Get(entry_, 1)];
    }
    else {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$@$", @"Array element ", i, @", '", object, @"', is neither of type Map.Entry nor an Array"));
    }
  }
  return map;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toArrayWithNSObjectArray_(IOSObjectArray *items) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return items;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_cloneWithNSObjectArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  return [array java_clone];
}

IOSLongArray *OrgApacheCommonsLang3ArrayUtils_cloneWithLongArray_(IOSLongArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  return [array java_clone];
}

IOSIntArray *OrgApacheCommonsLang3ArrayUtils_cloneWithIntArray_(IOSIntArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  return [array java_clone];
}

IOSShortArray *OrgApacheCommonsLang3ArrayUtils_cloneWithShortArray_(IOSShortArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  return [array java_clone];
}

IOSCharArray *OrgApacheCommonsLang3ArrayUtils_cloneWithCharArray_(IOSCharArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  return [array java_clone];
}

IOSByteArray *OrgApacheCommonsLang3ArrayUtils_cloneWithByteArray_(IOSByteArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  return [array java_clone];
}

IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_cloneWithDoubleArray_(IOSDoubleArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  return [array java_clone];
}

IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_cloneWithFloatArray_(IOSFloatArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  return [array java_clone];
}

IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_cloneWithBooleanArray_(IOSBooleanArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  return [array java_clone];
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithNSObjectArray_withIOSClass_(IOSObjectArray *array, IOSClass *type) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (type == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The type must not be null");
  }
  if (array == nil) {
    return [type cast:JavaLangReflectArray_newInstanceWithIOSClass_withInt_([type getComponentType], 0)];
  }
  return array;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithNSObjectArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_OBJECT_ARRAY;
  }
  return array;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithIOSClassArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_CLASS_ARRAY;
  }
  return array;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithNSStringArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_STRING_ARRAY;
  }
  return array;
}

IOSLongArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithLongArray_(IOSLongArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithLongArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_LONG_ARRAY;
  }
  return array;
}

IOSIntArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithIntArray_(IOSIntArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithIntArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_INT_ARRAY;
  }
  return array;
}

IOSShortArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithShortArray_(IOSShortArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithShortArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_SHORT_ARRAY;
  }
  return array;
}

IOSCharArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithCharArray_(IOSCharArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithCharArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_CHAR_ARRAY;
  }
  return array;
}

IOSByteArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithByteArray_(IOSByteArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithByteArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_BYTE_ARRAY;
  }
  return array;
}

IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithDoubleArray_(IOSDoubleArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithDoubleArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_DOUBLE_ARRAY;
  }
  return array;
}

IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithFloatArray_(IOSFloatArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithFloatArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_FLOAT_ARRAY;
  }
  return array;
}

IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithBooleanArray_(IOSBooleanArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithBooleanArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_BOOLEAN_ARRAY;
  }
  return array;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangLongArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_LONG_OBJECT_ARRAY;
  }
  return array;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangIntegerArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_INTEGER_OBJECT_ARRAY;
  }
  return array;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangShortArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_SHORT_OBJECT_ARRAY;
  }
  return array;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangCharacterArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_CHARACTER_OBJECT_ARRAY;
  }
  return array;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangByteArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_BYTE_OBJECT_ARRAY;
  }
  return array;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangDoubleArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_DOUBLE_OBJECT_ARRAY;
  }
  return array;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangFloatArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_FLOAT_OBJECT_ARRAY;
  }
  return array;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithJavaLangBooleanArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_BOOLEAN_OBJECT_ARRAY;
  }
  return array;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithNSObjectArray_withInt_withInt_(IOSObjectArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive > array->size_) {
    endIndexExclusive = array->size_;
  }
  jint newSize = endIndexExclusive - startIndexInclusive;
  IOSClass *type = [[array java_getClass] getComponentType];
  if (newSize <= 0) {
    IOSObjectArray *emptyArray = (IOSObjectArray *) cast_check(JavaLangReflectArray_newInstanceWithIOSClass_withInt_(type, 0), IOSClass_arrayType(NSObject_class_(), 1));
    return emptyArray;
  }
  IOSObjectArray *subarray = (IOSObjectArray *) cast_check(JavaLangReflectArray_newInstanceWithIOSClass_withInt_(type, newSize), IOSClass_arrayType(NSObject_class_(), 1));
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, startIndexInclusive, subarray, 0, newSize);
  return subarray;
}

IOSLongArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithLongArray_withInt_withInt_(IOSLongArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive > array->size_) {
    endIndexExclusive = array->size_;
  }
  jint newSize = endIndexExclusive - startIndexInclusive;
  if (newSize <= 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_LONG_ARRAY;
  }
  IOSLongArray *subarray = [IOSLongArray arrayWithLength:newSize];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, startIndexInclusive, subarray, 0, newSize);
  return subarray;
}

IOSIntArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithIntArray_withInt_withInt_(IOSIntArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive > array->size_) {
    endIndexExclusive = array->size_;
  }
  jint newSize = endIndexExclusive - startIndexInclusive;
  if (newSize <= 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_INT_ARRAY;
  }
  IOSIntArray *subarray = [IOSIntArray arrayWithLength:newSize];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, startIndexInclusive, subarray, 0, newSize);
  return subarray;
}

IOSShortArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithShortArray_withInt_withInt_(IOSShortArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive > array->size_) {
    endIndexExclusive = array->size_;
  }
  jint newSize = endIndexExclusive - startIndexInclusive;
  if (newSize <= 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_SHORT_ARRAY;
  }
  IOSShortArray *subarray = [IOSShortArray arrayWithLength:newSize];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, startIndexInclusive, subarray, 0, newSize);
  return subarray;
}

IOSCharArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithCharArray_withInt_withInt_(IOSCharArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive > array->size_) {
    endIndexExclusive = array->size_;
  }
  jint newSize = endIndexExclusive - startIndexInclusive;
  if (newSize <= 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_CHAR_ARRAY;
  }
  IOSCharArray *subarray = [IOSCharArray arrayWithLength:newSize];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, startIndexInclusive, subarray, 0, newSize);
  return subarray;
}

IOSByteArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithByteArray_withInt_withInt_(IOSByteArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive > array->size_) {
    endIndexExclusive = array->size_;
  }
  jint newSize = endIndexExclusive - startIndexInclusive;
  if (newSize <= 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_BYTE_ARRAY;
  }
  IOSByteArray *subarray = [IOSByteArray arrayWithLength:newSize];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, startIndexInclusive, subarray, 0, newSize);
  return subarray;
}

IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive > array->size_) {
    endIndexExclusive = array->size_;
  }
  jint newSize = endIndexExclusive - startIndexInclusive;
  if (newSize <= 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_DOUBLE_ARRAY;
  }
  IOSDoubleArray *subarray = [IOSDoubleArray arrayWithLength:newSize];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, startIndexInclusive, subarray, 0, newSize);
  return subarray;
}

IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithFloatArray_withInt_withInt_(IOSFloatArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive > array->size_) {
    endIndexExclusive = array->size_;
  }
  jint newSize = endIndexExclusive - startIndexInclusive;
  if (newSize <= 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_FLOAT_ARRAY;
  }
  IOSFloatArray *subarray = [IOSFloatArray arrayWithLength:newSize];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, startIndexInclusive, subarray, 0, newSize);
  return subarray;
}

IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_subarrayWithBooleanArray_withInt_withInt_(IOSBooleanArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive > array->size_) {
    endIndexExclusive = array->size_;
  }
  jint newSize = endIndexExclusive - startIndexInclusive;
  if (newSize <= 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_BOOLEAN_ARRAY;
  }
  IOSBooleanArray *subarray = [IOSBooleanArray arrayWithLength:newSize];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, startIndexInclusive, subarray, 0, newSize);
  return subarray;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithNSObjectArray_withNSObjectArray_(IOSObjectArray *array1, IOSObjectArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array1) == OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array2);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithLongArray_withLongArray_(IOSLongArray *array1, IOSLongArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array1) == OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array2);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithIntArray_withIntArray_(IOSIntArray *array1, IOSIntArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array1) == OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array2);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithShortArray_withShortArray_(IOSShortArray *array1, IOSShortArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array1) == OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array2);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithCharArray_withCharArray_(IOSCharArray *array1, IOSCharArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array1) == OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array2);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithByteArray_withByteArray_(IOSByteArray *array1, IOSByteArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array1) == OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array2);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithDoubleArray_withDoubleArray_(IOSDoubleArray *array1, IOSDoubleArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array1) == OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array2);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithFloatArray_withFloatArray_(IOSFloatArray *array1, IOSFloatArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array1) == OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array2);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSameLengthWithBooleanArray_withBooleanArray_(IOSBooleanArray *array1, IOSBooleanArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array1) == OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array2);
}

jint OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(id array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return 0;
  }
  return JavaLangReflectArray_getLengthWithId_(array);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSameTypeWithId_withId_(id array1, id array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array1 == nil || array2 == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The Array must not be null");
  }
  return [((NSString *) nil_chk([[array1 java_getClass] getName])) isEqual:[[array2 java_getClass] getName]];
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithNSObjectArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_reverseWithNSObjectArray_withInt_withInt_(array, 0, array->size_);
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithLongArray_(IOSLongArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_reverseWithLongArray_withInt_withInt_(array, 0, array->size_);
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithIntArray_(IOSIntArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_reverseWithIntArray_withInt_withInt_(array, 0, array->size_);
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithShortArray_(IOSShortArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_reverseWithShortArray_withInt_withInt_(array, 0, array->size_);
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithCharArray_(IOSCharArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_reverseWithCharArray_withInt_withInt_(array, 0, array->size_);
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithByteArray_(IOSByteArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_reverseWithByteArray_withInt_withInt_(array, 0, array->size_);
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithDoubleArray_(IOSDoubleArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_reverseWithDoubleArray_withInt_withInt_(array, 0, array->size_);
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithFloatArray_(IOSFloatArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_reverseWithFloatArray_withInt_withInt_(array, 0, array->size_);
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithBooleanArray_(IOSBooleanArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_reverseWithBooleanArray_withInt_withInt_(array, 0, array->size_);
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithBooleanArray_withInt_withInt_(IOSBooleanArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  jint i = startIndexInclusive < 0 ? 0 : startIndexInclusive;
  jint j = JavaLangMath_minWithInt_withInt_(array->size_, endIndexExclusive) - 1;
  jboolean tmp;
  while (j > i) {
    tmp = IOSBooleanArray_Get(array, j);
    *IOSBooleanArray_GetRef(array, j) = IOSBooleanArray_Get(array, i);
    *IOSBooleanArray_GetRef(array, i) = tmp;
    j--;
    i++;
  }
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithByteArray_withInt_withInt_(IOSByteArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  jint i = startIndexInclusive < 0 ? 0 : startIndexInclusive;
  jint j = JavaLangMath_minWithInt_withInt_(array->size_, endIndexExclusive) - 1;
  jbyte tmp;
  while (j > i) {
    tmp = IOSByteArray_Get(array, j);
    *IOSByteArray_GetRef(array, j) = IOSByteArray_Get(array, i);
    *IOSByteArray_GetRef(array, i) = tmp;
    j--;
    i++;
  }
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithCharArray_withInt_withInt_(IOSCharArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  jint i = startIndexInclusive < 0 ? 0 : startIndexInclusive;
  jint j = JavaLangMath_minWithInt_withInt_(array->size_, endIndexExclusive) - 1;
  jchar tmp;
  while (j > i) {
    tmp = IOSCharArray_Get(array, j);
    *IOSCharArray_GetRef(array, j) = IOSCharArray_Get(array, i);
    *IOSCharArray_GetRef(array, i) = tmp;
    j--;
    i++;
  }
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  jint i = startIndexInclusive < 0 ? 0 : startIndexInclusive;
  jint j = JavaLangMath_minWithInt_withInt_(array->size_, endIndexExclusive) - 1;
  jdouble tmp;
  while (j > i) {
    tmp = IOSDoubleArray_Get(array, j);
    *IOSDoubleArray_GetRef(array, j) = IOSDoubleArray_Get(array, i);
    *IOSDoubleArray_GetRef(array, i) = tmp;
    j--;
    i++;
  }
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithFloatArray_withInt_withInt_(IOSFloatArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  jint i = startIndexInclusive < 0 ? 0 : startIndexInclusive;
  jint j = JavaLangMath_minWithInt_withInt_(array->size_, endIndexExclusive) - 1;
  jfloat tmp;
  while (j > i) {
    tmp = IOSFloatArray_Get(array, j);
    *IOSFloatArray_GetRef(array, j) = IOSFloatArray_Get(array, i);
    *IOSFloatArray_GetRef(array, i) = tmp;
    j--;
    i++;
  }
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithIntArray_withInt_withInt_(IOSIntArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  jint i = startIndexInclusive < 0 ? 0 : startIndexInclusive;
  jint j = JavaLangMath_minWithInt_withInt_(array->size_, endIndexExclusive) - 1;
  jint tmp;
  while (j > i) {
    tmp = IOSIntArray_Get(array, j);
    *IOSIntArray_GetRef(array, j) = IOSIntArray_Get(array, i);
    *IOSIntArray_GetRef(array, i) = tmp;
    j--;
    i++;
  }
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithLongArray_withInt_withInt_(IOSLongArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  jint i = startIndexInclusive < 0 ? 0 : startIndexInclusive;
  jint j = JavaLangMath_minWithInt_withInt_(array->size_, endIndexExclusive) - 1;
  jlong tmp;
  while (j > i) {
    tmp = IOSLongArray_Get(array, j);
    *IOSLongArray_GetRef(array, j) = IOSLongArray_Get(array, i);
    *IOSLongArray_GetRef(array, i) = tmp;
    j--;
    i++;
  }
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithNSObjectArray_withInt_withInt_(IOSObjectArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  jint i = startIndexInclusive < 0 ? 0 : startIndexInclusive;
  jint j = JavaLangMath_minWithInt_withInt_(array->size_, endIndexExclusive) - 1;
  id tmp;
  while (j > i) {
    tmp = IOSObjectArray_Get(array, j);
    IOSObjectArray_Set(array, j, IOSObjectArray_Get(array, i));
    IOSObjectArray_Set(array, i, tmp);
    j--;
    i++;
  }
}

void OrgApacheCommonsLang3ArrayUtils_reverseWithShortArray_withInt_withInt_(IOSShortArray *array, jint startIndexInclusive, jint endIndexExclusive) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  jint i = startIndexInclusive < 0 ? 0 : startIndexInclusive;
  jint j = JavaLangMath_minWithInt_withInt_(array->size_, endIndexExclusive) - 1;
  jshort tmp;
  while (j > i) {
    tmp = IOSShortArray_Get(array, j);
    *IOSShortArray_GetRef(array, j) = IOSShortArray_Get(array, i);
    *IOSShortArray_GetRef(array, i) = tmp;
    j--;
    i++;
  }
}

void OrgApacheCommonsLang3ArrayUtils_swapWithNSObjectArray_withInt_withInt_(IOSObjectArray *array, jint offset1, jint offset2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_swapWithNSObjectArray_withInt_withInt_withInt_(array, offset1, offset2, 1);
}

void OrgApacheCommonsLang3ArrayUtils_swapWithLongArray_withInt_withInt_(IOSLongArray *array, jint offset1, jint offset2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_swapWithLongArray_withInt_withInt_withInt_(array, offset1, offset2, 1);
}

void OrgApacheCommonsLang3ArrayUtils_swapWithIntArray_withInt_withInt_(IOSIntArray *array, jint offset1, jint offset2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_swapWithIntArray_withInt_withInt_withInt_(array, offset1, offset2, 1);
}

void OrgApacheCommonsLang3ArrayUtils_swapWithShortArray_withInt_withInt_(IOSShortArray *array, jint offset1, jint offset2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_swapWithShortArray_withInt_withInt_withInt_(array, offset1, offset2, 1);
}

void OrgApacheCommonsLang3ArrayUtils_swapWithCharArray_withInt_withInt_(IOSCharArray *array, jint offset1, jint offset2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_swapWithCharArray_withInt_withInt_withInt_(array, offset1, offset2, 1);
}

void OrgApacheCommonsLang3ArrayUtils_swapWithByteArray_withInt_withInt_(IOSByteArray *array, jint offset1, jint offset2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_swapWithByteArray_withInt_withInt_withInt_(array, offset1, offset2, 1);
}

void OrgApacheCommonsLang3ArrayUtils_swapWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint offset1, jint offset2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_swapWithDoubleArray_withInt_withInt_withInt_(array, offset1, offset2, 1);
}

void OrgApacheCommonsLang3ArrayUtils_swapWithFloatArray_withInt_withInt_(IOSFloatArray *array, jint offset1, jint offset2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_swapWithFloatArray_withInt_withInt_withInt_(array, offset1, offset2, 1);
}

void OrgApacheCommonsLang3ArrayUtils_swapWithBooleanArray_withInt_withInt_(IOSBooleanArray *array, jint offset1, jint offset2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_swapWithBooleanArray_withInt_withInt_withInt_(array, offset1, offset2, 1);
}

void OrgApacheCommonsLang3ArrayUtils_swapWithBooleanArray_withInt_withInt_withInt_(IOSBooleanArray *array, jint offset1, jint offset2, jint len) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0 || offset1 >= array->size_ || offset2 >= array->size_) {
    return;
  }
  if (offset1 < 0) {
    offset1 = 0;
  }
  if (offset2 < 0) {
    offset2 = 0;
  }
  len = JavaLangMath_minWithInt_withInt_(JavaLangMath_minWithInt_withInt_(len, array->size_ - offset1), array->size_ - offset2);
  for (jint i = 0; i < len; i++, offset1++, offset2++) {
    jboolean aux = IOSBooleanArray_Get(array, offset1);
    *IOSBooleanArray_GetRef(array, offset1) = IOSBooleanArray_Get(array, offset2);
    *IOSBooleanArray_GetRef(array, offset2) = aux;
  }
}

void OrgApacheCommonsLang3ArrayUtils_swapWithByteArray_withInt_withInt_withInt_(IOSByteArray *array, jint offset1, jint offset2, jint len) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0 || offset1 >= array->size_ || offset2 >= array->size_) {
    return;
  }
  if (offset1 < 0) {
    offset1 = 0;
  }
  if (offset2 < 0) {
    offset2 = 0;
  }
  len = JavaLangMath_minWithInt_withInt_(JavaLangMath_minWithInt_withInt_(len, array->size_ - offset1), array->size_ - offset2);
  for (jint i = 0; i < len; i++, offset1++, offset2++) {
    jbyte aux = IOSByteArray_Get(array, offset1);
    *IOSByteArray_GetRef(array, offset1) = IOSByteArray_Get(array, offset2);
    *IOSByteArray_GetRef(array, offset2) = aux;
  }
}

void OrgApacheCommonsLang3ArrayUtils_swapWithCharArray_withInt_withInt_withInt_(IOSCharArray *array, jint offset1, jint offset2, jint len) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0 || offset1 >= array->size_ || offset2 >= array->size_) {
    return;
  }
  if (offset1 < 0) {
    offset1 = 0;
  }
  if (offset2 < 0) {
    offset2 = 0;
  }
  len = JavaLangMath_minWithInt_withInt_(JavaLangMath_minWithInt_withInt_(len, array->size_ - offset1), array->size_ - offset2);
  for (jint i = 0; i < len; i++, offset1++, offset2++) {
    jchar aux = IOSCharArray_Get(array, offset1);
    *IOSCharArray_GetRef(array, offset1) = IOSCharArray_Get(array, offset2);
    *IOSCharArray_GetRef(array, offset2) = aux;
  }
}

void OrgApacheCommonsLang3ArrayUtils_swapWithDoubleArray_withInt_withInt_withInt_(IOSDoubleArray *array, jint offset1, jint offset2, jint len) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0 || offset1 >= array->size_ || offset2 >= array->size_) {
    return;
  }
  if (offset1 < 0) {
    offset1 = 0;
  }
  if (offset2 < 0) {
    offset2 = 0;
  }
  len = JavaLangMath_minWithInt_withInt_(JavaLangMath_minWithInt_withInt_(len, array->size_ - offset1), array->size_ - offset2);
  for (jint i = 0; i < len; i++, offset1++, offset2++) {
    jdouble aux = IOSDoubleArray_Get(array, offset1);
    *IOSDoubleArray_GetRef(array, offset1) = IOSDoubleArray_Get(array, offset2);
    *IOSDoubleArray_GetRef(array, offset2) = aux;
  }
}

void OrgApacheCommonsLang3ArrayUtils_swapWithFloatArray_withInt_withInt_withInt_(IOSFloatArray *array, jint offset1, jint offset2, jint len) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0 || offset1 >= array->size_ || offset2 >= array->size_) {
    return;
  }
  if (offset1 < 0) {
    offset1 = 0;
  }
  if (offset2 < 0) {
    offset2 = 0;
  }
  len = JavaLangMath_minWithInt_withInt_(JavaLangMath_minWithInt_withInt_(len, array->size_ - offset1), array->size_ - offset2);
  for (jint i = 0; i < len; i++, offset1++, offset2++) {
    jfloat aux = IOSFloatArray_Get(array, offset1);
    *IOSFloatArray_GetRef(array, offset1) = IOSFloatArray_Get(array, offset2);
    *IOSFloatArray_GetRef(array, offset2) = aux;
  }
}

void OrgApacheCommonsLang3ArrayUtils_swapWithIntArray_withInt_withInt_withInt_(IOSIntArray *array, jint offset1, jint offset2, jint len) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0 || offset1 >= array->size_ || offset2 >= array->size_) {
    return;
  }
  if (offset1 < 0) {
    offset1 = 0;
  }
  if (offset2 < 0) {
    offset2 = 0;
  }
  len = JavaLangMath_minWithInt_withInt_(JavaLangMath_minWithInt_withInt_(len, array->size_ - offset1), array->size_ - offset2);
  for (jint i = 0; i < len; i++, offset1++, offset2++) {
    jint aux = IOSIntArray_Get(array, offset1);
    *IOSIntArray_GetRef(array, offset1) = IOSIntArray_Get(array, offset2);
    *IOSIntArray_GetRef(array, offset2) = aux;
  }
}

void OrgApacheCommonsLang3ArrayUtils_swapWithLongArray_withInt_withInt_withInt_(IOSLongArray *array, jint offset1, jint offset2, jint len) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0 || offset1 >= array->size_ || offset2 >= array->size_) {
    return;
  }
  if (offset1 < 0) {
    offset1 = 0;
  }
  if (offset2 < 0) {
    offset2 = 0;
  }
  len = JavaLangMath_minWithInt_withInt_(JavaLangMath_minWithInt_withInt_(len, array->size_ - offset1), array->size_ - offset2);
  for (jint i = 0; i < len; i++, offset1++, offset2++) {
    jlong aux = IOSLongArray_Get(array, offset1);
    *IOSLongArray_GetRef(array, offset1) = IOSLongArray_Get(array, offset2);
    *IOSLongArray_GetRef(array, offset2) = aux;
  }
}

void OrgApacheCommonsLang3ArrayUtils_swapWithNSObjectArray_withInt_withInt_withInt_(IOSObjectArray *array, jint offset1, jint offset2, jint len) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0 || offset1 >= array->size_ || offset2 >= array->size_) {
    return;
  }
  if (offset1 < 0) {
    offset1 = 0;
  }
  if (offset2 < 0) {
    offset2 = 0;
  }
  len = JavaLangMath_minWithInt_withInt_(JavaLangMath_minWithInt_withInt_(len, array->size_ - offset1), array->size_ - offset2);
  for (jint i = 0; i < len; i++, offset1++, offset2++) {
    id aux = IOSObjectArray_Get(array, offset1);
    IOSObjectArray_Set(array, offset1, IOSObjectArray_Get(array, offset2));
    IOSObjectArray_Set(array, offset2, aux);
  }
}

void OrgApacheCommonsLang3ArrayUtils_swapWithShortArray_withInt_withInt_withInt_(IOSShortArray *array, jint offset1, jint offset2, jint len) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ == 0 || offset1 >= array->size_ || offset2 >= array->size_) {
    return;
  }
  if (offset1 < 0) {
    offset1 = 0;
  }
  if (offset2 < 0) {
    offset2 = 0;
  }
  if (offset1 == offset2) {
    return;
  }
  len = JavaLangMath_minWithInt_withInt_(JavaLangMath_minWithInt_withInt_(len, array->size_ - offset1), array->size_ - offset2);
  for (jint i = 0; i < len; i++, offset1++, offset2++) {
    jshort aux = IOSShortArray_Get(array, offset1);
    *IOSShortArray_GetRef(array, offset1) = IOSShortArray_Get(array, offset2);
    *IOSShortArray_GetRef(array, offset2) = aux;
  }
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithNSObjectArray_withInt_(IOSObjectArray *array, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_shiftWithNSObjectArray_withInt_withInt_withInt_(array, 0, array->size_, offset);
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithLongArray_withInt_(IOSLongArray *array, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_shiftWithLongArray_withInt_withInt_withInt_(array, 0, array->size_, offset);
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithIntArray_withInt_(IOSIntArray *array, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_shiftWithIntArray_withInt_withInt_withInt_(array, 0, array->size_, offset);
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithShortArray_withInt_(IOSShortArray *array, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_shiftWithShortArray_withInt_withInt_withInt_(array, 0, array->size_, offset);
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithCharArray_withInt_(IOSCharArray *array, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_shiftWithCharArray_withInt_withInt_withInt_(array, 0, array->size_, offset);
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithByteArray_withInt_(IOSByteArray *array, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_shiftWithByteArray_withInt_withInt_withInt_(array, 0, array->size_, offset);
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithDoubleArray_withInt_(IOSDoubleArray *array, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_shiftWithDoubleArray_withInt_withInt_withInt_(array, 0, array->size_, offset);
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithFloatArray_withInt_(IOSFloatArray *array, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_shiftWithFloatArray_withInt_withInt_withInt_(array, 0, array->size_, offset);
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithBooleanArray_withInt_(IOSBooleanArray *array, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  OrgApacheCommonsLang3ArrayUtils_shiftWithBooleanArray_withInt_withInt_withInt_(array, 0, array->size_, offset);
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithBooleanArray_withInt_withInt_withInt_(IOSBooleanArray *array, jint startIndexInclusive, jint endIndexExclusive, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  if (startIndexInclusive >= array->size_ - 1 || endIndexExclusive <= 0) {
    return;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive >= array->size_) {
    endIndexExclusive = array->size_;
  }
  jint n = endIndexExclusive - startIndexInclusive;
  if (n <= 1) {
    return;
  }
  offset %= n;
  if (offset < 0) {
    offset += n;
  }
  while (n > 1 && offset > 0) {
    jint n_offset = n - offset;
    if (offset > n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithBooleanArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n - n_offset, n_offset);
      n = offset;
      offset -= n_offset;
    }
    else if (offset < n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithBooleanArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      startIndexInclusive += offset;
      n = n_offset;
    }
    else {
      OrgApacheCommonsLang3ArrayUtils_swapWithBooleanArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      break;
    }
  }
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithByteArray_withInt_withInt_withInt_(IOSByteArray *array, jint startIndexInclusive, jint endIndexExclusive, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  if (startIndexInclusive >= array->size_ - 1 || endIndexExclusive <= 0) {
    return;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive >= array->size_) {
    endIndexExclusive = array->size_;
  }
  jint n = endIndexExclusive - startIndexInclusive;
  if (n <= 1) {
    return;
  }
  offset %= n;
  if (offset < 0) {
    offset += n;
  }
  while (n > 1 && offset > 0) {
    jint n_offset = n - offset;
    if (offset > n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithByteArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n - n_offset, n_offset);
      n = offset;
      offset -= n_offset;
    }
    else if (offset < n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithByteArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      startIndexInclusive += offset;
      n = n_offset;
    }
    else {
      OrgApacheCommonsLang3ArrayUtils_swapWithByteArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      break;
    }
  }
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithCharArray_withInt_withInt_withInt_(IOSCharArray *array, jint startIndexInclusive, jint endIndexExclusive, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  if (startIndexInclusive >= array->size_ - 1 || endIndexExclusive <= 0) {
    return;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive >= array->size_) {
    endIndexExclusive = array->size_;
  }
  jint n = endIndexExclusive - startIndexInclusive;
  if (n <= 1) {
    return;
  }
  offset %= n;
  if (offset < 0) {
    offset += n;
  }
  while (n > 1 && offset > 0) {
    jint n_offset = n - offset;
    if (offset > n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithCharArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n - n_offset, n_offset);
      n = offset;
      offset -= n_offset;
    }
    else if (offset < n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithCharArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      startIndexInclusive += offset;
      n = n_offset;
    }
    else {
      OrgApacheCommonsLang3ArrayUtils_swapWithCharArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      break;
    }
  }
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithDoubleArray_withInt_withInt_withInt_(IOSDoubleArray *array, jint startIndexInclusive, jint endIndexExclusive, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  if (startIndexInclusive >= array->size_ - 1 || endIndexExclusive <= 0) {
    return;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive >= array->size_) {
    endIndexExclusive = array->size_;
  }
  jint n = endIndexExclusive - startIndexInclusive;
  if (n <= 1) {
    return;
  }
  offset %= n;
  if (offset < 0) {
    offset += n;
  }
  while (n > 1 && offset > 0) {
    jint n_offset = n - offset;
    if (offset > n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithDoubleArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n - n_offset, n_offset);
      n = offset;
      offset -= n_offset;
    }
    else if (offset < n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithDoubleArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      startIndexInclusive += offset;
      n = n_offset;
    }
    else {
      OrgApacheCommonsLang3ArrayUtils_swapWithDoubleArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      break;
    }
  }
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithFloatArray_withInt_withInt_withInt_(IOSFloatArray *array, jint startIndexInclusive, jint endIndexExclusive, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  if (startIndexInclusive >= array->size_ - 1 || endIndexExclusive <= 0) {
    return;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive >= array->size_) {
    endIndexExclusive = array->size_;
  }
  jint n = endIndexExclusive - startIndexInclusive;
  if (n <= 1) {
    return;
  }
  offset %= n;
  if (offset < 0) {
    offset += n;
  }
  while (n > 1 && offset > 0) {
    jint n_offset = n - offset;
    if (offset > n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithFloatArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n - n_offset, n_offset);
      n = offset;
      offset -= n_offset;
    }
    else if (offset < n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithFloatArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      startIndexInclusive += offset;
      n = n_offset;
    }
    else {
      OrgApacheCommonsLang3ArrayUtils_swapWithFloatArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      break;
    }
  }
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithIntArray_withInt_withInt_withInt_(IOSIntArray *array, jint startIndexInclusive, jint endIndexExclusive, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  if (startIndexInclusive >= array->size_ - 1 || endIndexExclusive <= 0) {
    return;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive >= array->size_) {
    endIndexExclusive = array->size_;
  }
  jint n = endIndexExclusive - startIndexInclusive;
  if (n <= 1) {
    return;
  }
  offset %= n;
  if (offset < 0) {
    offset += n;
  }
  while (n > 1 && offset > 0) {
    jint n_offset = n - offset;
    if (offset > n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithIntArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n - n_offset, n_offset);
      n = offset;
      offset -= n_offset;
    }
    else if (offset < n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithIntArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      startIndexInclusive += offset;
      n = n_offset;
    }
    else {
      OrgApacheCommonsLang3ArrayUtils_swapWithIntArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      break;
    }
  }
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithLongArray_withInt_withInt_withInt_(IOSLongArray *array, jint startIndexInclusive, jint endIndexExclusive, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  if (startIndexInclusive >= array->size_ - 1 || endIndexExclusive <= 0) {
    return;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive >= array->size_) {
    endIndexExclusive = array->size_;
  }
  jint n = endIndexExclusive - startIndexInclusive;
  if (n <= 1) {
    return;
  }
  offset %= n;
  if (offset < 0) {
    offset += n;
  }
  while (n > 1 && offset > 0) {
    jint n_offset = n - offset;
    if (offset > n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithLongArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n - n_offset, n_offset);
      n = offset;
      offset -= n_offset;
    }
    else if (offset < n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithLongArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      startIndexInclusive += offset;
      n = n_offset;
    }
    else {
      OrgApacheCommonsLang3ArrayUtils_swapWithLongArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      break;
    }
  }
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithNSObjectArray_withInt_withInt_withInt_(IOSObjectArray *array, jint startIndexInclusive, jint endIndexExclusive, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  if (startIndexInclusive >= array->size_ - 1 || endIndexExclusive <= 0) {
    return;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive >= array->size_) {
    endIndexExclusive = array->size_;
  }
  jint n = endIndexExclusive - startIndexInclusive;
  if (n <= 1) {
    return;
  }
  offset %= n;
  if (offset < 0) {
    offset += n;
  }
  while (n > 1 && offset > 0) {
    jint n_offset = n - offset;
    if (offset > n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithNSObjectArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n - n_offset, n_offset);
      n = offset;
      offset -= n_offset;
    }
    else if (offset < n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithNSObjectArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      startIndexInclusive += offset;
      n = n_offset;
    }
    else {
      OrgApacheCommonsLang3ArrayUtils_swapWithNSObjectArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      break;
    }
  }
}

void OrgApacheCommonsLang3ArrayUtils_shiftWithShortArray_withInt_withInt_withInt_(IOSShortArray *array, jint startIndexInclusive, jint endIndexExclusive, jint offset) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return;
  }
  if (startIndexInclusive >= array->size_ - 1 || endIndexExclusive <= 0) {
    return;
  }
  if (startIndexInclusive < 0) {
    startIndexInclusive = 0;
  }
  if (endIndexExclusive >= array->size_) {
    endIndexExclusive = array->size_;
  }
  jint n = endIndexExclusive - startIndexInclusive;
  if (n <= 1) {
    return;
  }
  offset %= n;
  if (offset < 0) {
    offset += n;
  }
  while (n > 1 && offset > 0) {
    jint n_offset = n - offset;
    if (offset > n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithShortArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n - n_offset, n_offset);
      n = offset;
      offset -= n_offset;
    }
    else if (offset < n_offset) {
      OrgApacheCommonsLang3ArrayUtils_swapWithShortArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      startIndexInclusive += offset;
      n = n_offset;
    }
    else {
      OrgApacheCommonsLang3ArrayUtils_swapWithShortArray_withInt_withInt_withInt_(array, startIndexInclusive, startIndexInclusive + n_offset, offset);
      break;
    }
  }
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithNSObjectArray_withId_(IOSObjectArray *array, id objectToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithNSObjectArray_withId_withInt_(array, objectToFind, 0);
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithNSObjectArray_withId_withInt_(IOSObjectArray *array, id objectToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    startIndex = 0;
  }
  if (objectToFind == nil) {
    for (jint i = startIndex; i < array->size_; i++) {
      if (IOSObjectArray_Get(array, i) == nil) {
        return i;
      }
    }
  }
  else {
    for (jint i = startIndex; i < array->size_; i++) {
      if ([objectToFind isEqual:IOSObjectArray_Get(array, i)]) {
        return i;
      }
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithNSObjectArray_withId_(IOSObjectArray *array, id objectToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithNSObjectArray_withId_withInt_(array, objectToFind, JavaLangInteger_MAX_VALUE);
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithNSObjectArray_withId_withInt_(IOSObjectArray *array, id objectToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  else if (startIndex >= array->size_) {
    startIndex = array->size_ - 1;
  }
  if (objectToFind == nil) {
    for (jint i = startIndex; i >= 0; i--) {
      if (IOSObjectArray_Get(array, i) == nil) {
        return i;
      }
    }
  }
  else if ([((IOSClass *) nil_chk([[array java_getClass] getComponentType])) isInstance:objectToFind]) {
    for (jint i = startIndex; i >= 0; i--) {
      if ([objectToFind isEqual:IOSObjectArray_Get(array, i)]) {
        return i;
      }
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jboolean OrgApacheCommonsLang3ArrayUtils_containsWithNSObjectArray_withId_(IOSObjectArray *array, id objectToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithNSObjectArray_withId_(array, objectToFind) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithLongArray_withLong_(IOSLongArray *array, jlong valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithLongArray_withLong_withInt_(array, valueToFind, 0);
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithLongArray_withLong_withInt_(IOSLongArray *array, jlong valueToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    startIndex = 0;
  }
  for (jint i = startIndex; i < array->size_; i++) {
    if (valueToFind == IOSLongArray_Get(array, i)) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithLongArray_withLong_(IOSLongArray *array, jlong valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithLongArray_withLong_withInt_(array, valueToFind, JavaLangInteger_MAX_VALUE);
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithLongArray_withLong_withInt_(IOSLongArray *array, jlong valueToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  else if (startIndex >= array->size_) {
    startIndex = array->size_ - 1;
  }
  for (jint i = startIndex; i >= 0; i--) {
    if (valueToFind == IOSLongArray_Get(array, i)) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jboolean OrgApacheCommonsLang3ArrayUtils_containsWithLongArray_withLong_(IOSLongArray *array, jlong valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithLongArray_withLong_(array, valueToFind) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithIntArray_withInt_(IOSIntArray *array, jint valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithIntArray_withInt_withInt_(array, valueToFind, 0);
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithIntArray_withInt_withInt_(IOSIntArray *array, jint valueToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    startIndex = 0;
  }
  for (jint i = startIndex; i < array->size_; i++) {
    if (valueToFind == IOSIntArray_Get(array, i)) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithIntArray_withInt_(IOSIntArray *array, jint valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithIntArray_withInt_withInt_(array, valueToFind, JavaLangInteger_MAX_VALUE);
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithIntArray_withInt_withInt_(IOSIntArray *array, jint valueToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  else if (startIndex >= array->size_) {
    startIndex = array->size_ - 1;
  }
  for (jint i = startIndex; i >= 0; i--) {
    if (valueToFind == IOSIntArray_Get(array, i)) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jboolean OrgApacheCommonsLang3ArrayUtils_containsWithIntArray_withInt_(IOSIntArray *array, jint valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithIntArray_withInt_(array, valueToFind) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithShortArray_withShort_(IOSShortArray *array, jshort valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithShortArray_withShort_withInt_(array, valueToFind, 0);
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithShortArray_withShort_withInt_(IOSShortArray *array, jshort valueToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    startIndex = 0;
  }
  for (jint i = startIndex; i < array->size_; i++) {
    if (valueToFind == IOSShortArray_Get(array, i)) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithShortArray_withShort_(IOSShortArray *array, jshort valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithShortArray_withShort_withInt_(array, valueToFind, JavaLangInteger_MAX_VALUE);
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithShortArray_withShort_withInt_(IOSShortArray *array, jshort valueToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  else if (startIndex >= array->size_) {
    startIndex = array->size_ - 1;
  }
  for (jint i = startIndex; i >= 0; i--) {
    if (valueToFind == IOSShortArray_Get(array, i)) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jboolean OrgApacheCommonsLang3ArrayUtils_containsWithShortArray_withShort_(IOSShortArray *array, jshort valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithShortArray_withShort_(array, valueToFind) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithCharArray_withChar_(IOSCharArray *array, jchar valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithCharArray_withChar_withInt_(array, valueToFind, 0);
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithCharArray_withChar_withInt_(IOSCharArray *array, jchar valueToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    startIndex = 0;
  }
  for (jint i = startIndex; i < array->size_; i++) {
    if (valueToFind == IOSCharArray_Get(array, i)) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithCharArray_withChar_(IOSCharArray *array, jchar valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithCharArray_withChar_withInt_(array, valueToFind, JavaLangInteger_MAX_VALUE);
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithCharArray_withChar_withInt_(IOSCharArray *array, jchar valueToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  else if (startIndex >= array->size_) {
    startIndex = array->size_ - 1;
  }
  for (jint i = startIndex; i >= 0; i--) {
    if (valueToFind == IOSCharArray_Get(array, i)) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jboolean OrgApacheCommonsLang3ArrayUtils_containsWithCharArray_withChar_(IOSCharArray *array, jchar valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithCharArray_withChar_(array, valueToFind) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithByteArray_withByte_(IOSByteArray *array, jbyte valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithByteArray_withByte_withInt_(array, valueToFind, 0);
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithByteArray_withByte_withInt_(IOSByteArray *array, jbyte valueToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    startIndex = 0;
  }
  for (jint i = startIndex; i < array->size_; i++) {
    if (valueToFind == IOSByteArray_Get(array, i)) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithByteArray_withByte_(IOSByteArray *array, jbyte valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithByteArray_withByte_withInt_(array, valueToFind, JavaLangInteger_MAX_VALUE);
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithByteArray_withByte_withInt_(IOSByteArray *array, jbyte valueToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  else if (startIndex >= array->size_) {
    startIndex = array->size_ - 1;
  }
  for (jint i = startIndex; i >= 0; i--) {
    if (valueToFind == IOSByteArray_Get(array, i)) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jboolean OrgApacheCommonsLang3ArrayUtils_containsWithByteArray_withByte_(IOSByteArray *array, jbyte valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithByteArray_withByte_(array, valueToFind) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_withInt_(array, valueToFind, 0);
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_withDouble_(IOSDoubleArray *array, jdouble valueToFind, jdouble tolerance) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_withInt_withDouble_(array, valueToFind, 0, tolerance);
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_withInt_(IOSDoubleArray *array, jdouble valueToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithDoubleArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    startIndex = 0;
  }
  for (jint i = startIndex; i < ((IOSDoubleArray *) nil_chk(array))->size_; i++) {
    if (valueToFind == IOSDoubleArray_Get(array, i)) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_withInt_withDouble_(IOSDoubleArray *array, jdouble valueToFind, jint startIndex, jdouble tolerance) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithDoubleArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    startIndex = 0;
  }
  jdouble min = valueToFind - tolerance;
  jdouble max = valueToFind + tolerance;
  for (jint i = startIndex; i < ((IOSDoubleArray *) nil_chk(array))->size_; i++) {
    if (IOSDoubleArray_Get(array, i) >= min && IOSDoubleArray_Get(array, i) <= max) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithDoubleArray_withDouble_withInt_(array, valueToFind, JavaLangInteger_MAX_VALUE);
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithDoubleArray_withDouble_withDouble_(IOSDoubleArray *array, jdouble valueToFind, jdouble tolerance) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithDoubleArray_withDouble_withInt_withDouble_(array, valueToFind, JavaLangInteger_MAX_VALUE, tolerance);
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithDoubleArray_withDouble_withInt_(IOSDoubleArray *array, jdouble valueToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithDoubleArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  else if (startIndex >= ((IOSDoubleArray *) nil_chk(array))->size_) {
    startIndex = array->size_ - 1;
  }
  for (jint i = startIndex; i >= 0; i--) {
    if (valueToFind == IOSDoubleArray_Get(array, i)) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithDoubleArray_withDouble_withInt_withDouble_(IOSDoubleArray *array, jdouble valueToFind, jint startIndex, jdouble tolerance) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithDoubleArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  else if (startIndex >= ((IOSDoubleArray *) nil_chk(array))->size_) {
    startIndex = array->size_ - 1;
  }
  jdouble min = valueToFind - tolerance;
  jdouble max = valueToFind + tolerance;
  for (jint i = startIndex; i >= 0; i--) {
    if (IOSDoubleArray_Get(array, i) >= min && IOSDoubleArray_Get(array, i) <= max) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jboolean OrgApacheCommonsLang3ArrayUtils_containsWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_(array, valueToFind) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jboolean OrgApacheCommonsLang3ArrayUtils_containsWithDoubleArray_withDouble_withDouble_(IOSDoubleArray *array, jdouble valueToFind, jdouble tolerance) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_withInt_withDouble_(array, valueToFind, 0, tolerance) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithFloatArray_withFloat_(IOSFloatArray *array, jfloat valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithFloatArray_withFloat_withInt_(array, valueToFind, 0);
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithFloatArray_withFloat_withInt_(IOSFloatArray *array, jfloat valueToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithFloatArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    startIndex = 0;
  }
  for (jint i = startIndex; i < ((IOSFloatArray *) nil_chk(array))->size_; i++) {
    if (valueToFind == IOSFloatArray_Get(array, i)) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithFloatArray_withFloat_(IOSFloatArray *array, jfloat valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithFloatArray_withFloat_withInt_(array, valueToFind, JavaLangInteger_MAX_VALUE);
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithFloatArray_withFloat_withInt_(IOSFloatArray *array, jfloat valueToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithFloatArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  else if (startIndex >= ((IOSFloatArray *) nil_chk(array))->size_) {
    startIndex = array->size_ - 1;
  }
  for (jint i = startIndex; i >= 0; i--) {
    if (valueToFind == IOSFloatArray_Get(array, i)) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jboolean OrgApacheCommonsLang3ArrayUtils_containsWithFloatArray_withFloat_(IOSFloatArray *array, jfloat valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithFloatArray_withFloat_(array, valueToFind) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithBooleanArray_withBoolean_(IOSBooleanArray *array, jboolean valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithBooleanArray_withBoolean_withInt_(array, valueToFind, 0);
}

jint OrgApacheCommonsLang3ArrayUtils_indexOfWithBooleanArray_withBoolean_withInt_(IOSBooleanArray *array, jboolean valueToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithBooleanArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    startIndex = 0;
  }
  for (jint i = startIndex; i < ((IOSBooleanArray *) nil_chk(array))->size_; i++) {
    if (valueToFind == IOSBooleanArray_Get(array, i)) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithBooleanArray_withBoolean_(IOSBooleanArray *array, jboolean valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithBooleanArray_withBoolean_withInt_(array, valueToFind, JavaLangInteger_MAX_VALUE);
}

jint OrgApacheCommonsLang3ArrayUtils_lastIndexOfWithBooleanArray_withBoolean_withInt_(IOSBooleanArray *array, jboolean valueToFind, jint startIndex) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithBooleanArray_(array)) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  if (startIndex < 0) {
    return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
  }
  else if (startIndex >= ((IOSBooleanArray *) nil_chk(array))->size_) {
    startIndex = array->size_ - 1;
  }
  for (jint i = startIndex; i >= 0; i--) {
    if (valueToFind == IOSBooleanArray_Get(array, i)) {
      return i;
    }
  }
  return OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

jboolean OrgApacheCommonsLang3ArrayUtils_containsWithBooleanArray_withBoolean_(IOSBooleanArray *array, jboolean valueToFind) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_indexOfWithBooleanArray_withBoolean_(array, valueToFind) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND;
}

IOSCharArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangCharacterArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_CHAR_ARRAY;
  }
  IOSCharArray *result = [IOSCharArray arrayWithLength:array->size_];
  for (jint i = 0; i < array->size_; i++) {
    *IOSCharArray_GetRef(result, i) = [((JavaLangCharacter *) nil_chk(IOSObjectArray_Get(array, i))) charValue];
  }
  return result;
}

IOSCharArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangCharacterArray_withChar_(IOSObjectArray *array, jchar valueForNull) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_CHAR_ARRAY;
  }
  IOSCharArray *result = [IOSCharArray arrayWithLength:array->size_];
  for (jint i = 0; i < array->size_; i++) {
    JavaLangCharacter *b = IOSObjectArray_Get(array, i);
    *IOSCharArray_GetRef(result, i) = (b == nil ? valueForNull : [b charValue]);
  }
  return result;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toObjectWithCharArray_(IOSCharArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_CHARACTER_OBJECT_ARRAY;
  }
  IOSObjectArray *result = [IOSObjectArray arrayWithLength:array->size_ type:JavaLangCharacter_class_()];
  for (jint i = 0; i < array->size_; i++) {
    IOSObjectArray_Set(result, i, JavaLangCharacter_valueOfWithChar_(IOSCharArray_Get(array, i)));
  }
  return result;
}

IOSLongArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangLongArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_LONG_ARRAY;
  }
  IOSLongArray *result = [IOSLongArray arrayWithLength:array->size_];
  for (jint i = 0; i < array->size_; i++) {
    *IOSLongArray_GetRef(result, i) = [((JavaLangLong *) nil_chk(IOSObjectArray_Get(array, i))) longLongValue];
  }
  return result;
}

IOSLongArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangLongArray_withLong_(IOSObjectArray *array, jlong valueForNull) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_LONG_ARRAY;
  }
  IOSLongArray *result = [IOSLongArray arrayWithLength:array->size_];
  for (jint i = 0; i < array->size_; i++) {
    JavaLangLong *b = IOSObjectArray_Get(array, i);
    *IOSLongArray_GetRef(result, i) = (b == nil ? valueForNull : [b longLongValue]);
  }
  return result;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toObjectWithLongArray_(IOSLongArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_LONG_OBJECT_ARRAY;
  }
  IOSObjectArray *result = [IOSObjectArray arrayWithLength:array->size_ type:JavaLangLong_class_()];
  for (jint i = 0; i < array->size_; i++) {
    IOSObjectArray_Set(result, i, JavaLangLong_valueOfWithLong_(IOSLongArray_Get(array, i)));
  }
  return result;
}

IOSIntArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangIntegerArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_INT_ARRAY;
  }
  IOSIntArray *result = [IOSIntArray arrayWithLength:array->size_];
  for (jint i = 0; i < array->size_; i++) {
    *IOSIntArray_GetRef(result, i) = [((JavaLangInteger *) nil_chk(IOSObjectArray_Get(array, i))) intValue];
  }
  return result;
}

IOSIntArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangIntegerArray_withInt_(IOSObjectArray *array, jint valueForNull) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_INT_ARRAY;
  }
  IOSIntArray *result = [IOSIntArray arrayWithLength:array->size_];
  for (jint i = 0; i < array->size_; i++) {
    JavaLangInteger *b = IOSObjectArray_Get(array, i);
    *IOSIntArray_GetRef(result, i) = (b == nil ? valueForNull : [b intValue]);
  }
  return result;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toObjectWithIntArray_(IOSIntArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_INTEGER_OBJECT_ARRAY;
  }
  IOSObjectArray *result = [IOSObjectArray arrayWithLength:array->size_ type:JavaLangInteger_class_()];
  for (jint i = 0; i < array->size_; i++) {
    IOSObjectArray_Set(result, i, JavaLangInteger_valueOfWithInt_(IOSIntArray_Get(array, i)));
  }
  return result;
}

IOSShortArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangShortArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_SHORT_ARRAY;
  }
  IOSShortArray *result = [IOSShortArray arrayWithLength:array->size_];
  for (jint i = 0; i < array->size_; i++) {
    *IOSShortArray_GetRef(result, i) = [((JavaLangShort *) nil_chk(IOSObjectArray_Get(array, i))) shortValue];
  }
  return result;
}

IOSShortArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangShortArray_withShort_(IOSObjectArray *array, jshort valueForNull) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_SHORT_ARRAY;
  }
  IOSShortArray *result = [IOSShortArray arrayWithLength:array->size_];
  for (jint i = 0; i < array->size_; i++) {
    JavaLangShort *b = IOSObjectArray_Get(array, i);
    *IOSShortArray_GetRef(result, i) = (b == nil ? valueForNull : [b shortValue]);
  }
  return result;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toObjectWithShortArray_(IOSShortArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_SHORT_OBJECT_ARRAY;
  }
  IOSObjectArray *result = [IOSObjectArray arrayWithLength:array->size_ type:JavaLangShort_class_()];
  for (jint i = 0; i < array->size_; i++) {
    IOSObjectArray_Set(result, i, JavaLangShort_valueOfWithShort_(IOSShortArray_Get(array, i)));
  }
  return result;
}

IOSByteArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangByteArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_BYTE_ARRAY;
  }
  IOSByteArray *result = [IOSByteArray arrayWithLength:array->size_];
  for (jint i = 0; i < array->size_; i++) {
    *IOSByteArray_GetRef(result, i) = [((JavaLangByte *) nil_chk(IOSObjectArray_Get(array, i))) charValue];
  }
  return result;
}

IOSByteArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangByteArray_withByte_(IOSObjectArray *array, jbyte valueForNull) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_BYTE_ARRAY;
  }
  IOSByteArray *result = [IOSByteArray arrayWithLength:array->size_];
  for (jint i = 0; i < array->size_; i++) {
    JavaLangByte *b = IOSObjectArray_Get(array, i);
    *IOSByteArray_GetRef(result, i) = (b == nil ? valueForNull : [b charValue]);
  }
  return result;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toObjectWithByteArray_(IOSByteArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_BYTE_OBJECT_ARRAY;
  }
  IOSObjectArray *result = [IOSObjectArray arrayWithLength:array->size_ type:JavaLangByte_class_()];
  for (jint i = 0; i < array->size_; i++) {
    IOSObjectArray_Set(result, i, JavaLangByte_valueOfWithByte_(IOSByteArray_Get(array, i)));
  }
  return result;
}

IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangDoubleArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_DOUBLE_ARRAY;
  }
  IOSDoubleArray *result = [IOSDoubleArray arrayWithLength:array->size_];
  for (jint i = 0; i < array->size_; i++) {
    *IOSDoubleArray_GetRef(result, i) = [((JavaLangDouble *) nil_chk(IOSObjectArray_Get(array, i))) doubleValue];
  }
  return result;
}

IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangDoubleArray_withDouble_(IOSObjectArray *array, jdouble valueForNull) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_DOUBLE_ARRAY;
  }
  IOSDoubleArray *result = [IOSDoubleArray arrayWithLength:array->size_];
  for (jint i = 0; i < array->size_; i++) {
    JavaLangDouble *b = IOSObjectArray_Get(array, i);
    *IOSDoubleArray_GetRef(result, i) = (b == nil ? valueForNull : [b doubleValue]);
  }
  return result;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toObjectWithDoubleArray_(IOSDoubleArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_DOUBLE_OBJECT_ARRAY;
  }
  IOSObjectArray *result = [IOSObjectArray arrayWithLength:array->size_ type:JavaLangDouble_class_()];
  for (jint i = 0; i < array->size_; i++) {
    IOSObjectArray_Set(result, i, JavaLangDouble_valueOfWithDouble_(IOSDoubleArray_Get(array, i)));
  }
  return result;
}

IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangFloatArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_FLOAT_ARRAY;
  }
  IOSFloatArray *result = [IOSFloatArray arrayWithLength:array->size_];
  for (jint i = 0; i < array->size_; i++) {
    *IOSFloatArray_GetRef(result, i) = [((JavaLangFloat *) nil_chk(IOSObjectArray_Get(array, i))) floatValue];
  }
  return result;
}

IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangFloatArray_withFloat_(IOSObjectArray *array, jfloat valueForNull) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_FLOAT_ARRAY;
  }
  IOSFloatArray *result = [IOSFloatArray arrayWithLength:array->size_];
  for (jint i = 0; i < array->size_; i++) {
    JavaLangFloat *b = IOSObjectArray_Get(array, i);
    *IOSFloatArray_GetRef(result, i) = (b == nil ? valueForNull : [b floatValue]);
  }
  return result;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toObjectWithFloatArray_(IOSFloatArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_FLOAT_OBJECT_ARRAY;
  }
  IOSObjectArray *result = [IOSObjectArray arrayWithLength:array->size_ type:JavaLangFloat_class_()];
  for (jint i = 0; i < array->size_; i++) {
    IOSObjectArray_Set(result, i, JavaLangFloat_valueOfWithFloat_(IOSFloatArray_Get(array, i)));
  }
  return result;
}

id OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithId_(id array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  IOSClass *ct = [[array java_getClass] getComponentType];
  IOSClass *pt = OrgApacheCommonsLang3ClassUtils_wrapperToPrimitiveWithIOSClass_(ct);
  if ([((IOSClass *) nil_chk(JreLoadStatic(JavaLangInteger, TYPE))) isEqual:pt]) {
    return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangIntegerArray_((IOSObjectArray *) cast_check(array, IOSClass_arrayType(JavaLangInteger_class_(), 1)));
  }
  if ([((IOSClass *) nil_chk(JreLoadStatic(JavaLangLong, TYPE))) isEqual:pt]) {
    return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangLongArray_((IOSObjectArray *) cast_check(array, IOSClass_arrayType(JavaLangLong_class_(), 1)));
  }
  if ([((IOSClass *) nil_chk(JreLoadStatic(JavaLangShort, TYPE))) isEqual:pt]) {
    return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangShortArray_((IOSObjectArray *) cast_check(array, IOSClass_arrayType(JavaLangShort_class_(), 1)));
  }
  if ([((IOSClass *) nil_chk(JreLoadStatic(JavaLangDouble, TYPE))) isEqual:pt]) {
    return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangDoubleArray_((IOSObjectArray *) cast_check(array, IOSClass_arrayType(JavaLangDouble_class_(), 1)));
  }
  if ([((IOSClass *) nil_chk(JreLoadStatic(JavaLangFloat, TYPE))) isEqual:pt]) {
    return OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangFloatArray_((IOSObjectArray *) cast_check(array, IOSClass_arrayType(JavaLangFloat_class_(), 1)));
  }
  return array;
}

IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangBooleanArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_BOOLEAN_ARRAY;
  }
  IOSBooleanArray *result = [IOSBooleanArray arrayWithLength:array->size_];
  for (jint i = 0; i < array->size_; i++) {
    *IOSBooleanArray_GetRef(result, i) = [((JavaLangBoolean *) nil_chk(IOSObjectArray_Get(array, i))) booleanValue];
  }
  return result;
}

IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangBooleanArray_withBoolean_(IOSObjectArray *array, jboolean valueForNull) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_BOOLEAN_ARRAY;
  }
  IOSBooleanArray *result = [IOSBooleanArray arrayWithLength:array->size_];
  for (jint i = 0; i < array->size_; i++) {
    JavaLangBoolean *b = IOSObjectArray_Get(array, i);
    *IOSBooleanArray_GetRef(result, i) = (b == nil ? valueForNull : [b booleanValue]);
  }
  return result;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_toObjectWithBooleanArray_(IOSBooleanArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    return nil;
  }
  else if (array->size_ == 0) {
    return OrgApacheCommonsLang3ArrayUtils_EMPTY_BOOLEAN_OBJECT_ARRAY;
  }
  IOSObjectArray *result = [IOSObjectArray arrayWithLength:array->size_ type:JavaLangBoolean_class_()];
  for (jint i = 0; i < array->size_; i++) {
    IOSObjectArray_Set(result, i, (IOSBooleanArray_Get(array, i) ? JreLoadStatic(JavaLangBoolean, TRUE) : JreLoadStatic(JavaLangBoolean, FALSE)));
  }
  return result;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array) == 0;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithLongArray_(IOSLongArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array) == 0;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithIntArray_(IOSIntArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array) == 0;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithShortArray_(IOSShortArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array) == 0;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithCharArray_(IOSCharArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array) == 0;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithByteArray_(IOSByteArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array) == 0;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithDoubleArray_(IOSDoubleArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array) == 0;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithFloatArray_(IOSFloatArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array) == 0;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isEmptyWithBooleanArray_(IOSBooleanArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array) == 0;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithNSObjectArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return !OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(array);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithLongArray_(IOSLongArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return !OrgApacheCommonsLang3ArrayUtils_isEmptyWithLongArray_(array);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithIntArray_(IOSIntArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return !OrgApacheCommonsLang3ArrayUtils_isEmptyWithIntArray_(array);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithShortArray_(IOSShortArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return !OrgApacheCommonsLang3ArrayUtils_isEmptyWithShortArray_(array);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithCharArray_(IOSCharArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return !OrgApacheCommonsLang3ArrayUtils_isEmptyWithCharArray_(array);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithByteArray_(IOSByteArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return !OrgApacheCommonsLang3ArrayUtils_isEmptyWithByteArray_(array);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithDoubleArray_(IOSDoubleArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return !OrgApacheCommonsLang3ArrayUtils_isEmptyWithDoubleArray_(array);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithFloatArray_(IOSFloatArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return !OrgApacheCommonsLang3ArrayUtils_isEmptyWithFloatArray_(array);
}

jboolean OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithBooleanArray_(IOSBooleanArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return !OrgApacheCommonsLang3ArrayUtils_isEmptyWithBooleanArray_(array);
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_addAllWithNSObjectArray_withNSObjectArray_(IOSObjectArray *array1, IOSObjectArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array1 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithNSObjectArray_(array2);
  }
  else if (array2 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithNSObjectArray_(array1);
  }
  IOSClass *type1 = [[array1 java_getClass] getComponentType];
  IOSObjectArray *joinedArray = (IOSObjectArray *) cast_check(JavaLangReflectArray_newInstanceWithIOSClass_withInt_(type1, array1->size_ + array2->size_), IOSClass_arrayType(NSObject_class_(), 1));
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array1, 0, joinedArray, 0, array1->size_);
  @try {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array2, 0, joinedArray, array1->size_, array2->size_);
  }
  @catch (JavaLangArrayStoreException *ase) {
    IOSClass *type2 = [[array2 java_getClass] getComponentType];
    if (![((IOSClass *) nil_chk(type1)) isAssignableFrom:type2]) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_withNSException_(JreStrcat("$$$$", @"Cannot store ", [((IOSClass *) nil_chk(type2)) getName], @" in an array of ", [type1 getName]), ase);
    }
    @throw ase;
  }
  return joinedArray;
}

IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_addAllWithBooleanArray_withBooleanArray_(IOSBooleanArray *array1, IOSBooleanArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array1 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithBooleanArray_(array2);
  }
  else if (array2 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithBooleanArray_(array1);
  }
  IOSBooleanArray *joinedArray = [IOSBooleanArray arrayWithLength:array1->size_ + array2->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array1, 0, joinedArray, 0, array1->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array2, 0, joinedArray, array1->size_, array2->size_);
  return joinedArray;
}

IOSCharArray *OrgApacheCommonsLang3ArrayUtils_addAllWithCharArray_withCharArray_(IOSCharArray *array1, IOSCharArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array1 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithCharArray_(array2);
  }
  else if (array2 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithCharArray_(array1);
  }
  IOSCharArray *joinedArray = [IOSCharArray arrayWithLength:array1->size_ + array2->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array1, 0, joinedArray, 0, array1->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array2, 0, joinedArray, array1->size_, array2->size_);
  return joinedArray;
}

IOSByteArray *OrgApacheCommonsLang3ArrayUtils_addAllWithByteArray_withByteArray_(IOSByteArray *array1, IOSByteArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array1 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithByteArray_(array2);
  }
  else if (array2 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithByteArray_(array1);
  }
  IOSByteArray *joinedArray = [IOSByteArray arrayWithLength:array1->size_ + array2->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array1, 0, joinedArray, 0, array1->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array2, 0, joinedArray, array1->size_, array2->size_);
  return joinedArray;
}

IOSShortArray *OrgApacheCommonsLang3ArrayUtils_addAllWithShortArray_withShortArray_(IOSShortArray *array1, IOSShortArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array1 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithShortArray_(array2);
  }
  else if (array2 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithShortArray_(array1);
  }
  IOSShortArray *joinedArray = [IOSShortArray arrayWithLength:array1->size_ + array2->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array1, 0, joinedArray, 0, array1->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array2, 0, joinedArray, array1->size_, array2->size_);
  return joinedArray;
}

IOSIntArray *OrgApacheCommonsLang3ArrayUtils_addAllWithIntArray_withIntArray_(IOSIntArray *array1, IOSIntArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array1 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithIntArray_(array2);
  }
  else if (array2 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithIntArray_(array1);
  }
  IOSIntArray *joinedArray = [IOSIntArray arrayWithLength:array1->size_ + array2->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array1, 0, joinedArray, 0, array1->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array2, 0, joinedArray, array1->size_, array2->size_);
  return joinedArray;
}

IOSLongArray *OrgApacheCommonsLang3ArrayUtils_addAllWithLongArray_withLongArray_(IOSLongArray *array1, IOSLongArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array1 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithLongArray_(array2);
  }
  else if (array2 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithLongArray_(array1);
  }
  IOSLongArray *joinedArray = [IOSLongArray arrayWithLength:array1->size_ + array2->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array1, 0, joinedArray, 0, array1->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array2, 0, joinedArray, array1->size_, array2->size_);
  return joinedArray;
}

IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_addAllWithFloatArray_withFloatArray_(IOSFloatArray *array1, IOSFloatArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array1 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithFloatArray_(array2);
  }
  else if (array2 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithFloatArray_(array1);
  }
  IOSFloatArray *joinedArray = [IOSFloatArray arrayWithLength:array1->size_ + array2->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array1, 0, joinedArray, 0, array1->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array2, 0, joinedArray, array1->size_, array2->size_);
  return joinedArray;
}

IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_addAllWithDoubleArray_withDoubleArray_(IOSDoubleArray *array1, IOSDoubleArray *array2) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array1 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithDoubleArray_(array2);
  }
  else if (array2 == nil) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithDoubleArray_(array1);
  }
  IOSDoubleArray *joinedArray = [IOSDoubleArray arrayWithLength:array1->size_ + array2->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array1, 0, joinedArray, 0, array1->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array2, 0, joinedArray, array1->size_, array2->size_);
  return joinedArray;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_addWithNSObjectArray_withId_(IOSObjectArray *array, id element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  IOSClass *type;
  if (array != nil) {
    type = [[array java_getClass] getComponentType];
  }
  else if (element != nil) {
    type = [element java_getClass];
  }
  else {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Arguments cannot both be null");
  }
  IOSObjectArray *newArray = (IOSObjectArray *) cast_check(OrgApacheCommonsLang3ArrayUtils_copyArrayGrow1WithId_withIOSClass_(array, type), IOSClass_arrayType(NSObject_class_(), 1));
  IOSObjectArray_Set(newArray, ((IOSObjectArray *) nil_chk(newArray))->size_ - 1, element);
  return newArray;
}

IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_addWithBooleanArray_withBoolean_(IOSBooleanArray *array, jboolean element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  IOSBooleanArray *newArray = (IOSBooleanArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_copyArrayGrow1WithId_withIOSClass_(array, JreLoadStatic(JavaLangBoolean, TYPE)), [IOSBooleanArray class]);
  *IOSBooleanArray_GetRef(newArray, ((IOSBooleanArray *) nil_chk(newArray))->size_ - 1) = element;
  return newArray;
}

IOSByteArray *OrgApacheCommonsLang3ArrayUtils_addWithByteArray_withByte_(IOSByteArray *array, jbyte element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  IOSByteArray *newArray = (IOSByteArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_copyArrayGrow1WithId_withIOSClass_(array, JreLoadStatic(JavaLangByte, TYPE)), [IOSByteArray class]);
  *IOSByteArray_GetRef(newArray, ((IOSByteArray *) nil_chk(newArray))->size_ - 1) = element;
  return newArray;
}

IOSCharArray *OrgApacheCommonsLang3ArrayUtils_addWithCharArray_withChar_(IOSCharArray *array, jchar element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  IOSCharArray *newArray = (IOSCharArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_copyArrayGrow1WithId_withIOSClass_(array, JreLoadStatic(JavaLangCharacter, TYPE)), [IOSCharArray class]);
  *IOSCharArray_GetRef(newArray, ((IOSCharArray *) nil_chk(newArray))->size_ - 1) = element;
  return newArray;
}

IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_addWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  IOSDoubleArray *newArray = (IOSDoubleArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_copyArrayGrow1WithId_withIOSClass_(array, JreLoadStatic(JavaLangDouble, TYPE)), [IOSDoubleArray class]);
  *IOSDoubleArray_GetRef(newArray, ((IOSDoubleArray *) nil_chk(newArray))->size_ - 1) = element;
  return newArray;
}

IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_addWithFloatArray_withFloat_(IOSFloatArray *array, jfloat element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  IOSFloatArray *newArray = (IOSFloatArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_copyArrayGrow1WithId_withIOSClass_(array, JreLoadStatic(JavaLangFloat, TYPE)), [IOSFloatArray class]);
  *IOSFloatArray_GetRef(newArray, ((IOSFloatArray *) nil_chk(newArray))->size_ - 1) = element;
  return newArray;
}

IOSIntArray *OrgApacheCommonsLang3ArrayUtils_addWithIntArray_withInt_(IOSIntArray *array, jint element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  IOSIntArray *newArray = (IOSIntArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_copyArrayGrow1WithId_withIOSClass_(array, JreLoadStatic(JavaLangInteger, TYPE)), [IOSIntArray class]);
  *IOSIntArray_GetRef(newArray, ((IOSIntArray *) nil_chk(newArray))->size_ - 1) = element;
  return newArray;
}

IOSLongArray *OrgApacheCommonsLang3ArrayUtils_addWithLongArray_withLong_(IOSLongArray *array, jlong element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  IOSLongArray *newArray = (IOSLongArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_copyArrayGrow1WithId_withIOSClass_(array, JreLoadStatic(JavaLangLong, TYPE)), [IOSLongArray class]);
  *IOSLongArray_GetRef(newArray, ((IOSLongArray *) nil_chk(newArray))->size_ - 1) = element;
  return newArray;
}

IOSShortArray *OrgApacheCommonsLang3ArrayUtils_addWithShortArray_withShort_(IOSShortArray *array, jshort element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  IOSShortArray *newArray = (IOSShortArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_copyArrayGrow1WithId_withIOSClass_(array, JreLoadStatic(JavaLangShort, TYPE)), [IOSShortArray class]);
  *IOSShortArray_GetRef(newArray, ((IOSShortArray *) nil_chk(newArray))->size_ - 1) = element;
  return newArray;
}

id OrgApacheCommonsLang3ArrayUtils_copyArrayGrow1WithId_withIOSClass_(id array, IOSClass *newArrayComponentType) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array != nil) {
    jint arrayLength = JavaLangReflectArray_getLengthWithId_(array);
    id newArray = JavaLangReflectArray_newInstanceWithIOSClass_withInt_([[array java_getClass] getComponentType], arrayLength + 1);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, newArray, 0, arrayLength);
    return newArray;
  }
  return JavaLangReflectArray_newInstanceWithIOSClass_withInt_(newArrayComponentType, 1);
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_addWithNSObjectArray_withInt_withId_(IOSObjectArray *array, jint index, id element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  IOSClass *clss = nil;
  if (array != nil) {
    clss = [[array java_getClass] getComponentType];
  }
  else if (element != nil) {
    clss = [element java_getClass];
  }
  else {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Array and element cannot both be null");
  }
  IOSObjectArray *newArray = (IOSObjectArray *) cast_check(OrgApacheCommonsLang3ArrayUtils_addWithId_withInt_withId_withIOSClass_(array, index, element, clss), IOSClass_arrayType(NSObject_class_(), 1));
  return newArray;
}

IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_addWithBooleanArray_withInt_withBoolean_(IOSBooleanArray *array, jint index, jboolean element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSBooleanArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_addWithId_withInt_withId_withIOSClass_(array, index, JavaLangBoolean_valueOfWithBoolean_(element), JreLoadStatic(JavaLangBoolean, TYPE)), [IOSBooleanArray class]);
}

IOSCharArray *OrgApacheCommonsLang3ArrayUtils_addWithCharArray_withInt_withChar_(IOSCharArray *array, jint index, jchar element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSCharArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_addWithId_withInt_withId_withIOSClass_(array, index, JavaLangCharacter_valueOfWithChar_(element), JreLoadStatic(JavaLangCharacter, TYPE)), [IOSCharArray class]);
}

IOSByteArray *OrgApacheCommonsLang3ArrayUtils_addWithByteArray_withInt_withByte_(IOSByteArray *array, jint index, jbyte element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSByteArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_addWithId_withInt_withId_withIOSClass_(array, index, JavaLangByte_valueOfWithByte_(element), JreLoadStatic(JavaLangByte, TYPE)), [IOSByteArray class]);
}

IOSShortArray *OrgApacheCommonsLang3ArrayUtils_addWithShortArray_withInt_withShort_(IOSShortArray *array, jint index, jshort element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSShortArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_addWithId_withInt_withId_withIOSClass_(array, index, JavaLangShort_valueOfWithShort_(element), JreLoadStatic(JavaLangShort, TYPE)), [IOSShortArray class]);
}

IOSIntArray *OrgApacheCommonsLang3ArrayUtils_addWithIntArray_withInt_withInt_(IOSIntArray *array, jint index, jint element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSIntArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_addWithId_withInt_withId_withIOSClass_(array, index, JavaLangInteger_valueOfWithInt_(element), JreLoadStatic(JavaLangInteger, TYPE)), [IOSIntArray class]);
}

IOSLongArray *OrgApacheCommonsLang3ArrayUtils_addWithLongArray_withInt_withLong_(IOSLongArray *array, jint index, jlong element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSLongArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_addWithId_withInt_withId_withIOSClass_(array, index, JavaLangLong_valueOfWithLong_(element), JreLoadStatic(JavaLangLong, TYPE)), [IOSLongArray class]);
}

IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_addWithFloatArray_withInt_withFloat_(IOSFloatArray *array, jint index, jfloat element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSFloatArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_addWithId_withInt_withId_withIOSClass_(array, index, JavaLangFloat_valueOfWithFloat_(element), JreLoadStatic(JavaLangFloat, TYPE)), [IOSFloatArray class]);
}

IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_addWithDoubleArray_withInt_withDouble_(IOSDoubleArray *array, jint index, jdouble element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSDoubleArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_addWithId_withInt_withId_withIOSClass_(array, index, JavaLangDouble_valueOfWithDouble_(element), JreLoadStatic(JavaLangDouble, TYPE)), [IOSDoubleArray class]);
}

id OrgApacheCommonsLang3ArrayUtils_addWithId_withInt_withId_withIOSClass_(id array, jint index, id element, IOSClass *clss) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil) {
    if (index != 0) {
      @throw create_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$", @"Index: ", index, @", Length: 0"));
    }
    id joinedArray = JavaLangReflectArray_newInstanceWithIOSClass_withInt_(clss, 1);
    JavaLangReflectArray_setWithId_withInt_withId_(joinedArray, 0, element);
    return joinedArray;
  }
  jint length = JavaLangReflectArray_getLengthWithId_(array);
  if (index > length || index < 0) {
    @throw create_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I", @"Index: ", index, @", Length: ", length));
  }
  id result = JavaLangReflectArray_newInstanceWithIOSClass_withInt_(clss, length + 1);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, result, 0, index);
  JavaLangReflectArray_setWithId_withInt_withId_(result, index, element);
  if (index < length) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, index, result, index + 1, length - index);
  }
  return result;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_removeWithNSObjectArray_withInt_(IOSObjectArray *array, jint index) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSObjectArray *) cast_check(OrgApacheCommonsLang3ArrayUtils_removeWithId_withInt_(array, index), IOSClass_arrayType(NSObject_class_(), 1));
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithNSObjectArray_withId_(IOSObjectArray *array, id element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithNSObjectArray_withId_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithNSObjectArray_(array);
  }
  return OrgApacheCommonsLang3ArrayUtils_removeWithNSObjectArray_withInt_(array, index);
}

IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_removeWithBooleanArray_withInt_(IOSBooleanArray *array, jint index) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSBooleanArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeWithId_withInt_(array, index), [IOSBooleanArray class]);
}

IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithBooleanArray_withBoolean_(IOSBooleanArray *array, jboolean element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithBooleanArray_withBoolean_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithBooleanArray_(array);
  }
  return OrgApacheCommonsLang3ArrayUtils_removeWithBooleanArray_withInt_(array, index);
}

IOSByteArray *OrgApacheCommonsLang3ArrayUtils_removeWithByteArray_withInt_(IOSByteArray *array, jint index) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSByteArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeWithId_withInt_(array, index), [IOSByteArray class]);
}

IOSByteArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithByteArray_withByte_(IOSByteArray *array, jbyte element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithByteArray_withByte_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithByteArray_(array);
  }
  return OrgApacheCommonsLang3ArrayUtils_removeWithByteArray_withInt_(array, index);
}

IOSCharArray *OrgApacheCommonsLang3ArrayUtils_removeWithCharArray_withInt_(IOSCharArray *array, jint index) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSCharArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeWithId_withInt_(array, index), [IOSCharArray class]);
}

IOSCharArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithCharArray_withChar_(IOSCharArray *array, jchar element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithCharArray_withChar_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithCharArray_(array);
  }
  return OrgApacheCommonsLang3ArrayUtils_removeWithCharArray_withInt_(array, index);
}

IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_removeWithDoubleArray_withInt_(IOSDoubleArray *array, jint index) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSDoubleArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeWithId_withInt_(array, index), [IOSDoubleArray class]);
}

IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithDoubleArray_(array);
  }
  return OrgApacheCommonsLang3ArrayUtils_removeWithDoubleArray_withInt_(array, index);
}

IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_removeWithFloatArray_withInt_(IOSFloatArray *array, jint index) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSFloatArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeWithId_withInt_(array, index), [IOSFloatArray class]);
}

IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithFloatArray_withFloat_(IOSFloatArray *array, jfloat element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithFloatArray_withFloat_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithFloatArray_(array);
  }
  return OrgApacheCommonsLang3ArrayUtils_removeWithFloatArray_withInt_(array, index);
}

IOSIntArray *OrgApacheCommonsLang3ArrayUtils_removeWithIntArray_withInt_(IOSIntArray *array, jint index) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSIntArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeWithId_withInt_(array, index), [IOSIntArray class]);
}

IOSIntArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithIntArray_withInt_(IOSIntArray *array, jint element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithIntArray_withInt_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithIntArray_(array);
  }
  return OrgApacheCommonsLang3ArrayUtils_removeWithIntArray_withInt_(array, index);
}

IOSLongArray *OrgApacheCommonsLang3ArrayUtils_removeWithLongArray_withInt_(IOSLongArray *array, jint index) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSLongArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeWithId_withInt_(array, index), [IOSLongArray class]);
}

IOSLongArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithLongArray_withLong_(IOSLongArray *array, jlong element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithLongArray_withLong_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithLongArray_(array);
  }
  return OrgApacheCommonsLang3ArrayUtils_removeWithLongArray_withInt_(array, index);
}

IOSShortArray *OrgApacheCommonsLang3ArrayUtils_removeWithShortArray_withInt_(IOSShortArray *array, jint index) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSShortArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeWithId_withInt_(array, index), [IOSShortArray class]);
}

IOSShortArray *OrgApacheCommonsLang3ArrayUtils_removeElementWithShortArray_withShort_(IOSShortArray *array, jshort element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithShortArray_withShort_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithShortArray_(array);
  }
  return OrgApacheCommonsLang3ArrayUtils_removeWithShortArray_withInt_(array, index);
}

id OrgApacheCommonsLang3ArrayUtils_removeWithId_withInt_(id array, jint index) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint length = OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array);
  if (index < 0 || index >= length) {
    @throw create_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I", @"Index: ", index, @", Length: ", length));
  }
  id result = JavaLangReflectArray_newInstanceWithIOSClass_withInt_([[nil_chk(array) java_getClass] getComponentType], length - 1);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, result, 0, index);
  if (index < length - 1) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, index + 1, result, index, length - index - 1);
  }
  return result;
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithNSObjectArray_withIntArray_(IOSObjectArray *array, IOSIntArray *indices) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSObjectArray *) cast_check(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withIntArray_(array, indices), IOSClass_arrayType(NSObject_class_(), 1));
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithNSObjectArray_withNSObjectArray_(IOSObjectArray *array, IOSObjectArray *values) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(array) || OrgApacheCommonsLang3ArrayUtils_isEmptyWithNSObjectArray_(values)) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithNSObjectArray_(array);
  }
  JavaUtilHashMap *occurrences = create_JavaUtilHashMap_initWithInt_(((IOSObjectArray *) nil_chk(values))->size_);
  {
    IOSObjectArray *a__ = values;
    id const *b__ = a__->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id v = *b__++;
      OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:v];
      if (count == nil) {
        [occurrences putWithId:v withId:create_OrgApacheCommonsLang3MutableMutableInt_initWithInt_(1)];
      }
      else {
        [count increment];
      }
    }
  }
  JavaUtilBitSet *toRemove = create_JavaUtilBitSet_init();
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(array))->size_; i++) {
    id key = IOSObjectArray_Get(array, i);
    OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:key];
    if (count != nil) {
      if ([count decrementAndGet] == 0) {
        [occurrences removeWithId:key];
      }
      [toRemove setWithInt:i];
    }
  }
  IOSObjectArray *result = (IOSObjectArray *) cast_check(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withJavaUtilBitSet_(array, toRemove), IOSClass_arrayType(NSObject_class_(), 1));
  return result;
}

IOSByteArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithByteArray_withIntArray_(IOSByteArray *array, IOSIntArray *indices) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSByteArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withIntArray_(array, indices), [IOSByteArray class]);
}

IOSByteArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithByteArray_withByteArray_(IOSByteArray *array, IOSByteArray *values) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithByteArray_(array) || OrgApacheCommonsLang3ArrayUtils_isEmptyWithByteArray_(values)) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithByteArray_(array);
  }
  id<JavaUtilMap> occurrences = create_JavaUtilHashMap_initWithInt_(((IOSByteArray *) nil_chk(values))->size_);
  {
    IOSByteArray *a__ = values;
    jbyte const *b__ = a__->buffer_;
    jbyte const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jbyte v = *b__++;
      JavaLangByte *boxed = JavaLangByte_valueOfWithByte_(v);
      OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:boxed];
      if (count == nil) {
        [occurrences putWithId:boxed withId:create_OrgApacheCommonsLang3MutableMutableInt_initWithInt_(1)];
      }
      else {
        [count increment];
      }
    }
  }
  JavaUtilBitSet *toRemove = create_JavaUtilBitSet_init();
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(array))->size_; i++) {
    jbyte key = IOSByteArray_Get(array, i);
    OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:JavaLangByte_valueOfWithByte_(key)];
    if (count != nil) {
      if ([count decrementAndGet] == 0) {
        [occurrences removeWithId:JavaLangByte_valueOfWithByte_(key)];
      }
      [toRemove setWithInt:i];
    }
  }
  return (IOSByteArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withJavaUtilBitSet_(array, toRemove), [IOSByteArray class]);
}

IOSShortArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithShortArray_withIntArray_(IOSShortArray *array, IOSIntArray *indices) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSShortArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withIntArray_(array, indices), [IOSShortArray class]);
}

IOSShortArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithShortArray_withShortArray_(IOSShortArray *array, IOSShortArray *values) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithShortArray_(array) || OrgApacheCommonsLang3ArrayUtils_isEmptyWithShortArray_(values)) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithShortArray_(array);
  }
  JavaUtilHashMap *occurrences = create_JavaUtilHashMap_initWithInt_(((IOSShortArray *) nil_chk(values))->size_);
  {
    IOSShortArray *a__ = values;
    jshort const *b__ = a__->buffer_;
    jshort const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jshort v = *b__++;
      JavaLangShort *boxed = JavaLangShort_valueOfWithShort_(v);
      OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:boxed];
      if (count == nil) {
        [occurrences putWithId:boxed withId:create_OrgApacheCommonsLang3MutableMutableInt_initWithInt_(1)];
      }
      else {
        [count increment];
      }
    }
  }
  JavaUtilBitSet *toRemove = create_JavaUtilBitSet_init();
  for (jint i = 0; i < ((IOSShortArray *) nil_chk(array))->size_; i++) {
    jshort key = IOSShortArray_Get(array, i);
    OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:JavaLangShort_valueOfWithShort_(key)];
    if (count != nil) {
      if ([count decrementAndGet] == 0) {
        [occurrences removeWithId:JavaLangShort_valueOfWithShort_(key)];
      }
      [toRemove setWithInt:i];
    }
  }
  return (IOSShortArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withJavaUtilBitSet_(array, toRemove), [IOSShortArray class]);
}

IOSIntArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithIntArray_withIntArray_(IOSIntArray *array, IOSIntArray *indices) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSIntArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withIntArray_(array, indices), [IOSIntArray class]);
}

IOSIntArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithIntArray_withIntArray_(IOSIntArray *array, IOSIntArray *values) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithIntArray_(array) || OrgApacheCommonsLang3ArrayUtils_isEmptyWithIntArray_(values)) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithIntArray_(array);
  }
  JavaUtilHashMap *occurrences = create_JavaUtilHashMap_initWithInt_(((IOSIntArray *) nil_chk(values))->size_);
  {
    IOSIntArray *a__ = values;
    jint const *b__ = a__->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint v = *b__++;
      JavaLangInteger *boxed = JavaLangInteger_valueOfWithInt_(v);
      OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:boxed];
      if (count == nil) {
        [occurrences putWithId:boxed withId:create_OrgApacheCommonsLang3MutableMutableInt_initWithInt_(1)];
      }
      else {
        [count increment];
      }
    }
  }
  JavaUtilBitSet *toRemove = create_JavaUtilBitSet_init();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(array))->size_; i++) {
    jint key = IOSIntArray_Get(array, i);
    OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:JavaLangInteger_valueOfWithInt_(key)];
    if (count != nil) {
      if ([count decrementAndGet] == 0) {
        [occurrences removeWithId:JavaLangInteger_valueOfWithInt_(key)];
      }
      [toRemove setWithInt:i];
    }
  }
  return (IOSIntArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withJavaUtilBitSet_(array, toRemove), [IOSIntArray class]);
}

IOSCharArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithCharArray_withIntArray_(IOSCharArray *array, IOSIntArray *indices) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSCharArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withIntArray_(array, indices), [IOSCharArray class]);
}

IOSCharArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithCharArray_withCharArray_(IOSCharArray *array, IOSCharArray *values) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithCharArray_(array) || OrgApacheCommonsLang3ArrayUtils_isEmptyWithCharArray_(values)) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithCharArray_(array);
  }
  JavaUtilHashMap *occurrences = create_JavaUtilHashMap_initWithInt_(((IOSCharArray *) nil_chk(values))->size_);
  {
    IOSCharArray *a__ = values;
    jchar const *b__ = a__->buffer_;
    jchar const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jchar v = *b__++;
      JavaLangCharacter *boxed = JavaLangCharacter_valueOfWithChar_(v);
      OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:boxed];
      if (count == nil) {
        [occurrences putWithId:boxed withId:create_OrgApacheCommonsLang3MutableMutableInt_initWithInt_(1)];
      }
      else {
        [count increment];
      }
    }
  }
  JavaUtilBitSet *toRemove = create_JavaUtilBitSet_init();
  for (jint i = 0; i < ((IOSCharArray *) nil_chk(array))->size_; i++) {
    jchar key = IOSCharArray_Get(array, i);
    OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:JavaLangCharacter_valueOfWithChar_(key)];
    if (count != nil) {
      if ([count decrementAndGet] == 0) {
        [occurrences removeWithId:JavaLangCharacter_valueOfWithChar_(key)];
      }
      [toRemove setWithInt:i];
    }
  }
  return (IOSCharArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withJavaUtilBitSet_(array, toRemove), [IOSCharArray class]);
}

IOSLongArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithLongArray_withIntArray_(IOSLongArray *array, IOSIntArray *indices) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSLongArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withIntArray_(array, indices), [IOSLongArray class]);
}

IOSLongArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithLongArray_withLongArray_(IOSLongArray *array, IOSLongArray *values) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithLongArray_(array) || OrgApacheCommonsLang3ArrayUtils_isEmptyWithLongArray_(values)) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithLongArray_(array);
  }
  JavaUtilHashMap *occurrences = create_JavaUtilHashMap_initWithInt_(((IOSLongArray *) nil_chk(values))->size_);
  {
    IOSLongArray *a__ = values;
    jlong const *b__ = a__->buffer_;
    jlong const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jlong v = *b__++;
      JavaLangLong *boxed = JavaLangLong_valueOfWithLong_(v);
      OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:boxed];
      if (count == nil) {
        [occurrences putWithId:boxed withId:create_OrgApacheCommonsLang3MutableMutableInt_initWithInt_(1)];
      }
      else {
        [count increment];
      }
    }
  }
  JavaUtilBitSet *toRemove = create_JavaUtilBitSet_init();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(array))->size_; i++) {
    jlong key = IOSLongArray_Get(array, i);
    OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:JavaLangLong_valueOfWithLong_(key)];
    if (count != nil) {
      if ([count decrementAndGet] == 0) {
        [occurrences removeWithId:JavaLangLong_valueOfWithLong_(key)];
      }
      [toRemove setWithInt:i];
    }
  }
  return (IOSLongArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withJavaUtilBitSet_(array, toRemove), [IOSLongArray class]);
}

IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithFloatArray_withIntArray_(IOSFloatArray *array, IOSIntArray *indices) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSFloatArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withIntArray_(array, indices), [IOSFloatArray class]);
}

IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithFloatArray_withFloatArray_(IOSFloatArray *array, IOSFloatArray *values) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithFloatArray_(array) || OrgApacheCommonsLang3ArrayUtils_isEmptyWithFloatArray_(values)) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithFloatArray_(array);
  }
  JavaUtilHashMap *occurrences = create_JavaUtilHashMap_initWithInt_(((IOSFloatArray *) nil_chk(values))->size_);
  {
    IOSFloatArray *a__ = values;
    jfloat const *b__ = a__->buffer_;
    jfloat const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jfloat v = *b__++;
      JavaLangFloat *boxed = JavaLangFloat_valueOfWithFloat_(v);
      OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:boxed];
      if (count == nil) {
        [occurrences putWithId:boxed withId:create_OrgApacheCommonsLang3MutableMutableInt_initWithInt_(1)];
      }
      else {
        [count increment];
      }
    }
  }
  JavaUtilBitSet *toRemove = create_JavaUtilBitSet_init();
  for (jint i = 0; i < ((IOSFloatArray *) nil_chk(array))->size_; i++) {
    jfloat key = IOSFloatArray_Get(array, i);
    OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:JavaLangFloat_valueOfWithFloat_(key)];
    if (count != nil) {
      if ([count decrementAndGet] == 0) {
        [occurrences removeWithId:JavaLangFloat_valueOfWithFloat_(key)];
      }
      [toRemove setWithInt:i];
    }
  }
  return (IOSFloatArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withJavaUtilBitSet_(array, toRemove), [IOSFloatArray class]);
}

IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithDoubleArray_withIntArray_(IOSDoubleArray *array, IOSIntArray *indices) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSDoubleArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withIntArray_(array, indices), [IOSDoubleArray class]);
}

IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithDoubleArray_withDoubleArray_(IOSDoubleArray *array, IOSDoubleArray *values) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithDoubleArray_(array) || OrgApacheCommonsLang3ArrayUtils_isEmptyWithDoubleArray_(values)) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithDoubleArray_(array);
  }
  JavaUtilHashMap *occurrences = create_JavaUtilHashMap_initWithInt_(((IOSDoubleArray *) nil_chk(values))->size_);
  {
    IOSDoubleArray *a__ = values;
    jdouble const *b__ = a__->buffer_;
    jdouble const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jdouble v = *b__++;
      JavaLangDouble *boxed = JavaLangDouble_valueOfWithDouble_(v);
      OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:boxed];
      if (count == nil) {
        [occurrences putWithId:boxed withId:create_OrgApacheCommonsLang3MutableMutableInt_initWithInt_(1)];
      }
      else {
        [count increment];
      }
    }
  }
  JavaUtilBitSet *toRemove = create_JavaUtilBitSet_init();
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(array))->size_; i++) {
    jdouble key = IOSDoubleArray_Get(array, i);
    OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:JavaLangDouble_valueOfWithDouble_(key)];
    if (count != nil) {
      if ([count decrementAndGet] == 0) {
        [occurrences removeWithId:JavaLangDouble_valueOfWithDouble_(key)];
      }
      [toRemove setWithInt:i];
    }
  }
  return (IOSDoubleArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withJavaUtilBitSet_(array, toRemove), [IOSDoubleArray class]);
}

IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_removeAllWithBooleanArray_withIntArray_(IOSBooleanArray *array, IOSIntArray *indices) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return (IOSBooleanArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withIntArray_(array, indices), [IOSBooleanArray class]);
}

IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_removeElementsWithBooleanArray_withBooleanArray_(IOSBooleanArray *array, IOSBooleanArray *values) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (OrgApacheCommonsLang3ArrayUtils_isEmptyWithBooleanArray_(array) || OrgApacheCommonsLang3ArrayUtils_isEmptyWithBooleanArray_(values)) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithBooleanArray_(array);
  }
  JavaUtilHashMap *occurrences = create_JavaUtilHashMap_initWithInt_(2);
  {
    IOSBooleanArray *a__ = values;
    jboolean const *b__ = ((IOSBooleanArray *) nil_chk(a__))->buffer_;
    jboolean const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jboolean v = *b__++;
      JavaLangBoolean *boxed = JavaLangBoolean_valueOfWithBoolean_(v);
      OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:boxed];
      if (count == nil) {
        [occurrences putWithId:boxed withId:create_OrgApacheCommonsLang3MutableMutableInt_initWithInt_(1)];
      }
      else {
        [count increment];
      }
    }
  }
  JavaUtilBitSet *toRemove = create_JavaUtilBitSet_init();
  for (jint i = 0; i < ((IOSBooleanArray *) nil_chk(array))->size_; i++) {
    jboolean key = IOSBooleanArray_Get(array, i);
    OrgApacheCommonsLang3MutableMutableInt *count = [occurrences getWithId:JavaLangBoolean_valueOfWithBoolean_(key)];
    if (count != nil) {
      if ([count decrementAndGet] == 0) {
        [occurrences removeWithId:JavaLangBoolean_valueOfWithBoolean_(key)];
      }
      [toRemove setWithInt:i];
    }
  }
  return (IOSBooleanArray *) cast_chk(OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withJavaUtilBitSet_(array, toRemove), [IOSBooleanArray class]);
}

id OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withIntArray_(id array, IOSIntArray *indices) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint length = OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array);
  jint diff = 0;
  IOSIntArray *clonedIndices = OrgApacheCommonsLang3ArrayUtils_cloneWithIntArray_(indices);
  JavaUtilArrays_sortWithIntArray_(clonedIndices);
  if (OrgApacheCommonsLang3ArrayUtils_isNotEmptyWithIntArray_(clonedIndices)) {
    jint i = ((IOSIntArray *) nil_chk(clonedIndices))->size_;
    jint prevIndex = length;
    while (--i >= 0) {
      jint index = IOSIntArray_Get(clonedIndices, i);
      if (index < 0 || index >= length) {
        @throw create_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I", @"Index: ", index, @", Length: ", length));
      }
      if (index >= prevIndex) {
        continue;
      }
      diff++;
      prevIndex = index;
    }
  }
  id result = JavaLangReflectArray_newInstanceWithIOSClass_withInt_([[nil_chk(array) java_getClass] getComponentType], length - diff);
  if (diff < length) {
    jint end = length;
    jint dest = length - diff;
    for (jint i = ((IOSIntArray *) nil_chk(clonedIndices))->size_ - 1; i >= 0; i--) {
      jint index = IOSIntArray_Get(clonedIndices, i);
      if (end - index > 1) {
        jint cp = end - index - 1;
        dest -= cp;
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, index + 1, result, dest, cp);
      }
      end = index;
    }
    if (end > 0) {
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, result, 0, end);
    }
  }
  return result;
}

id OrgApacheCommonsLang3ArrayUtils_removeAllWithId_withJavaUtilBitSet_(id array, JavaUtilBitSet *indices) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint srcLength = OrgApacheCommonsLang3ArrayUtils_getLengthWithId_(array);
  jint removals = [((JavaUtilBitSet *) nil_chk(indices)) cardinality];
  id result = JavaLangReflectArray_newInstanceWithIOSClass_withInt_([[nil_chk(array) java_getClass] getComponentType], srcLength - removals);
  jint srcIndex = 0;
  jint destIndex = 0;
  jint count;
  jint set;
  while ((set = [indices nextSetBitWithInt:srcIndex]) != -1) {
    count = set - srcIndex;
    if (count > 0) {
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, srcIndex, result, destIndex, count);
      destIndex += count;
    }
    srcIndex = [indices nextClearBitWithInt:set];
  }
  count = srcLength - srcIndex;
  if (count > 0) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, srcIndex, result, destIndex, count);
  }
  return result;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithJavaLangComparableArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  return OrgApacheCommonsLang3ArrayUtils_isSortedWithNSObjectArray_withJavaUtilComparator_(array, create_OrgApacheCommonsLang3ArrayUtils_1_init());
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithNSObjectArray_withJavaUtilComparator_(IOSObjectArray *array, id<JavaUtilComparator> comparator) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (comparator == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Comparator should not be null.");
  }
  if (array == nil || array->size_ < 2) {
    return true;
  }
  id previous = IOSObjectArray_Get(array, 0);
  jint n = array->size_;
  for (jint i = 1; i < n; i++) {
    id current = IOSObjectArray_Get(array, i);
    if ([comparator compareWithId:previous withId:current] > 0) {
      return false;
    }
    previous = current;
  }
  return true;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithIntArray_(IOSIntArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ < 2) {
    return true;
  }
  jint previous = IOSIntArray_Get(array, 0);
  jint n = array->size_;
  for (jint i = 1; i < n; i++) {
    jint current = IOSIntArray_Get(array, i);
    if (OrgApacheCommonsLang3MathNumberUtils_compareWithInt_withInt_(previous, current) > 0) {
      return false;
    }
    previous = current;
  }
  return true;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithLongArray_(IOSLongArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ < 2) {
    return true;
  }
  jlong previous = IOSLongArray_Get(array, 0);
  jint n = array->size_;
  for (jint i = 1; i < n; i++) {
    jlong current = IOSLongArray_Get(array, i);
    if (OrgApacheCommonsLang3MathNumberUtils_compareWithLong_withLong_(previous, current) > 0) {
      return false;
    }
    previous = current;
  }
  return true;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithShortArray_(IOSShortArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ < 2) {
    return true;
  }
  jshort previous = IOSShortArray_Get(array, 0);
  jint n = array->size_;
  for (jint i = 1; i < n; i++) {
    jshort current = IOSShortArray_Get(array, i);
    if (OrgApacheCommonsLang3MathNumberUtils_compareWithShort_withShort_(previous, current) > 0) {
      return false;
    }
    previous = current;
  }
  return true;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithDoubleArray_(IOSDoubleArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ < 2) {
    return true;
  }
  jdouble previous = IOSDoubleArray_Get(array, 0);
  jint n = array->size_;
  for (jint i = 1; i < n; i++) {
    jdouble current = IOSDoubleArray_Get(array, i);
    if (JavaLangDouble_compareWithDouble_withDouble_(previous, current) > 0) {
      return false;
    }
    previous = current;
  }
  return true;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithFloatArray_(IOSFloatArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ < 2) {
    return true;
  }
  jfloat previous = IOSFloatArray_Get(array, 0);
  jint n = array->size_;
  for (jint i = 1; i < n; i++) {
    jfloat current = IOSFloatArray_Get(array, i);
    if (JavaLangFloat_compareWithFloat_withFloat_(previous, current) > 0) {
      return false;
    }
    previous = current;
  }
  return true;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithByteArray_(IOSByteArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ < 2) {
    return true;
  }
  jbyte previous = IOSByteArray_Get(array, 0);
  jint n = array->size_;
  for (jint i = 1; i < n; i++) {
    jbyte current = IOSByteArray_Get(array, i);
    if (OrgApacheCommonsLang3MathNumberUtils_compareWithByte_withByte_(previous, current) > 0) {
      return false;
    }
    previous = current;
  }
  return true;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithCharArray_(IOSCharArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ < 2) {
    return true;
  }
  jchar previous = IOSCharArray_Get(array, 0);
  jint n = array->size_;
  for (jint i = 1; i < n; i++) {
    jchar current = IOSCharArray_Get(array, i);
    if (OrgApacheCommonsLang3CharUtils_compareWithChar_withChar_(previous, current) > 0) {
      return false;
    }
    previous = current;
  }
  return true;
}

jboolean OrgApacheCommonsLang3ArrayUtils_isSortedWithBooleanArray_(IOSBooleanArray *array) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  if (array == nil || array->size_ < 2) {
    return true;
  }
  jboolean previous = IOSBooleanArray_Get(array, 0);
  jint n = array->size_;
  for (jint i = 1; i < n; i++) {
    jboolean current = IOSBooleanArray_Get(array, i);
    if (OrgApacheCommonsLang3BooleanUtils_compareWithBoolean_withBoolean_(previous, current) > 0) {
      return false;
    }
    previous = current;
  }
  return true;
}

IOSBooleanArray *OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithBooleanArray_withBoolean_(IOSBooleanArray *array, jboolean element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithBooleanArray_withBoolean_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithBooleanArray_(array);
  }
  IOSIntArray *indices = [IOSIntArray arrayWithLength:((IOSBooleanArray *) nil_chk(array))->size_ - index];
  *IOSIntArray_GetRef(indices, 0) = index;
  jint count = 1;
  while ((index = OrgApacheCommonsLang3ArrayUtils_indexOfWithBooleanArray_withBoolean_withInt_(array, element, IOSIntArray_Get(indices, count - 1) + 1)) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    *IOSIntArray_GetRef(indices, count++) = index;
  }
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithBooleanArray_withIntArray_(array, JavaUtilArrays_copyOfWithIntArray_withInt_(indices, count));
}

IOSCharArray *OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithCharArray_withChar_(IOSCharArray *array, jchar element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithCharArray_withChar_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithCharArray_(array);
  }
  IOSIntArray *indices = [IOSIntArray arrayWithLength:((IOSCharArray *) nil_chk(array))->size_ - index];
  *IOSIntArray_GetRef(indices, 0) = index;
  jint count = 1;
  while ((index = OrgApacheCommonsLang3ArrayUtils_indexOfWithCharArray_withChar_withInt_(array, element, IOSIntArray_Get(indices, count - 1) + 1)) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    *IOSIntArray_GetRef(indices, count++) = index;
  }
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithCharArray_withIntArray_(array, JavaUtilArrays_copyOfWithIntArray_withInt_(indices, count));
}

IOSByteArray *OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithByteArray_withByte_(IOSByteArray *array, jbyte element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithByteArray_withByte_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithByteArray_(array);
  }
  IOSIntArray *indices = [IOSIntArray arrayWithLength:((IOSByteArray *) nil_chk(array))->size_ - index];
  *IOSIntArray_GetRef(indices, 0) = index;
  jint count = 1;
  while ((index = OrgApacheCommonsLang3ArrayUtils_indexOfWithByteArray_withByte_withInt_(array, element, IOSIntArray_Get(indices, count - 1) + 1)) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    *IOSIntArray_GetRef(indices, count++) = index;
  }
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithByteArray_withIntArray_(array, JavaUtilArrays_copyOfWithIntArray_withInt_(indices, count));
}

IOSShortArray *OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithShortArray_withShort_(IOSShortArray *array, jshort element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithShortArray_withShort_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithShortArray_(array);
  }
  IOSIntArray *indices = [IOSIntArray arrayWithLength:((IOSShortArray *) nil_chk(array))->size_ - index];
  *IOSIntArray_GetRef(indices, 0) = index;
  jint count = 1;
  while ((index = OrgApacheCommonsLang3ArrayUtils_indexOfWithShortArray_withShort_withInt_(array, element, IOSIntArray_Get(indices, count - 1) + 1)) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    *IOSIntArray_GetRef(indices, count++) = index;
  }
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithShortArray_withIntArray_(array, JavaUtilArrays_copyOfWithIntArray_withInt_(indices, count));
}

IOSIntArray *OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithIntArray_withInt_(IOSIntArray *array, jint element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithIntArray_withInt_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithIntArray_(array);
  }
  IOSIntArray *indices = [IOSIntArray arrayWithLength:((IOSIntArray *) nil_chk(array))->size_ - index];
  *IOSIntArray_GetRef(indices, 0) = index;
  jint count = 1;
  while ((index = OrgApacheCommonsLang3ArrayUtils_indexOfWithIntArray_withInt_withInt_(array, element, IOSIntArray_Get(indices, count - 1) + 1)) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    *IOSIntArray_GetRef(indices, count++) = index;
  }
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithIntArray_withIntArray_(array, JavaUtilArrays_copyOfWithIntArray_withInt_(indices, count));
}

IOSLongArray *OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithLongArray_withLong_(IOSLongArray *array, jlong element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithLongArray_withLong_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithLongArray_(array);
  }
  IOSIntArray *indices = [IOSIntArray arrayWithLength:((IOSLongArray *) nil_chk(array))->size_ - index];
  *IOSIntArray_GetRef(indices, 0) = index;
  jint count = 1;
  while ((index = OrgApacheCommonsLang3ArrayUtils_indexOfWithLongArray_withLong_withInt_(array, element, IOSIntArray_Get(indices, count - 1) + 1)) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    *IOSIntArray_GetRef(indices, count++) = index;
  }
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithLongArray_withIntArray_(array, JavaUtilArrays_copyOfWithIntArray_withInt_(indices, count));
}

IOSFloatArray *OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithFloatArray_withFloat_(IOSFloatArray *array, jfloat element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithFloatArray_withFloat_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithFloatArray_(array);
  }
  IOSIntArray *indices = [IOSIntArray arrayWithLength:((IOSFloatArray *) nil_chk(array))->size_ - index];
  *IOSIntArray_GetRef(indices, 0) = index;
  jint count = 1;
  while ((index = OrgApacheCommonsLang3ArrayUtils_indexOfWithFloatArray_withFloat_withInt_(array, element, IOSIntArray_Get(indices, count - 1) + 1)) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    *IOSIntArray_GetRef(indices, count++) = index;
  }
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithFloatArray_withIntArray_(array, JavaUtilArrays_copyOfWithIntArray_withInt_(indices, count));
}

IOSDoubleArray *OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithDoubleArray_(array);
  }
  IOSIntArray *indices = [IOSIntArray arrayWithLength:((IOSDoubleArray *) nil_chk(array))->size_ - index];
  *IOSIntArray_GetRef(indices, 0) = index;
  jint count = 1;
  while ((index = OrgApacheCommonsLang3ArrayUtils_indexOfWithDoubleArray_withDouble_withInt_(array, element, IOSIntArray_Get(indices, count - 1) + 1)) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    *IOSIntArray_GetRef(indices, count++) = index;
  }
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithDoubleArray_withIntArray_(array, JavaUtilArrays_copyOfWithIntArray_withInt_(indices, count));
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils_removeAllOccurencesWithNSObjectArray_withId_(IOSObjectArray *array, id element) {
  OrgApacheCommonsLang3ArrayUtils_initialize();
  jint index = OrgApacheCommonsLang3ArrayUtils_indexOfWithNSObjectArray_withId_(array, element);
  if (index == OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    return OrgApacheCommonsLang3ArrayUtils_cloneWithNSObjectArray_(array);
  }
  IOSIntArray *indices = [IOSIntArray arrayWithLength:((IOSObjectArray *) nil_chk(array))->size_ - index];
  *IOSIntArray_GetRef(indices, 0) = index;
  jint count = 1;
  while ((index = OrgApacheCommonsLang3ArrayUtils_indexOfWithNSObjectArray_withId_withInt_(array, element, IOSIntArray_Get(indices, count - 1) + 1)) != OrgApacheCommonsLang3ArrayUtils_INDEX_NOT_FOUND) {
    *IOSIntArray_GetRef(indices, count++) = index;
  }
  return OrgApacheCommonsLang3ArrayUtils_removeAllWithNSObjectArray_withIntArray_(array, JavaUtilArrays_copyOfWithIntArray_withInt_(indices, count));
}

IOSObjectArray *OrgApacheCommonsLang3ArrayUtils__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3ArrayUtils)

@implementation OrgApacheCommonsLang3ArrayUtils_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3ArrayUtils_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(id<JavaLangComparable>)o1
               withId:(id<JavaLangComparable>)o2 {
  return [((id<JavaLangComparable>) nil_chk(o1)) compareToWithId:o2];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LJavaLangComparable;LJavaLangComparable;", "(TT;TT;)I", "LOrgApacheCommonsLang3ArrayUtils;", "isSortedWithJavaLangComparableArray:", "Ljava/lang/Object;Ljava/util/Comparator<TT;>;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3ArrayUtils_1 = { "", "org.apache.commons.lang3", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, 5, -1 };
  return &_OrgApacheCommonsLang3ArrayUtils_1;
}

@end

void OrgApacheCommonsLang3ArrayUtils_1_init(OrgApacheCommonsLang3ArrayUtils_1 *self) {
  NSObject_init(self);
}

OrgApacheCommonsLang3ArrayUtils_1 *new_OrgApacheCommonsLang3ArrayUtils_1_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3ArrayUtils_1, init)
}

OrgApacheCommonsLang3ArrayUtils_1 *create_OrgApacheCommonsLang3ArrayUtils_1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3ArrayUtils_1, init)
}
