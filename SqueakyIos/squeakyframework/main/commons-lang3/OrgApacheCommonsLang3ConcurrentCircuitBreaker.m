//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/commons-lang/src/main/java/org/apache/commons/lang3/concurrent/CircuitBreaker.java
//

#include "J2ObjC_source.h"
#include "OrgApacheCommonsLang3ConcurrentCircuitBreaker.h"

@interface OrgApacheCommonsLang3ConcurrentCircuitBreaker : NSObject

@end

@implementation OrgApacheCommonsLang3ConcurrentCircuitBreaker

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isOpen);
  methods[1].selector = @selector(isClosed);
  methods[2].selector = @selector(checkState);
  methods[3].selector = @selector(close);
  methods[4].selector = @selector(open);
  methods[5].selector = @selector(incrementAndCheckStateWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "incrementAndCheckState", "LNSObject;", "(TT;)Z", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3ConcurrentCircuitBreaker = { "CircuitBreaker", "org.apache.commons.lang3.concurrent", ptrTable, methods, NULL, 7, 0x609, 6, 0, -1, -1, -1, 3, -1 };
  return &_OrgApacheCommonsLang3ConcurrentCircuitBreaker;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3ConcurrentCircuitBreaker)
