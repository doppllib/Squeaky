//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/commons-lang/src/main/java/org/apache/commons/lang3/RandomStringUtils.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "OrgApacheCommonsLang3RandomStringUtils.h"
#include "OrgApacheCommonsLang3RandomUtils.h"
#include "OrgApacheCommonsLang3StringUtils.h"
#include "java/lang/Character.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/util/Random.h"

inline JavaUtilRandom *OrgApacheCommonsLang3RandomStringUtils_get_RANDOM();
static JavaUtilRandom *OrgApacheCommonsLang3RandomStringUtils_RANDOM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3RandomStringUtils, RANDOM, JavaUtilRandom *)

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsLang3RandomStringUtils)

@implementation OrgApacheCommonsLang3RandomStringUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3RandomStringUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)randomWithInt:(jint)count {
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_(count);
}

+ (NSString *)randomAsciiWithInt:(jint)count {
  return OrgApacheCommonsLang3RandomStringUtils_randomAsciiWithInt_(count);
}

+ (NSString *)randomAsciiWithInt:(jint)minLengthInclusive
                         withInt:(jint)maxLengthExclusive {
  return OrgApacheCommonsLang3RandomStringUtils_randomAsciiWithInt_withInt_(minLengthInclusive, maxLengthExclusive);
}

+ (NSString *)randomAlphabeticWithInt:(jint)count {
  return OrgApacheCommonsLang3RandomStringUtils_randomAlphabeticWithInt_(count);
}

+ (NSString *)randomAlphabeticWithInt:(jint)minLengthInclusive
                              withInt:(jint)maxLengthExclusive {
  return OrgApacheCommonsLang3RandomStringUtils_randomAlphabeticWithInt_withInt_(minLengthInclusive, maxLengthExclusive);
}

+ (NSString *)randomAlphanumericWithInt:(jint)count {
  return OrgApacheCommonsLang3RandomStringUtils_randomAlphanumericWithInt_(count);
}

+ (NSString *)randomAlphanumericWithInt:(jint)minLengthInclusive
                                withInt:(jint)maxLengthExclusive {
  return OrgApacheCommonsLang3RandomStringUtils_randomAlphanumericWithInt_withInt_(minLengthInclusive, maxLengthExclusive);
}

+ (NSString *)randomGraphWithInt:(jint)count {
  return OrgApacheCommonsLang3RandomStringUtils_randomGraphWithInt_(count);
}

+ (NSString *)randomGraphWithInt:(jint)minLengthInclusive
                         withInt:(jint)maxLengthExclusive {
  return OrgApacheCommonsLang3RandomStringUtils_randomGraphWithInt_withInt_(minLengthInclusive, maxLengthExclusive);
}

+ (NSString *)randomNumericWithInt:(jint)count {
  return OrgApacheCommonsLang3RandomStringUtils_randomNumericWithInt_(count);
}

+ (NSString *)randomNumericWithInt:(jint)minLengthInclusive
                           withInt:(jint)maxLengthExclusive {
  return OrgApacheCommonsLang3RandomStringUtils_randomNumericWithInt_withInt_(minLengthInclusive, maxLengthExclusive);
}

+ (NSString *)randomPrintWithInt:(jint)count {
  return OrgApacheCommonsLang3RandomStringUtils_randomPrintWithInt_(count);
}

+ (NSString *)randomPrintWithInt:(jint)minLengthInclusive
                         withInt:(jint)maxLengthExclusive {
  return OrgApacheCommonsLang3RandomStringUtils_randomPrintWithInt_withInt_(minLengthInclusive, maxLengthExclusive);
}

+ (NSString *)randomWithInt:(jint)count
                withBoolean:(jboolean)letters
                withBoolean:(jboolean)numbers {
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withBoolean_withBoolean_(count, letters, numbers);
}

+ (NSString *)randomWithInt:(jint)count
                    withInt:(jint)start
                    withInt:(jint)end
                withBoolean:(jboolean)letters
                withBoolean:(jboolean)numbers {
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withInt_withInt_withBoolean_withBoolean_(count, start, end, letters, numbers);
}

+ (NSString *)randomWithInt:(jint)count
                    withInt:(jint)start
                    withInt:(jint)end
                withBoolean:(jboolean)letters
                withBoolean:(jboolean)numbers
              withCharArray:(IOSCharArray *)chars {
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withInt_withInt_withBoolean_withBoolean_withCharArray_(count, start, end, letters, numbers, chars);
}

+ (NSString *)randomWithInt:(jint)count
                    withInt:(jint)start
                    withInt:(jint)end
                withBoolean:(jboolean)letters
                withBoolean:(jboolean)numbers
              withCharArray:(IOSCharArray *)chars
         withJavaUtilRandom:(JavaUtilRandom *)random {
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withInt_withInt_withBoolean_withBoolean_withCharArray_withJavaUtilRandom_(count, start, end, letters, numbers, chars, random);
}

+ (NSString *)randomWithInt:(jint)count
               withNSString:(NSString *)chars {
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withNSString_(count, chars);
}

+ (NSString *)randomWithInt:(jint)count
              withCharArray:(IOSCharArray *)chars {
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withCharArray_(count, chars);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 4, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 4, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 5, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 5, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 6, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 6, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 7, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 7, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 8, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 8, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 9, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x89, 0, 11, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 12, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 13, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x89, 0, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(randomWithInt:);
  methods[2].selector = @selector(randomAsciiWithInt:);
  methods[3].selector = @selector(randomAsciiWithInt:withInt:);
  methods[4].selector = @selector(randomAlphabeticWithInt:);
  methods[5].selector = @selector(randomAlphabeticWithInt:withInt:);
  methods[6].selector = @selector(randomAlphanumericWithInt:);
  methods[7].selector = @selector(randomAlphanumericWithInt:withInt:);
  methods[8].selector = @selector(randomGraphWithInt:);
  methods[9].selector = @selector(randomGraphWithInt:withInt:);
  methods[10].selector = @selector(randomNumericWithInt:);
  methods[11].selector = @selector(randomNumericWithInt:withInt:);
  methods[12].selector = @selector(randomPrintWithInt:);
  methods[13].selector = @selector(randomPrintWithInt:withInt:);
  methods[14].selector = @selector(randomWithInt:withBoolean:withBoolean:);
  methods[15].selector = @selector(randomWithInt:withInt:withInt:withBoolean:withBoolean:);
  methods[16].selector = @selector(randomWithInt:withInt:withInt:withBoolean:withBoolean:withCharArray:);
  methods[17].selector = @selector(randomWithInt:withInt:withInt:withBoolean:withBoolean:withCharArray:withJavaUtilRandom:);
  methods[18].selector = @selector(randomWithInt:withNSString:);
  methods[19].selector = @selector(randomWithInt:withCharArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "RANDOM", "LJavaUtilRandom;", .constantValue.asLong = 0, 0x1a, -1, 15, -1, -1 },
  };
  static const void *ptrTable[] = { "random", "I", "randomAscii", "II", "randomAlphabetic", "randomAlphanumeric", "randomGraph", "randomNumeric", "randomPrint", "IZZ", "IIIZZ", "IIIZZ[C", "IIIZZ[CLJavaUtilRandom;", "ILNSString;", "I[C", &OrgApacheCommonsLang3RandomStringUtils_RANDOM };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3RandomStringUtils = { "RandomStringUtils", "org.apache.commons.lang3", ptrTable, methods, fields, 7, 0x1, 20, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3RandomStringUtils;
}

+ (void)initialize {
  if (self == [OrgApacheCommonsLang3RandomStringUtils class]) {
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3RandomStringUtils_RANDOM, new_JavaUtilRandom_init());
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsLang3RandomStringUtils)
  }
}

@end

void OrgApacheCommonsLang3RandomStringUtils_init(OrgApacheCommonsLang3RandomStringUtils *self) {
  NSObject_init(self);
}

OrgApacheCommonsLang3RandomStringUtils *new_OrgApacheCommonsLang3RandomStringUtils_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3RandomStringUtils, init)
}

OrgApacheCommonsLang3RandomStringUtils *create_OrgApacheCommonsLang3RandomStringUtils_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3RandomStringUtils, init)
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomWithInt_(jint count) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withBoolean_withBoolean_(count, false, false);
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomAsciiWithInt_(jint count) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withInt_withInt_withBoolean_withBoolean_(count, 32, 127, false, false);
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomAsciiWithInt_withInt_(jint minLengthInclusive, jint maxLengthExclusive) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  return OrgApacheCommonsLang3RandomStringUtils_randomAsciiWithInt_(OrgApacheCommonsLang3RandomUtils_nextIntWithInt_withInt_(minLengthInclusive, maxLengthExclusive));
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomAlphabeticWithInt_(jint count) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withBoolean_withBoolean_(count, true, false);
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomAlphabeticWithInt_withInt_(jint minLengthInclusive, jint maxLengthExclusive) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  return OrgApacheCommonsLang3RandomStringUtils_randomAlphabeticWithInt_(OrgApacheCommonsLang3RandomUtils_nextIntWithInt_withInt_(minLengthInclusive, maxLengthExclusive));
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomAlphanumericWithInt_(jint count) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withBoolean_withBoolean_(count, true, true);
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomAlphanumericWithInt_withInt_(jint minLengthInclusive, jint maxLengthExclusive) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  return OrgApacheCommonsLang3RandomStringUtils_randomAlphanumericWithInt_(OrgApacheCommonsLang3RandomUtils_nextIntWithInt_withInt_(minLengthInclusive, maxLengthExclusive));
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomGraphWithInt_(jint count) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withInt_withInt_withBoolean_withBoolean_(count, 33, 126, false, false);
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomGraphWithInt_withInt_(jint minLengthInclusive, jint maxLengthExclusive) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  return OrgApacheCommonsLang3RandomStringUtils_randomGraphWithInt_(OrgApacheCommonsLang3RandomUtils_nextIntWithInt_withInt_(minLengthInclusive, maxLengthExclusive));
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomNumericWithInt_(jint count) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withBoolean_withBoolean_(count, false, true);
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomNumericWithInt_withInt_(jint minLengthInclusive, jint maxLengthExclusive) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  return OrgApacheCommonsLang3RandomStringUtils_randomNumericWithInt_(OrgApacheCommonsLang3RandomUtils_nextIntWithInt_withInt_(minLengthInclusive, maxLengthExclusive));
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomPrintWithInt_(jint count) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withInt_withInt_withBoolean_withBoolean_(count, 32, 126, false, false);
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomPrintWithInt_withInt_(jint minLengthInclusive, jint maxLengthExclusive) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  return OrgApacheCommonsLang3RandomStringUtils_randomPrintWithInt_(OrgApacheCommonsLang3RandomUtils_nextIntWithInt_withInt_(minLengthInclusive, maxLengthExclusive));
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withBoolean_withBoolean_(jint count, jboolean letters, jboolean numbers) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withInt_withInt_withBoolean_withBoolean_(count, 0, 0, letters, numbers);
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withInt_withInt_withBoolean_withBoolean_(jint count, jint start, jint end, jboolean letters, jboolean numbers) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withInt_withInt_withBoolean_withBoolean_withCharArray_withJavaUtilRandom_(count, start, end, letters, numbers, nil, OrgApacheCommonsLang3RandomStringUtils_RANDOM);
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withInt_withInt_withBoolean_withBoolean_withCharArray_(jint count, jint start, jint end, jboolean letters, jboolean numbers, IOSCharArray *chars) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withInt_withInt_withBoolean_withBoolean_withCharArray_withJavaUtilRandom_(count, start, end, letters, numbers, chars, OrgApacheCommonsLang3RandomStringUtils_RANDOM);
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withInt_withInt_withBoolean_withBoolean_withCharArray_withJavaUtilRandom_(jint count, jint start, jint end, jboolean letters, jboolean numbers, IOSCharArray *chars, JavaUtilRandom *random) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  if (count == 0) {
    return OrgApacheCommonsLang3StringUtils_EMPTY;
  }
  else if (count < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$", @"Requested random string length ", count, @" is less than 0."));
  }
  if (chars != nil && chars->size_ == 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The chars array must not be empty");
  }
  if (start == 0 && end == 0) {
    if (chars != nil) {
      end = chars->size_;
    }
    else {
      if (!letters && !numbers) {
        end = JavaLangInteger_MAX_VALUE;
      }
      else {
        end = 'z' + 1;
        start = ' ';
      }
    }
  }
  else {
    if (end <= start) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$IC", @"Parameter end (", end, @") must be greater than start (", start, ')'));
    }
  }
  IOSCharArray *buffer = [IOSCharArray arrayWithLength:count];
  jint gap = end - start;
  while (count-- != 0) {
    jchar ch;
    if (chars == nil) {
      ch = (jchar) ([((JavaUtilRandom *) nil_chk(random)) nextIntWithInt:gap] + start);
    }
    else {
      ch = IOSCharArray_Get(chars, [((JavaUtilRandom *) nil_chk(random)) nextIntWithInt:gap] + start);
    }
    if ((letters && JavaLangCharacter_isLetterWithChar_(ch)) || (numbers && JavaLangCharacter_isDigitWithChar_(ch)) || (!letters && !numbers)) {
      if (ch >= 56320 && ch <= 57343) {
        if (count == 0) {
          count++;
        }
        else {
          *IOSCharArray_GetRef(buffer, count) = ch;
          count--;
          *IOSCharArray_GetRef(buffer, count) = (jchar) (55296 + [random nextIntWithInt:128]);
        }
      }
      else if (ch >= 55296 && ch <= 56191) {
        if (count == 0) {
          count++;
        }
        else {
          *IOSCharArray_GetRef(buffer, count) = (jchar) (56320 + [random nextIntWithInt:128]);
          count--;
          *IOSCharArray_GetRef(buffer, count) = ch;
        }
      }
      else if (ch >= 56192 && ch <= 56319) {
        count++;
      }
      else {
        *IOSCharArray_GetRef(buffer, count) = ch;
      }
    }
    else {
      count++;
    }
  }
  return [NSString java_stringWithCharacters:buffer];
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withNSString_(jint count, NSString *chars) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  if (chars == nil) {
    return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withInt_withInt_withBoolean_withBoolean_withCharArray_withJavaUtilRandom_(count, 0, 0, false, false, nil, OrgApacheCommonsLang3RandomStringUtils_RANDOM);
  }
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withCharArray_(count, [chars java_toCharArray]);
}

NSString *OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withCharArray_(jint count, IOSCharArray *chars) {
  OrgApacheCommonsLang3RandomStringUtils_initialize();
  if (chars == nil) {
    return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withInt_withInt_withBoolean_withBoolean_withCharArray_withJavaUtilRandom_(count, 0, 0, false, false, nil, OrgApacheCommonsLang3RandomStringUtils_RANDOM);
  }
  return OrgApacheCommonsLang3RandomStringUtils_randomWithInt_withInt_withInt_withBoolean_withBoolean_withCharArray_withJavaUtilRandom_(count, 0, chars->size_, false, false, chars, OrgApacheCommonsLang3RandomStringUtils_RANDOM);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3RandomStringUtils)
