//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/commons-lang/src/main/java/org/apache/commons/lang3/concurrent/CircuitBreakingException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheCommonsLang3ConcurrentCircuitBreakingException")
#ifdef RESTRICT_OrgApacheCommonsLang3ConcurrentCircuitBreakingException
#define INCLUDE_ALL_OrgApacheCommonsLang3ConcurrentCircuitBreakingException 0
#else
#define INCLUDE_ALL_OrgApacheCommonsLang3ConcurrentCircuitBreakingException 1
#endif
#undef RESTRICT_OrgApacheCommonsLang3ConcurrentCircuitBreakingException

#if !defined (OrgApacheCommonsLang3ConcurrentCircuitBreakingException_) && (INCLUDE_ALL_OrgApacheCommonsLang3ConcurrentCircuitBreakingException || defined(INCLUDE_OrgApacheCommonsLang3ConcurrentCircuitBreakingException))
#define OrgApacheCommonsLang3ConcurrentCircuitBreakingException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@interface OrgApacheCommonsLang3ConcurrentCircuitBreakingException : JavaLangRuntimeException

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)message;

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause;

- (instancetype)initWithNSException:(NSException *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3ConcurrentCircuitBreakingException)

FOUNDATION_EXPORT void OrgApacheCommonsLang3ConcurrentCircuitBreakingException_init(OrgApacheCommonsLang3ConcurrentCircuitBreakingException *self);

FOUNDATION_EXPORT OrgApacheCommonsLang3ConcurrentCircuitBreakingException *new_OrgApacheCommonsLang3ConcurrentCircuitBreakingException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsLang3ConcurrentCircuitBreakingException *create_OrgApacheCommonsLang3ConcurrentCircuitBreakingException_init();

FOUNDATION_EXPORT void OrgApacheCommonsLang3ConcurrentCircuitBreakingException_initWithNSString_withNSException_(OrgApacheCommonsLang3ConcurrentCircuitBreakingException *self, NSString *message, NSException *cause);

FOUNDATION_EXPORT OrgApacheCommonsLang3ConcurrentCircuitBreakingException *new_OrgApacheCommonsLang3ConcurrentCircuitBreakingException_initWithNSString_withNSException_(NSString *message, NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsLang3ConcurrentCircuitBreakingException *create_OrgApacheCommonsLang3ConcurrentCircuitBreakingException_initWithNSString_withNSException_(NSString *message, NSException *cause);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ConcurrentCircuitBreakingException_initWithNSString_(OrgApacheCommonsLang3ConcurrentCircuitBreakingException *self, NSString *message);

FOUNDATION_EXPORT OrgApacheCommonsLang3ConcurrentCircuitBreakingException *new_OrgApacheCommonsLang3ConcurrentCircuitBreakingException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsLang3ConcurrentCircuitBreakingException *create_OrgApacheCommonsLang3ConcurrentCircuitBreakingException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void OrgApacheCommonsLang3ConcurrentCircuitBreakingException_initWithNSException_(OrgApacheCommonsLang3ConcurrentCircuitBreakingException *self, NSException *cause);

FOUNDATION_EXPORT OrgApacheCommonsLang3ConcurrentCircuitBreakingException *new_OrgApacheCommonsLang3ConcurrentCircuitBreakingException_initWithNSException_(NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheCommonsLang3ConcurrentCircuitBreakingException *create_OrgApacheCommonsLang3ConcurrentCircuitBreakingException_initWithNSException_(NSException *cause);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3ConcurrentCircuitBreakingException)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheCommonsLang3ConcurrentCircuitBreakingException")
