//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/field/ForeignCollectionTest.java
//

#include "CoTouchlabDopplTestingDopplContextDelegateTestRunner.h"
#include "CoTouchlabSqueakyDaoDao.h"
#include "CoTouchlabSqueakyFieldDataType.h"
#include "CoTouchlabSqueakyFieldDatabaseField.h"
#include "CoTouchlabSqueakyFieldForeignCollectionTest.h"
#include "CoTouchlabSqueakyFieldTypesBaseTypeTestHide.h"
#include "CoTouchlabSqueakyFieldTypesVoidType.h"
#include "CoTouchlabSqueakyTableDatabaseTable.h"
#include "CoTouchlabSqueakyUtilsAssertHelper.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "java/util/Random.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "org/junit/After.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/junit/runner/RunWith.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface CoTouchlabSqueakyFieldForeignCollectionTest () {
 @public
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *helper_;
}

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)getHelper;

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldForeignCollectionTest, helper_, CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *CoTouchlabSqueakyFieldForeignCollectionTest_getHelper(CoTouchlabSqueakyFieldForeignCollectionTest *self);

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$6();

@interface CoTouchlabSqueakyFieldForeignCollectionTest_1 : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder *)o1
               withId:(CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder *)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyFieldForeignCollectionTest_1)

__attribute__((unused)) static void CoTouchlabSqueakyFieldForeignCollectionTest_1_init(CoTouchlabSqueakyFieldForeignCollectionTest_1 *self);

__attribute__((unused)) static CoTouchlabSqueakyFieldForeignCollectionTest_1 *new_CoTouchlabSqueakyFieldForeignCollectionTest_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyFieldForeignCollectionTest_1 *create_CoTouchlabSqueakyFieldForeignCollectionTest_1_init();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentString__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentString__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentString__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildString__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildString__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildString__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildString__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder__Annotations$3();

@implementation CoTouchlabSqueakyFieldForeignCollectionTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldForeignCollectionTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)before {
  JreStrongAssign(&helper_, CoTouchlabSqueakyFieldForeignCollectionTest_getHelper(self));
}

- (void)after {
  [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) close];
}

- (void)testForeignCollectionEager {
  id<CoTouchlabSqueakyDaoDao> parentDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager_class_()];
  CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager *parent = create_CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager_init();
  JreStrongAssign(&parent->name_, @"test");
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(parentDao)) createWithId:parent];
  id<CoTouchlabSqueakyDaoDao> childDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager_class_()];
  JavaUtilRandom *random = create_JavaUtilRandom_init();
  id<JavaUtilList> children = create_JavaUtilArrayList_init();
  for (jint i = 0; i < 20; i++) {
    CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager *child = create_CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager_init();
    JreStrongAssign(&child->asdf_, JreStrcat("$I", @"Hello ", [random nextIntWithInt:10000]));
    JreStrongAssign(&child->parent_, parent);
    [((id<CoTouchlabSqueakyDaoDao>) nil_chk(childDao)) createWithId:child];
    [children addWithId:child];
  }
  CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager *parentDb = [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([parentDao queryForAll])) list])) getWithInt:0];
  OrgJunitAssert_assertTrueWithBoolean_([((id<JavaUtilList>) nil_chk(((CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager *) nil_chk(parentDb))->children_)) isEqual:children]);
}

- (void)testForeignCollectionLazy {
  id<CoTouchlabSqueakyDaoDao> parentDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy_class_()];
  CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy *parent = create_CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy_init();
  JreStrongAssign(&parent->name_, @"test");
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(parentDao)) createWithId:parent];
  id<CoTouchlabSqueakyDaoDao> childDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy_class_()];
  JavaUtilRandom *random = create_JavaUtilRandom_init();
  id<JavaUtilList> children = create_JavaUtilArrayList_init();
  for (jint i = 0; i < 20; i++) {
    CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy *child = create_CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy_init();
    JreStrongAssign(&child->asdf_, JreStrcat("$I", @"Hello ", [random nextIntWithInt:10000]));
    JreStrongAssign(&child->parent_, parent);
    [((id<CoTouchlabSqueakyDaoDao>) nil_chk(childDao)) createWithId:child];
    [children addWithId:child];
  }
  CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy *parentDb = [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([parentDao queryForAll])) list])) getWithInt:0];
  [parentDao fillForeignCollectionWithId:parentDb withNSString:@"children"];
  OrgJunitAssert_assertTrueWithBoolean_([((id<JavaUtilList>) nil_chk(((CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy *) nil_chk(parentDb))->children_)) isEqual:children]);
}

- (void)testForeignCollectionString {
  id<CoTouchlabSqueakyDaoDao> parentDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldForeignCollectionTest_ParentString_class_()];
  CoTouchlabSqueakyFieldForeignCollectionTest_ParentString *parent = create_CoTouchlabSqueakyFieldForeignCollectionTest_ParentString_init();
  JreStrongAssign(&parent->id__, @"parentid");
  JreStrongAssign(&parent->name_, @"test");
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(parentDao)) createWithId:parent];
  id<CoTouchlabSqueakyDaoDao> childDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldForeignCollectionTest_ChildString_class_()];
  JavaUtilRandom *random = create_JavaUtilRandom_init();
  id<JavaUtilList> children = create_JavaUtilArrayList_init();
  for (jint i = 0; i < 20; i++) {
    CoTouchlabSqueakyFieldForeignCollectionTest_ChildString *child = create_CoTouchlabSqueakyFieldForeignCollectionTest_ChildString_init();
    JreStrongAssign(&child->id__, JreStrcat("$I", @"childid_", i));
    JreStrongAssign(&child->asdf_, JreStrcat("$I", @"Hello ", [random nextIntWithInt:10000]));
    JreStrongAssign(&child->parent_, parent);
    [((id<CoTouchlabSqueakyDaoDao>) nil_chk(childDao)) createWithId:child];
    [children addWithId:child];
  }
  CoTouchlabSqueakyFieldForeignCollectionTest_ParentString *parentDb = [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([parentDao queryForAll])) list])) getWithInt:0];
  OrgJunitAssert_assertTrueWithBoolean_([((id<JavaUtilList>) nil_chk(((CoTouchlabSqueakyFieldForeignCollectionTest_ParentString *) nil_chk(parentDb))->children_)) isEqual:children]);
}

- (void)testForeignCollectionOrder {
  id<CoTouchlabSqueakyDaoDao> parentDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder_class_()];
  CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder *parent = create_CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder_init();
  JreStrongAssign(&parent->name_, @"test");
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(parentDao)) createWithId:parent];
  id<CoTouchlabSqueakyDaoDao> childDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder_class_()];
  JavaUtilRandom *random = create_JavaUtilRandom_init();
  id<JavaUtilList> children = create_JavaUtilArrayList_init();
  for (jint i = 0; i < 20; i++) {
    CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder *child = create_CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder_init();
    JreStrongAssign(&child->asdf_, JreStrcat("$I", @"Hello ", (100 - i)));
    JreStrongAssign(&child->parent_, parent);
    [((id<CoTouchlabSqueakyDaoDao>) nil_chk(childDao)) createWithId:child];
    [children addWithId:child];
  }
  CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder *parentDb = [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([parentDao queryForAll])) list])) getWithInt:0];
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(children, create_CoTouchlabSqueakyFieldForeignCollectionTest_1_init());
  CoTouchlabSqueakyUtilsAssertHelper_assertEqualsWithJavaUtilCollection_withJavaUtilCollection_(((CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder *) nil_chk(parentDb))->children_, children);
}

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)getHelper {
  return CoTouchlabSqueakyFieldForeignCollectionTest_getHelper(self);
}

- (void)dealloc {
  RELEASE_(helper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 6, -1 },
    { NULL, "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(before);
  methods[2].selector = @selector(after);
  methods[3].selector = @selector(testForeignCollectionEager);
  methods[4].selector = @selector(testForeignCollectionLazy);
  methods[5].selector = @selector(testForeignCollectionString);
  methods[6].selector = @selector(testForeignCollectionOrder);
  methods[7].selector = @selector(getHelper);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "helper_", "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$0, (void *)&CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$1, "LJavaLangException;", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$2, (void *)&CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$3, (void *)&CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$4, (void *)&CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$5, "LCoTouchlabSqueakyFieldForeignCollectionTest_ParentEager;LCoTouchlabSqueakyFieldForeignCollectionTest_ChildEager;LCoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy;LCoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy;LCoTouchlabSqueakyFieldForeignCollectionTest_ParentString;LCoTouchlabSqueakyFieldForeignCollectionTest_ChildString;LCoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder;LCoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder;", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$6 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldForeignCollectionTest = { "ForeignCollectionTest", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0x1, 8, 1, -1, 7, -1, -1, 8 };
  return &_CoTouchlabSqueakyFieldForeignCollectionTest;
}

@end

void CoTouchlabSqueakyFieldForeignCollectionTest_init(CoTouchlabSqueakyFieldForeignCollectionTest *self) {
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_init(self);
}

CoTouchlabSqueakyFieldForeignCollectionTest *new_CoTouchlabSqueakyFieldForeignCollectionTest_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest, init)
}

CoTouchlabSqueakyFieldForeignCollectionTest *create_CoTouchlabSqueakyFieldForeignCollectionTest_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest, init)
}

CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *CoTouchlabSqueakyFieldForeignCollectionTest_getHelper(CoTouchlabSqueakyFieldForeignCollectionTest *self) {
  return [self createHelperWithIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager_class_(), CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager_class_(), CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy_class_(), CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy_class_(), CoTouchlabSqueakyFieldForeignCollectionTest_ChildString_class_(), CoTouchlabSqueakyFieldForeignCollectionTest_ParentString_class_(), CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder_class_(), CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder_class_() } count:8 type:IOSClass_class_()]];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitAfter() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(CoTouchlabDopplTestingDopplContextDelegateTestRunner_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldForeignCollectionTest)

@implementation CoTouchlabSqueakyFieldForeignCollectionTest_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldForeignCollectionTest_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder *)o1
               withId:(CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder *)o2 {
  return [((NSString *) nil_chk(((CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder *) nil_chk(o1))->asdf_)) compareToWithId:((CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder *) nil_chk(o2))->asdf_];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LCoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder;LCoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder;", "LCoTouchlabSqueakyFieldForeignCollectionTest;", "testForeignCollectionOrder", "Ljava/lang/Object;Ljava/util/Comparator<Lco/touchlab/squeaky/field/ForeignCollectionTest$ChildOrder;>;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldForeignCollectionTest_1 = { "", "co.touchlab.squeaky.field", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_CoTouchlabSqueakyFieldForeignCollectionTest_1;
}

@end

void CoTouchlabSqueakyFieldForeignCollectionTest_1_init(CoTouchlabSqueakyFieldForeignCollectionTest_1 *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldForeignCollectionTest_1 *new_CoTouchlabSqueakyFieldForeignCollectionTest_1_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_1, init)
}

CoTouchlabSqueakyFieldForeignCollectionTest_1 *create_CoTouchlabSqueakyFieldForeignCollectionTest_1_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_1, init)
}

@implementation CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(children_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "I", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 2 },
    { "children_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "id", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager__Annotations$0, (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager__Annotations$1, "Ljava/util/List<Lco/touchlab/squeaky/field/ForeignCollectionTest$ChildEager;>;", "LCoTouchlabSqueakyFieldForeignCollectionTest;", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager__Annotations$2 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager = { "ParentEager", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0xc, 1, 3, 4, -1, -1, -1, 5 };
  return &_CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager;
}

@end

void CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager_init(CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager *new_CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager, init)
}

CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager *create_CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", true, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldForeignCollectionTest_ParentEager)

@implementation CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isEqual:(id)o {
  if (self == o) return true;
  if (o == nil || [self java_getClass] != [o java_getClass]) return false;
  CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager *child = (CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager *) cast_chk(o, [CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager class]);
  if (id__ != child->id__) return false;
  if (asdf_ != nil ? ![asdf_ isEqual:child->asdf_] : child->asdf_ != nil) return false;
  return !(parent_ != nil ? !(parent_->id__ == child->parent_->id__) : child->parent_ != nil);
}

- (NSUInteger)hash {
  jint result = id__;
  result = 31 * result + (asdf_ != nil ? ((jint) [asdf_ hash]) : 0);
  result = 31 * result + (parent_ != nil ? ((jint) [parent_ hash]) : 0);
  return result;
}

- (void)dealloc {
  RELEASE_(asdf_);
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isEqual:);
  methods[2].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "I", .constantValue.asLong = 0, 0x0, 3, -1, -1, 4 },
    { "asdf_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 5 },
    { "parent_", "LCoTouchlabSqueakyFieldForeignCollectionTest_ParentEager;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 6 },
  };
  static const void *ptrTable[] = { "equals", "LNSObject;", "hashCode", "id", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager__Annotations$0, (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager__Annotations$1, (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager__Annotations$2, "LCoTouchlabSqueakyFieldForeignCollectionTest;", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager__Annotations$3 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager = { "ChildEager", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0xc, 3, 3, 7, -1, -1, -1, 8 };
  return &_CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager;
}

@end

void CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager_init(CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager *new_CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager, init)
}

CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager *create_CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", true, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", true, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldForeignCollectionTest_ChildEager)

@implementation CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(children_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "I", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 2 },
    { "children_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "id", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy__Annotations$0, (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy__Annotations$1, "Ljava/util/List<Lco/touchlab/squeaky/field/ForeignCollectionTest$ChildLazy;>;", "LCoTouchlabSqueakyFieldForeignCollectionTest;", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy__Annotations$2 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy = { "ParentLazy", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0xc, 1, 3, 4, -1, -1, -1, 5 };
  return &_CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy;
}

@end

void CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy_init(CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy *new_CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy, init)
}

CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy *create_CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", true, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy)

@implementation CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isEqual:(id)o {
  if (self == o) return true;
  if (o == nil || [self java_getClass] != [o java_getClass]) return false;
  CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy *child = (CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy *) cast_chk(o, [CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy class]);
  if (id__ != child->id__) return false;
  if (asdf_ != nil ? ![asdf_ isEqual:child->asdf_] : child->asdf_ != nil) return false;
  return !(parent_ != nil ? !(parent_->id__ == child->parent_->id__) : child->parent_ != nil);
}

- (NSUInteger)hash {
  jint result = id__;
  result = 31 * result + (asdf_ != nil ? ((jint) [asdf_ hash]) : 0);
  result = 31 * result + (parent_ != nil ? ((jint) [parent_ hash]) : 0);
  return result;
}

- (void)dealloc {
  RELEASE_(asdf_);
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isEqual:);
  methods[2].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "I", .constantValue.asLong = 0, 0x0, 3, -1, -1, 4 },
    { "asdf_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 5 },
    { "parent_", "LCoTouchlabSqueakyFieldForeignCollectionTest_ParentLazy;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 6 },
  };
  static const void *ptrTable[] = { "equals", "LNSObject;", "hashCode", "id", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy__Annotations$0, (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy__Annotations$1, (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy__Annotations$2, "LCoTouchlabSqueakyFieldForeignCollectionTest;", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy__Annotations$3 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy = { "ChildLazy", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0xc, 3, 3, 7, -1, -1, -1, 8 };
  return &_CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy;
}

@end

void CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy_init(CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy *new_CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy, init)
}

CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy *create_CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", true, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", true, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldForeignCollectionTest_ChildLazy)

@implementation CoTouchlabSqueakyFieldForeignCollectionTest_ParentString

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldForeignCollectionTest_ParentString_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(id__);
  RELEASE_(name_);
  RELEASE_(children_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "LNSString;", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 2 },
    { "children_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "id", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ParentString__Annotations$0, (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ParentString__Annotations$1, "Ljava/util/List<Lco/touchlab/squeaky/field/ForeignCollectionTest$ChildString;>;", "LCoTouchlabSqueakyFieldForeignCollectionTest;", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ParentString__Annotations$2 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldForeignCollectionTest_ParentString = { "ParentString", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0xc, 1, 3, 4, -1, -1, -1, 5 };
  return &_CoTouchlabSqueakyFieldForeignCollectionTest_ParentString;
}

@end

void CoTouchlabSqueakyFieldForeignCollectionTest_ParentString_init(CoTouchlabSqueakyFieldForeignCollectionTest_ParentString *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldForeignCollectionTest_ParentString *new_CoTouchlabSqueakyFieldForeignCollectionTest_ParentString_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_ParentString, init)
}

CoTouchlabSqueakyFieldForeignCollectionTest_ParentString *create_CoTouchlabSqueakyFieldForeignCollectionTest_ParentString_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_ParentString, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentString__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, true, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentString__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentString__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldForeignCollectionTest_ParentString)

@implementation CoTouchlabSqueakyFieldForeignCollectionTest_ChildString

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldForeignCollectionTest_ChildString_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isEqual:(id)o {
  if (self == o) return true;
  if (o == nil || [self java_getClass] != [o java_getClass]) return false;
  CoTouchlabSqueakyFieldForeignCollectionTest_ChildString *that = (CoTouchlabSqueakyFieldForeignCollectionTest_ChildString *) cast_chk(o, [CoTouchlabSqueakyFieldForeignCollectionTest_ChildString class]);
  if (id__ != nil ? ![id__ isEqual:that->id__] : that->id__ != nil) return false;
  if (asdf_ != nil ? ![asdf_ isEqual:that->asdf_] : that->asdf_ != nil) return false;
  return !(parent_ != nil ? !([((NSString *) nil_chk(parent_->id__)) isEqual:that->parent_->id__]) : that->parent_ != nil);
}

- (NSUInteger)hash {
  jint result = id__ != nil ? ((jint) [id__ hash]) : 0;
  result = 31 * result + (asdf_ != nil ? ((jint) [asdf_ hash]) : 0);
  result = 31 * result + (parent_ != nil ? ((jint) [parent_ hash]) : 0);
  return result;
}

- (void)dealloc {
  RELEASE_(id__);
  RELEASE_(asdf_);
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isEqual:);
  methods[2].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "LNSString;", .constantValue.asLong = 0, 0x0, 3, -1, -1, 4 },
    { "asdf_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 5 },
    { "parent_", "LCoTouchlabSqueakyFieldForeignCollectionTest_ParentString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 6 },
  };
  static const void *ptrTable[] = { "equals", "LNSObject;", "hashCode", "id", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ChildString__Annotations$0, (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ChildString__Annotations$1, (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ChildString__Annotations$2, "LCoTouchlabSqueakyFieldForeignCollectionTest;", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ChildString__Annotations$3 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldForeignCollectionTest_ChildString = { "ChildString", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0xc, 3, 3, 7, -1, -1, -1, 8 };
  return &_CoTouchlabSqueakyFieldForeignCollectionTest_ChildString;
}

@end

void CoTouchlabSqueakyFieldForeignCollectionTest_ChildString_init(CoTouchlabSqueakyFieldForeignCollectionTest_ChildString *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldForeignCollectionTest_ChildString *new_CoTouchlabSqueakyFieldForeignCollectionTest_ChildString_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_ChildString, init)
}

CoTouchlabSqueakyFieldForeignCollectionTest_ChildString *create_CoTouchlabSqueakyFieldForeignCollectionTest_ChildString_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_ChildString, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildString__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, true, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildString__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildString__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", true, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildString__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldForeignCollectionTest_ChildString)

@implementation CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(children_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "I", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 2 },
    { "children_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "id", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder__Annotations$0, (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder__Annotations$1, "Ljava/util/List<Lco/touchlab/squeaky/field/ForeignCollectionTest$ChildOrder;>;", "LCoTouchlabSqueakyFieldForeignCollectionTest;", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder__Annotations$2 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder = { "ParentOrder", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0xc, 1, 3, 4, -1, -1, -1, 5 };
  return &_CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder;
}

@end

void CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder_init(CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder *new_CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder, init)
}

CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder *create_CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", true, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder)

@implementation CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isEqual:(id)o {
  if (self == o) return true;
  if (o == nil || [self java_getClass] != [o java_getClass]) return false;
  CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder *child = (CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder *) cast_chk(o, [CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder class]);
  if (id__ != child->id__) return false;
  if (asdf_ != nil ? ![asdf_ isEqual:child->asdf_] : child->asdf_ != nil) return false;
  return !(parent_ != nil ? !(parent_->id__ == child->parent_->id__) : child->parent_ != nil);
}

- (NSUInteger)hash {
  jint result = id__;
  result = 31 * result + (asdf_ != nil ? ((jint) [asdf_ hash]) : 0);
  result = 31 * result + (parent_ != nil ? ((jint) [parent_ hash]) : 0);
  return result;
}

- (void)dealloc {
  RELEASE_(asdf_);
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isEqual:);
  methods[2].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "I", .constantValue.asLong = 0, 0x0, 3, -1, -1, 4 },
    { "asdf_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 5 },
    { "parent_", "LCoTouchlabSqueakyFieldForeignCollectionTest_ParentOrder;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 6 },
  };
  static const void *ptrTable[] = { "equals", "LNSObject;", "hashCode", "id", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder__Annotations$0, (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder__Annotations$1, (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder__Annotations$2, "LCoTouchlabSqueakyFieldForeignCollectionTest;", (void *)&CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder__Annotations$3 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder = { "ChildOrder", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0xc, 3, 3, 7, -1, -1, -1, 8 };
  return &_CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder;
}

@end

void CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder_init(CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder *new_CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder, init)
}

CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder *create_CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", true, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", true, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldForeignCollectionTest_ChildOrder)
