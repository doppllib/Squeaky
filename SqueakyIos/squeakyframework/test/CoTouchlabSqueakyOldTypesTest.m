//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/old/TypesTest.java
//

#include "CoTouchlabDopplTestingDopplContextDelegateTestRunner.h"
#include "CoTouchlabSqueakyDaoDao.h"
#include "CoTouchlabSqueakyFieldDataType.h"
#include "CoTouchlabSqueakyFieldDatabaseField.h"
#include "CoTouchlabSqueakyFieldTypesVoidType.h"
#include "CoTouchlabSqueakyOldBaseTestHide.h"
#include "CoTouchlabSqueakyOldTypesTest.h"
#include "CoTouchlabSqueakyTableDatabaseTable.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/lang/annotation/Annotation.h"
#include "java/text/DateFormat.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Date.h"
#include "java/util/List.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"
#include "org/junit/runner/RunWith.h"

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest__Annotations$1();

@interface CoTouchlabSqueakyOldTypesTest_ManyTypes () {
 @public
  JavaTextDateFormat *checkFormat_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyOldTypesTest_ManyTypes, checkFormat_, JavaTextDateFormat *)

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$4();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$5();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$6();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$7();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$8();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$9();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$10();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$11();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$12();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$13();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$14();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$15();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$16();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$17();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$18();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$19();

@implementation CoTouchlabSqueakyOldTypesTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyOldTypesTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)basicDbTest {
  CoTouchlabSqueakyOldBaseTestHide_SimpleHelper *helper = [self createHelperWithIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ CoTouchlabSqueakyOldTypesTest_ManyTypes_class_() } count:1 type:IOSClass_class_()]];
  id<CoTouchlabSqueakyDaoDao> dao = [((CoTouchlabSqueakyOldBaseTestHide_SimpleHelper *) nil_chk(helper)) getDaoWithIOSClass:CoTouchlabSqueakyOldTypesTest_ManyTypes_class_()];
  CoTouchlabSqueakyOldTypesTest_ManyTypes *manyTypes = create_CoTouchlabSqueakyOldTypesTest_ManyTypes_init();
  manyTypes->id__ = 1;
  manyTypes->b1_ = true;
  JreStrongAssign(&manyTypes->b2_, JavaLangBoolean_valueOfWithBoolean_(false));
  manyTypes->by1_ = 3;
  JreStrongAssign(&manyTypes->by2_, JavaLangByte_valueOfWithByte_(5));
  manyTypes->d1_ = 423.0;
  JreStrongAssign(&manyTypes->d2_, JavaLangDouble_valueOfWithDouble_(6662.0));
  JreStrongAssignAndConsume(&manyTypes->dateDefault_, new_JavaUtilDate_init());
  JreStrongAssignAndConsume(&manyTypes->dateLong_, new_JavaUtilDate_init());
  JreStrongAssignAndConsume(&manyTypes->dateYYMMDD_, new_JavaUtilDate_init());
  manyTypes->f1_ = 234.0f;
  JreStrongAssign(&manyTypes->f2_, JavaLangFloat_valueOfWithFloat_(6662.0f));
  manyTypes->i1_ = 48928374;
  JreStrongAssign(&manyTypes->i2_, JavaLangInteger_valueOfWithInt_(48418374));
  manyTypes->l1_ = 8987189312l;
  JreStrongAssign(&manyTypes->l2_, JavaLangLong_valueOfWithLong_(18987189312l));
  manyTypes->s1_ = 31;
  JreStrongAssign(&manyTypes->s2_, JavaLangShort_valueOfWithShort_(234));
  JreStrongAssign(&manyTypes->st1_, @"Heyo lots of stuff");
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(dao)) createWithId:manyTypes];
  id<JavaUtilList> bs = [((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([dao queryForAll])) list];
  OrgJunitAssert_assertEqualsWithId_withId_(manyTypes, [((id<JavaUtilList>) nil_chk(bs)) getWithInt:0]);
  [helper close];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(basicDbTest);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaSqlSQLException;", (void *)&CoTouchlabSqueakyOldTypesTest__Annotations$0, "LCoTouchlabSqueakyOldTypesTest_ManyTypes;", (void *)&CoTouchlabSqueakyOldTypesTest__Annotations$1 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyOldTypesTest = { "TypesTest", "co.touchlab.squeaky.old", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, 2, -1, -1, 3 };
  return &_CoTouchlabSqueakyOldTypesTest;
}

@end

void CoTouchlabSqueakyOldTypesTest_init(CoTouchlabSqueakyOldTypesTest *self) {
  CoTouchlabSqueakyOldBaseTestHide_init(self);
}

CoTouchlabSqueakyOldTypesTest *new_CoTouchlabSqueakyOldTypesTest_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyOldTypesTest, init)
}

CoTouchlabSqueakyOldTypesTest *create_CoTouchlabSqueakyOldTypesTest_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyOldTypesTest, init)
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(CoTouchlabDopplTestingDopplContextDelegateTestRunner_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyOldTypesTest)

NSString *CoTouchlabSqueakyOldTypesTest_ManyTypes_MM_DD_YYYY = @"MM/dd/yyyy";

@implementation CoTouchlabSqueakyOldTypesTest_ManyTypes

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyOldTypesTest_ManyTypes_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isEqual:(id)o {
  if (self == o) return true;
  if (o == nil || [self java_getClass] != [o java_getClass]) return false;
  CoTouchlabSqueakyOldTypesTest_ManyTypes *manyTypes = (CoTouchlabSqueakyOldTypesTest_ManyTypes *) cast_chk(o, [CoTouchlabSqueakyOldTypesTest_ManyTypes class]);
  if (id__ != manyTypes->id__) return false;
  if (b1_ != manyTypes->b1_) return false;
  if (s1_ != manyTypes->s1_) return false;
  if (by1_ != manyTypes->by1_) return false;
  if (i1_ != manyTypes->i1_) return false;
  if (l1_ != manyTypes->l1_) return false;
  if (JavaLangFloat_compareWithFloat_withFloat_(manyTypes->f1_, f1_) != 0) return false;
  if (JavaLangDouble_compareWithDouble_withDouble_(manyTypes->d1_, d1_) != 0) return false;
  if (b2_ != nil ? ![b2_ isEqual:manyTypes->b2_] : manyTypes->b2_ != nil) return false;
  if (s2_ != nil ? ![s2_ isEqual:manyTypes->s2_] : manyTypes->s2_ != nil) return false;
  if (by2_ != nil ? ![by2_ isEqual:manyTypes->by2_] : manyTypes->by2_ != nil) return false;
  if (i2_ != nil ? ![i2_ isEqual:manyTypes->i2_] : manyTypes->i2_ != nil) return false;
  if (l2_ != nil ? ![l2_ isEqual:manyTypes->l2_] : manyTypes->l2_ != nil) return false;
  if (f2_ != nil ? ![f2_ isEqual:manyTypes->f2_] : manyTypes->f2_ != nil) return false;
  if (d2_ != nil ? ![d2_ isEqual:manyTypes->d2_] : manyTypes->d2_ != nil) return false;
  if (st1_ != nil ? ![st1_ isEqual:manyTypes->st1_] : manyTypes->st1_ != nil) return false;
  if (dateDefault_ != nil ? ![dateDefault_ isEqual:manyTypes->dateDefault_] : manyTypes->dateDefault_ != nil) return false;
  if (dateLong_ != nil ? ![dateLong_ isEqual:manyTypes->dateLong_] : manyTypes->dateLong_ != nil) return false;
  return !(dateYYMMDD_ != nil ? ![((NSString *) nil_chk([((JavaTextDateFormat *) nil_chk(checkFormat_)) formatWithJavaUtilDate:dateYYMMDD_])) isEqual:[((JavaTextDateFormat *) nil_chk(checkFormat_)) formatWithJavaUtilDate:manyTypes->dateYYMMDD_]] : manyTypes->dateYYMMDD_ != nil);
}

- (NSUInteger)hash {
  jint result;
  jlong temp;
  result = id__;
  result = 31 * result + (b1_ ? 1 : 0);
  result = 31 * result + (b2_ != nil ? ((jint) [b2_ hash]) : 0);
  result = 31 * result + (jint) s1_;
  result = 31 * result + (s2_ != nil ? ((jint) [s2_ hash]) : 0);
  result = 31 * result + (jint) by1_;
  result = 31 * result + (by2_ != nil ? ((jint) [by2_ hash]) : 0);
  result = 31 * result + i1_;
  result = 31 * result + (i2_ != nil ? ((jint) [i2_ hash]) : 0);
  result = 31 * result + (jint) (l1_ ^ (JreURShift64(l1_, 32)));
  result = 31 * result + (l2_ != nil ? ((jint) [l2_ hash]) : 0);
  result = 31 * result + (f1_ != +0.0f ? JavaLangFloat_floatToIntBitsWithFloat_(f1_) : 0);
  result = 31 * result + (f2_ != nil ? ((jint) [f2_ hash]) : 0);
  temp = JavaLangDouble_doubleToLongBitsWithDouble_(d1_);
  result = 31 * result + (jint) (temp ^ (JreURShift64(temp, 32)));
  result = 31 * result + (d2_ != nil ? ((jint) [d2_ hash]) : 0);
  result = 31 * result + (st1_ != nil ? ((jint) [st1_ hash]) : 0);
  result = 31 * result + (dateDefault_ != nil ? ((jint) [dateDefault_ hash]) : 0);
  result = 31 * result + (dateLong_ != nil ? ((jint) [dateLong_ hash]) : 0);
  result = 31 * result + (dateYYMMDD_ != nil ? ((jint) [((NSString *) nil_chk([((JavaTextDateFormat *) nil_chk(checkFormat_)) formatWithJavaUtilDate:dateYYMMDD_])) hash]) : 0);
  return result;
}

- (NSString *)description {
  return JreStrcat("$I$Z$@$S$@$B$@$I$@$J$@$F$@$D$@$$$@$@$@$@C", @"ManyTypes{id=", id__, @", b1=", b1_, @", b2=", b2_, @", s1=", s1_, @", s2=", s2_, @", by1=", by1_, @", by2=", by2_, @", i1=", i1_, @", i2=", i2_, @", l1=", l1_, @", l2=", l2_, @", f1=", f1_, @", f2=", f2_, @", d1=", d1_, @", d2=", d2_, @", st1='", st1_, @"', dateDefault=", dateDefault_, @", dateLong=", dateLong_, @", dateYYMMDD=", dateYYMMDD_, @", checkFormat=", checkFormat_, '}');
}

- (void)dealloc {
  RELEASE_(b2_);
  RELEASE_(s2_);
  RELEASE_(by2_);
  RELEASE_(i2_);
  RELEASE_(l2_);
  RELEASE_(f2_);
  RELEASE_(d2_);
  RELEASE_(st1_);
  RELEASE_(dateDefault_);
  RELEASE_(dateLong_);
  RELEASE_(dateYYMMDD_);
  RELEASE_(checkFormat_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isEqual:);
  methods[2].selector = @selector(hash);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MM_DD_YYYY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "id__", "I", .constantValue.asLong = 0, 0x1, 5, -1, -1, 6 },
    { "b1_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, 7 },
    { "b2_", "LJavaLangBoolean;", .constantValue.asLong = 0, 0x1, -1, -1, -1, 8 },
    { "s1_", "S", .constantValue.asLong = 0, 0x1, -1, -1, -1, 9 },
    { "s2_", "LJavaLangShort;", .constantValue.asLong = 0, 0x1, -1, -1, -1, 10 },
    { "by1_", "B", .constantValue.asLong = 0, 0x1, -1, -1, -1, 11 },
    { "by2_", "LJavaLangByte;", .constantValue.asLong = 0, 0x1, -1, -1, -1, 12 },
    { "i1_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, 13 },
    { "i2_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x1, -1, -1, -1, 14 },
    { "l1_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, 15 },
    { "l2_", "LJavaLangLong;", .constantValue.asLong = 0, 0x1, -1, -1, -1, 16 },
    { "f1_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, 17 },
    { "f2_", "LJavaLangFloat;", .constantValue.asLong = 0, 0x1, -1, -1, -1, 18 },
    { "d1_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, 19 },
    { "d2_", "LJavaLangDouble;", .constantValue.asLong = 0, 0x1, -1, -1, -1, 20 },
    { "st1_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, 21 },
    { "dateDefault_", "LJavaUtilDate;", .constantValue.asLong = 0, 0x1, -1, -1, -1, 22 },
    { "dateLong_", "LJavaUtilDate;", .constantValue.asLong = 0, 0x1, -1, -1, -1, 23 },
    { "dateYYMMDD_", "LJavaUtilDate;", .constantValue.asLong = 0, 0x1, -1, -1, -1, 24 },
    { "checkFormat_", "LJavaTextDateFormat;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "equals", "LNSObject;", "hashCode", "toString", &CoTouchlabSqueakyOldTypesTest_ManyTypes_MM_DD_YYYY, "id", (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$0, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$1, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$2, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$3, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$4, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$5, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$6, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$7, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$8, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$9, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$10, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$11, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$12, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$13, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$14, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$15, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$16, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$17, (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$18, "LCoTouchlabSqueakyOldTypesTest;", (void *)&CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$19 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyOldTypesTest_ManyTypes = { "ManyTypes", "co.touchlab.squeaky.old", ptrTable, methods, fields, 7, 0x8, 4, 21, 25, -1, -1, -1, 26 };
  return &_CoTouchlabSqueakyOldTypesTest_ManyTypes;
}

@end

void CoTouchlabSqueakyOldTypesTest_ManyTypes_init(CoTouchlabSqueakyOldTypesTest_ManyTypes *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->checkFormat_, new_JavaTextSimpleDateFormat_initWithNSString_(CoTouchlabSqueakyOldTypesTest_ManyTypes_MM_DD_YYYY));
}

CoTouchlabSqueakyOldTypesTest_ManyTypes *new_CoTouchlabSqueakyOldTypesTest_ManyTypes_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyOldTypesTest_ManyTypes, init)
}

CoTouchlabSqueakyOldTypesTest_ManyTypes *create_CoTouchlabSqueakyOldTypesTest_ManyTypes_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyOldTypesTest_ManyTypes, init)
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, true, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$17() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, DATE_LONG), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$18() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"MM/dd/yyyy", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes__Annotations$19() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyOldTypesTest_ManyTypes)
