//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/build/generated/source/apt/test/co/touchlab/squeaky/old/TypesTest$ManyTypes$Configuration.java
//

#include "AndroidDatabaseCursor.h"
#include "CoTouchlabSqueakyDaoModelDao.h"
#include "CoTouchlabSqueakyDbSQLiteStatement.h"
#include "CoTouchlabSqueakyFieldDataPersister.h"
#include "CoTouchlabSqueakyFieldDataType.h"
#include "CoTouchlabSqueakyFieldFieldType.h"
#include "CoTouchlabSqueakyFieldFieldsEnum.h"
#include "CoTouchlabSqueakyFieldForeignCollectionInfo.h"
#include "CoTouchlabSqueakyFieldOrmLiteHelper.h"
#include "CoTouchlabSqueakyOldTypesTest$ManyTypes$Configuration.h"
#include "CoTouchlabSqueakyOldTypesTest.h"
#include "CoTouchlabSqueakyTableTableInfo.h"
#include "CoTouchlabSqueakyTableTransientCache.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/util/ArrayList.h"
#include "java/util/Date.h"
#include "java/util/List.h"

@interface CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields () {
 @public
  CoTouchlabSqueakyFieldFieldType *fieldType_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, fieldType_, CoTouchlabSqueakyFieldFieldType *)

__attribute__((unused)) static void CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields *self, CoTouchlabSqueakyFieldFieldType *fieldType, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration)

CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration *CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_instance;

@implementation CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (CoTouchlabSqueakyOldTypesTest_ManyTypes *)createObjectWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)results {
  CoTouchlabSqueakyOldTypesTest_ManyTypes *data = create_CoTouchlabSqueakyOldTypesTest_ManyTypes_init();
  return data;
}

- (void)fillRowWithId:(CoTouchlabSqueakyOldTypesTest_ManyTypes *)data
withAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)results
withCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)modelDao
withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:(IOSObjectArray *)foreignRefreshMap
withCoTouchlabSqueakyTableTransientCache:(CoTouchlabSqueakyTableTransientCache *)objectCache {
  if (![((id<AndroidDatabaseCursor>) nil_chk(results)) isNullWithInt:0]) ((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->id__ = [results getIntWithInt:0];
  if (![results isNullWithInt:1]) ((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->b1_ = ([results getShortWithInt:1] != 0);
  if (![results isNullWithInt:2]) JreStrongAssign(&((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->b2_, JavaLangBoolean_valueOfWithBoolean_([results getShortWithInt:2] != 0));
  if (![results isNullWithInt:3]) ((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->s1_ = [results getShortWithInt:3];
  if (![results isNullWithInt:4]) JreStrongAssign(&((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->s2_, JavaLangShort_valueOfWithShort_([results getShortWithInt:4]));
  if (![results isNullWithInt:5]) ((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->by1_ = [((JavaLangByte *) nil_chk((JavaLangByte *) cast_chk([((id<CoTouchlabSqueakyFieldDataPersister>) nil_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk([((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 5))) getFieldType])) getDataPersister])) resultToJavaWithCoTouchlabSqueakyFieldFieldType:[((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 5))) getFieldType] withAndroidDatabaseCursor:results withInt:5], [JavaLangByte class]))) charValue];
  if (![results isNullWithInt:6]) JreStrongAssign(&((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->by2_, (JavaLangByte *) cast_chk([((id<CoTouchlabSqueakyFieldDataPersister>) nil_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk([((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 6))) getFieldType])) getDataPersister])) resultToJavaWithCoTouchlabSqueakyFieldFieldType:[((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 6))) getFieldType] withAndroidDatabaseCursor:results withInt:6], [JavaLangByte class]));
  if (![results isNullWithInt:7]) ((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->i1_ = [results getIntWithInt:7];
  if (![results isNullWithInt:8]) JreStrongAssign(&((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->i2_, JavaLangInteger_valueOfWithInt_([results getIntWithInt:8]));
  if (![results isNullWithInt:9]) ((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->l1_ = [results getLongWithInt:9];
  if (![results isNullWithInt:10]) JreStrongAssign(&((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->l2_, JavaLangLong_valueOfWithLong_([results getLongWithInt:10]));
  if (![results isNullWithInt:11]) ((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->f1_ = [results getFloatWithInt:11];
  if (![results isNullWithInt:12]) JreStrongAssign(&((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->f2_, JavaLangFloat_valueOfWithFloat_([results getFloatWithInt:12]));
  if (![results isNullWithInt:13]) ((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->d1_ = [results getDoubleWithInt:13];
  if (![results isNullWithInt:14]) JreStrongAssign(&((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->d2_, JavaLangDouble_valueOfWithDouble_([results getDoubleWithInt:14]));
  JreStrongAssign(&((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->st1_, [results getStringWithInt:15]);
  if (![results isNullWithInt:16]) JreStrongAssign(&data->dateDefault_, (JavaUtilDate *) cast_chk([((id<CoTouchlabSqueakyFieldDataPersister>) nil_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk([((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 16))) getFieldType])) getDataPersister])) resultToJavaWithCoTouchlabSqueakyFieldFieldType:[((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 16))) getFieldType] withAndroidDatabaseCursor:results withInt:16], [JavaUtilDate class]));
  if (![results isNullWithInt:17]) JreStrongAssign(&data->dateLong_, (JavaUtilDate *) cast_chk([((id<CoTouchlabSqueakyFieldDataPersister>) nil_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk([((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 17))) getFieldType])) getDataPersister])) resultToJavaWithCoTouchlabSqueakyFieldFieldType:[((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 17))) getFieldType] withAndroidDatabaseCursor:results withInt:17], [JavaUtilDate class]));
  if (![results isNullWithInt:18]) JreStrongAssign(&data->dateYYMMDD_, (JavaUtilDate *) cast_chk([((id<CoTouchlabSqueakyFieldDataPersister>) nil_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk([((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 18))) getFieldType])) getDataPersister])) resultToJavaWithCoTouchlabSqueakyFieldFieldType:[((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 18))) getFieldType] withAndroidDatabaseCursor:results withInt:18], [JavaUtilDate class]));
}

- (void)assignIdWithId:(CoTouchlabSqueakyOldTypesTest_ManyTypes *)data
                withId:(id)val {
  ((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->id__ = [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(CoTouchlabSqueakyFieldOrmLiteHelper_safeConvertWithIOSClass_withId_([IOSClass intClass], val), [JavaLangInteger class]))) intValue];
}

- (JavaLangInteger *)extractIdWithId:(CoTouchlabSqueakyOldTypesTest_ManyTypes *)data {
  if (data == nil) {
    return nil;
  }
  JavaLangInteger *val = JavaLangInteger_valueOfWithInt_(data->id__);
  val = [val intValue] == 0 ? nil : val;
  return val;
}

- (void)bindValsWithCoTouchlabSqueakyDbSQLiteStatement:(id<CoTouchlabSqueakyDbSQLiteStatement>)stmt
                                                withId:(CoTouchlabSqueakyOldTypesTest_ManyTypes *)data {
  [((id<CoTouchlabSqueakyDbSQLiteStatement>) nil_chk(stmt)) bindLongWithInt:1 withLong:((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->b1_ ? 1 : 0];
  JavaLangBoolean *val2 = data->b2_;
  if (val2 == nil) {
    [stmt bindNullWithInt:2];
  }
  else {
    [stmt bindLongWithInt:2 withLong:[val2 booleanValue] ? 1 : 0];
  }
  [stmt bindLongWithInt:3 withLong:data->s1_];
  JavaLangShort *val4 = data->s2_;
  if (val4 == nil) {
    [stmt bindNullWithInt:4];
  }
  else {
    [stmt bindLongWithInt:4 withLong:[val4 longLongValue]];
  }
  id val5 = JavaLangByte_valueOfWithByte_(data->by1_);
  if (val5 == nil) {
    [stmt bindNullWithInt:5];
  }
  else {
    [stmt bindStringWithInt:5 withNSString:[nil_chk([((id<CoTouchlabSqueakyFieldDataPersister>) nil_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk([((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 5))) getFieldType])) getDataPersister])) javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:[((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 5))) getFieldType] withId:val5]) description]];
  }
  id val6 = data->by2_;
  if (val6 == nil) {
    [stmt bindNullWithInt:6];
  }
  else {
    [stmt bindStringWithInt:6 withNSString:[nil_chk([((id<CoTouchlabSqueakyFieldDataPersister>) nil_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk([((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 6))) getFieldType])) getDataPersister])) javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:[((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 6))) getFieldType] withId:val6]) description]];
  }
  [stmt bindLongWithInt:7 withLong:data->i1_];
  JavaLangInteger *val8 = data->i2_;
  if (val8 == nil) {
    [stmt bindNullWithInt:8];
  }
  else {
    [stmt bindLongWithInt:8 withLong:[val8 longLongValue]];
  }
  [stmt bindLongWithInt:9 withLong:data->l1_];
  JavaLangLong *val10 = data->l2_;
  if (val10 == nil) {
    [stmt bindNullWithInt:10];
  }
  else {
    [stmt bindLongWithInt:10 withLong:[val10 longLongValue]];
  }
  [stmt bindDoubleWithInt:11 withDouble:data->f1_];
  JavaLangFloat *val12 = data->f2_;
  if (val12 == nil) {
    [stmt bindNullWithInt:12];
  }
  else {
    [stmt bindDoubleWithInt:12 withDouble:[val12 doubleValue]];
  }
  [stmt bindDoubleWithInt:13 withDouble:data->d1_];
  JavaLangDouble *val14 = data->d2_;
  if (val14 == nil) {
    [stmt bindNullWithInt:14];
  }
  else {
    [stmt bindDoubleWithInt:14 withDouble:[val14 doubleValue]];
  }
  NSString *val15 = data->st1_;
  if (val15 == nil) {
    [stmt bindNullWithInt:15];
  }
  else {
    [stmt bindStringWithInt:15 withNSString:data->st1_];
  }
  id val16 = data->dateDefault_;
  if (val16 == nil) {
    [stmt bindNullWithInt:16];
  }
  else {
    [stmt bindStringWithInt:16 withNSString:[nil_chk([((id<CoTouchlabSqueakyFieldDataPersister>) nil_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk([((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 16))) getFieldType])) getDataPersister])) javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:[((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 16))) getFieldType] withId:val16]) description]];
  }
  id val17 = data->dateLong_;
  if (val17 == nil) {
    [stmt bindNullWithInt:17];
  }
  else {
    [stmt bindStringWithInt:17 withNSString:[nil_chk([((id<CoTouchlabSqueakyFieldDataPersister>) nil_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk([((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 17))) getFieldType])) getDataPersister])) javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:[((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 17))) getFieldType] withId:val17]) description]];
  }
  id val18 = data->dateYYMMDD_;
  if (val18 == nil) {
    [stmt bindNullWithInt:18];
  }
  else {
    [stmt bindStringWithInt:18 withNSString:[nil_chk([((id<CoTouchlabSqueakyFieldDataPersister>) nil_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk([((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 18))) getFieldType])) getDataPersister])) javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:[((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 18))) getFieldType] withId:val18]) description]];
  }
  [stmt bindLongWithInt:19 withLong:data->id__];
}

- (void)bindCreateValsWithCoTouchlabSqueakyDbSQLiteStatement:(id<CoTouchlabSqueakyDbSQLiteStatement>)stmt
                                                      withId:(CoTouchlabSqueakyOldTypesTest_ManyTypes *)data {
  [((id<CoTouchlabSqueakyDbSQLiteStatement>) nil_chk(stmt)) bindLongWithInt:1 withLong:((CoTouchlabSqueakyOldTypesTest_ManyTypes *) nil_chk(data))->id__];
  [stmt bindLongWithInt:2 withLong:data->b1_ ? 1 : 0];
  JavaLangBoolean *val3 = data->b2_;
  if (val3 == nil) {
    [stmt bindNullWithInt:3];
  }
  else {
    [stmt bindLongWithInt:3 withLong:[val3 booleanValue] ? 1 : 0];
  }
  [stmt bindLongWithInt:4 withLong:data->s1_];
  JavaLangShort *val5 = data->s2_;
  if (val5 == nil) {
    [stmt bindNullWithInt:5];
  }
  else {
    [stmt bindLongWithInt:5 withLong:[val5 longLongValue]];
  }
  id val6 = JavaLangByte_valueOfWithByte_(data->by1_);
  if (val6 == nil) {
    [stmt bindNullWithInt:6];
  }
  else {
    [stmt bindStringWithInt:6 withNSString:[nil_chk([((id<CoTouchlabSqueakyFieldDataPersister>) nil_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk([((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 5))) getFieldType])) getDataPersister])) javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:[((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 5))) getFieldType] withId:val6]) description]];
  }
  id val7 = data->by2_;
  if (val7 == nil) {
    [stmt bindNullWithInt:7];
  }
  else {
    [stmt bindStringWithInt:7 withNSString:[nil_chk([((id<CoTouchlabSqueakyFieldDataPersister>) nil_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk([((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 6))) getFieldType])) getDataPersister])) javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:[((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 6))) getFieldType] withId:val7]) description]];
  }
  [stmt bindLongWithInt:8 withLong:data->i1_];
  JavaLangInteger *val9 = data->i2_;
  if (val9 == nil) {
    [stmt bindNullWithInt:9];
  }
  else {
    [stmt bindLongWithInt:9 withLong:[val9 longLongValue]];
  }
  [stmt bindLongWithInt:10 withLong:data->l1_];
  JavaLangLong *val11 = data->l2_;
  if (val11 == nil) {
    [stmt bindNullWithInt:11];
  }
  else {
    [stmt bindLongWithInt:11 withLong:[val11 longLongValue]];
  }
  [stmt bindDoubleWithInt:12 withDouble:data->f1_];
  JavaLangFloat *val13 = data->f2_;
  if (val13 == nil) {
    [stmt bindNullWithInt:13];
  }
  else {
    [stmt bindDoubleWithInt:13 withDouble:[val13 doubleValue]];
  }
  [stmt bindDoubleWithInt:14 withDouble:data->d1_];
  JavaLangDouble *val15 = data->d2_;
  if (val15 == nil) {
    [stmt bindNullWithInt:15];
  }
  else {
    [stmt bindDoubleWithInt:15 withDouble:[val15 doubleValue]];
  }
  NSString *val16 = data->st1_;
  if (val16 == nil) {
    [stmt bindNullWithInt:16];
  }
  else {
    [stmt bindStringWithInt:16 withNSString:data->st1_];
  }
  id val17 = data->dateDefault_;
  if (val17 == nil) {
    [stmt bindNullWithInt:17];
  }
  else {
    [stmt bindStringWithInt:17 withNSString:[nil_chk([((id<CoTouchlabSqueakyFieldDataPersister>) nil_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk([((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 16))) getFieldType])) getDataPersister])) javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:[((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 16))) getFieldType] withId:val17]) description]];
  }
  id val18 = data->dateLong_;
  if (val18 == nil) {
    [stmt bindNullWithInt:18];
  }
  else {
    [stmt bindStringWithInt:18 withNSString:[nil_chk([((id<CoTouchlabSqueakyFieldDataPersister>) nil_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk([((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 17))) getFieldType])) getDataPersister])) javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:[((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 17))) getFieldType] withId:val18]) description]];
  }
  id val19 = data->dateYYMMDD_;
  if (val19 == nil) {
    [stmt bindNullWithInt:19];
  }
  else {
    [stmt bindStringWithInt:19 withNSString:[nil_chk([((id<CoTouchlabSqueakyFieldDataPersister>) nil_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk([((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 18))) getFieldType])) getDataPersister])) javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:[((id<CoTouchlabSqueakyFieldFieldsEnum>) nil_chk(IOSObjectArray_Get(nil_chk(fields_), 18))) getFieldType] withId:val19]) description]];
  }
}

- (NSString *)objectToStringWithId:(CoTouchlabSqueakyOldTypesTest_ManyTypes *)data {
  return @"heyo";
}

- (jboolean)objectsEqualWithId:(CoTouchlabSqueakyOldTypesTest_ManyTypes *)d1
                        withId:(CoTouchlabSqueakyOldTypesTest_ManyTypes *)d2 {
  return false;
}

- (void)fillForeignCollectionWithId:(CoTouchlabSqueakyOldTypesTest_ManyTypes *)data
   withCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)modelDao
                       withNSString:(NSString *)fieldName {
}

+ (IOSObjectArray *)getFields {
  return CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_getFields();
}

+ (IOSObjectArray *)getForeignConfigs {
  return CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_getForeignConfigs();
}

- (CoTouchlabSqueakyTableTableInfo *)getTableConfig {
  CoTouchlabSqueakyTableTableInfo *config = create_CoTouchlabSqueakyTableTableInfo_initWithIOSClass_withNSString_withCoTouchlabSqueakyFieldFieldsEnumArray_withCoTouchlabSqueakyFieldForeignCollectionInfoArray_(CoTouchlabSqueakyOldTypesTest_ManyTypes_class_(), @"manytypes", CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_getFields(), CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_getForeignConfigs());
  return config;
}

- (void)dealloc {
  RELEASE_(fields_);
  RELEASE_(foreignConfigs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyOldTypesTest_ManyTypes;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, 5, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 11, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 13, 9, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, 14, 15, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 17, 2, 18, -1, -1 },
    { NULL, "[LCoTouchlabSqueakyFieldFieldsEnum;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LCoTouchlabSqueakyFieldForeignCollectionInfo;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyTableTableInfo;", 0x1, -1, -1, 2, 19, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createObjectWithAndroidDatabaseCursor:);
  methods[2].selector = @selector(fillRowWithId:withAndroidDatabaseCursor:withCoTouchlabSqueakyDaoModelDao:withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:withCoTouchlabSqueakyTableTransientCache:);
  methods[3].selector = @selector(assignIdWithId:withId:);
  methods[4].selector = @selector(extractIdWithId:);
  methods[5].selector = @selector(bindValsWithCoTouchlabSqueakyDbSQLiteStatement:withId:);
  methods[6].selector = @selector(bindCreateValsWithCoTouchlabSqueakyDbSQLiteStatement:withId:);
  methods[7].selector = @selector(objectToStringWithId:);
  methods[8].selector = @selector(objectsEqualWithId:withId:);
  methods[9].selector = @selector(fillForeignCollectionWithId:withCoTouchlabSqueakyDaoModelDao:withNSString:);
  methods[10].selector = @selector(getFields);
  methods[11].selector = @selector(getForeignConfigs);
  methods[12].selector = @selector(getTableConfig);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "instance", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "fields_", "[LCoTouchlabSqueakyFieldFieldsEnum;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "foreignConfigs_", "[LCoTouchlabSqueakyFieldForeignCollectionInfo;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "createObject", "LAndroidDatabaseCursor;", "LJavaSqlSQLException;", "fillRow", "LCoTouchlabSqueakyOldTypesTest_ManyTypes;LAndroidDatabaseCursor;LCoTouchlabSqueakyDaoModelDao;[LCoTouchlabSqueakyDaoDao_ForeignRefresh;LCoTouchlabSqueakyTableTransientCache;", "(Lco/touchlab/squeaky/old/TypesTest$ManyTypes;Landroid/database/Cursor;Lco/touchlab/squeaky/dao/ModelDao<Lco/touchlab/squeaky/old/TypesTest$ManyTypes;>;[Lco/touchlab/squeaky/dao/Dao$ForeignRefresh;Lco/touchlab/squeaky/table/TransientCache;)V", "assignId", "LCoTouchlabSqueakyOldTypesTest_ManyTypes;LNSObject;", "extractId", "LCoTouchlabSqueakyOldTypesTest_ManyTypes;", "bindVals", "LCoTouchlabSqueakyDbSQLiteStatement;LCoTouchlabSqueakyOldTypesTest_ManyTypes;", "bindCreateVals", "objectToString", "objectsEqual", "LCoTouchlabSqueakyOldTypesTest_ManyTypes;LCoTouchlabSqueakyOldTypesTest_ManyTypes;", "fillForeignCollection", "LCoTouchlabSqueakyOldTypesTest_ManyTypes;LCoTouchlabSqueakyDaoModelDao;LNSString;", "(Lco/touchlab/squeaky/old/TypesTest$ManyTypes;Lco/touchlab/squeaky/dao/ModelDao<Lco/touchlab/squeaky/old/TypesTest$ManyTypes;>;Ljava/lang/String;)V", "()Lco/touchlab/squeaky/table/TableInfo<Lco/touchlab/squeaky/old/TypesTest$ManyTypes;>;", &CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_instance, "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", "Ljava/lang/Object;Lco/touchlab/squeaky/table/GeneratedTableMapper<Lco/touchlab/squeaky/old/TypesTest$ManyTypes;>;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration = { "TypesTest$ManyTypes$Configuration", "co.touchlab.squeaky.old", ptrTable, methods, fields, 7, 0x11, 13, 3, -1, 21, -1, 22, -1 };
  return &_CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration;
}

+ (void)initialize {
  if (self == [CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration class]) {
    JreStrongAssignAndConsume(&CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_instance, new_CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_init());
    J2OBJC_SET_INITIALIZED(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration)
  }
}

@end

void CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_init(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration *self) {
  NSObject_init(self);
  JreStrongAssign(&self->fields_, CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_getFields());
  JreStrongAssign(&self->foreignConfigs_, CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_getForeignConfigs());
}

CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration *new_CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration, init)
}

CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration *create_CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration, init)
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_getFields() {
  CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_initialize();
  return CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_values();
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_getForeignConfigs() {
  CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_initialize();
  id<JavaUtilList> list = create_JavaUtilArrayList_init();
  CoTouchlabSqueakyFieldForeignCollectionInfo *config = nil;
  return [list toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[list size] type:CoTouchlabSqueakyFieldForeignCollectionInfo_class_()]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration)

J2OBJC_INITIALIZED_DEFN(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields)

CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields *CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_values_[19];

@implementation CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields

- (CoTouchlabSqueakyFieldFieldType *)getFieldType {
  return fieldType_;
}

+ (IOSObjectArray *)values {
  return CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_values();
}

+ (CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields *)valueOfWithNSString:(NSString *)name {
  return CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LCoTouchlabSqueakyFieldFieldType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getFieldType);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "b1", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "b2", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "s1", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "s2", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "by1", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "by2", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "i1", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "i2", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
    { "l1", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 11, -1, -1 },
    { "l2", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 12, -1, -1 },
    { "f1", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 13, -1, -1 },
    { "f2", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 14, -1, -1 },
    { "d1", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 15, -1, -1 },
    { "d2", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 16, -1, -1 },
    { "st1", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 17, -1, -1 },
    { "dateDefault", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 18, -1, -1 },
    { "dateLong", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 19, -1, -1 },
    { "dateYYMMDD", "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;", .constantValue.asLong = 0, 0x4019, -1, 20, -1, -1 },
    { "fieldType_", "LCoTouchlabSqueakyFieldFieldType;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, id), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, b1), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, b2), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, s1), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, s2), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, by1), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, by2), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, i1), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, i2), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, l1), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, l2), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, f1), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, f2), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, d1), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, d2), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, st1), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, dateDefault), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, dateLong), &JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, dateYYMMDD), "LCoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration;", "Ljava/lang/Enum<Lco/touchlab/squeaky/old/TypesTest$ManyTypes$Configuration$Fields;>;Lco/touchlab/squeaky/field/FieldsEnum;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields = { "Fields", "co.touchlab.squeaky.old", ptrTable, methods, fields, 7, 0x4019, 3, 20, 21, -1, -1, 22, -1 };
  return &_CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields;
}

+ (void)initialize {
  if (self == [CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 19 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, id) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"id", @"id", true, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, INTEGER), [IOSClass intClass], true, nil, false, false, false, false, nil, nil, nil, false), @"id", 0);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, b1) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"b1", @"b1", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, BOOLEAN), [IOSClass booleanClass], true, nil, false, false, false, false, nil, nil, nil, false), @"b1", 1);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, b2) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"b2", @"b2", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, BOOLEAN_OBJ), JavaLangBoolean_class_(), true, nil, false, false, false, false, nil, nil, nil, false), @"b2", 2);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, s1) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"s1", @"s1", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, SHORT), [IOSClass shortClass], true, nil, false, false, false, false, nil, nil, nil, false), @"s1", 3);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, s2) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"s2", @"s2", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, SHORT_OBJ), JavaLangShort_class_(), true, nil, false, false, false, false, nil, nil, nil, false), @"s2", 4);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, by1) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"by1", @"by1", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, BYTE), [IOSClass byteClass], true, nil, false, false, false, false, nil, nil, nil, false), @"by1", 5);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, by2) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"by2", @"by2", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, BYTE_OBJ), JavaLangByte_class_(), true, nil, false, false, false, false, nil, nil, nil, false), @"by2", 6);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, i1) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"i1", @"i1", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, INTEGER), [IOSClass intClass], true, nil, false, false, false, false, nil, nil, nil, false), @"i1", 7);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, i2) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"i2", @"i2", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, INTEGER_OBJ), JavaLangInteger_class_(), true, nil, false, false, false, false, nil, nil, nil, false), @"i2", 8);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, l1) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"l1", @"l1", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, LONG), [IOSClass longClass], true, nil, false, false, false, false, nil, nil, nil, false), @"l1", 9);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, l2) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"l2", @"l2", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, LONG_OBJ), JavaLangLong_class_(), true, nil, false, false, false, false, nil, nil, nil, false), @"l2", 10);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, f1) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"f1", @"f1", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, FLOAT), [IOSClass floatClass], true, nil, false, false, false, false, nil, nil, nil, false), @"f1", 11);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, f2) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"f2", @"f2", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, FLOAT_OBJ), JavaLangFloat_class_(), true, nil, false, false, false, false, nil, nil, nil, false), @"f2", 12);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, d1) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"d1", @"d1", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, DOUBLE), [IOSClass doubleClass], true, nil, false, false, false, false, nil, nil, nil, false), @"d1", 13);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, d2) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"d2", @"d2", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, DOUBLE_OBJ), JavaLangDouble_class_(), true, nil, false, false, false, false, nil, nil, nil, false), @"d2", 14);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, st1) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"st1", @"st1", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, STRING), NSString_class_(), true, nil, false, false, false, false, nil, nil, nil, false), @"st1", 15);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, dateDefault) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"dateDefault", @"dateDefault", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, DATE), JavaUtilDate_class_(), true, nil, false, false, false, false, nil, nil, nil, false), @"dateDefault", 16);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, dateLong) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"dateLong", @"dateLong", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, DATE_LONG), JavaUtilDate_class_(), true, nil, false, false, false, false, nil, nil, nil, false), @"dateLong", 17);
    (JreEnum(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields, dateYYMMDD) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(e, create_CoTouchlabSqueakyFieldFieldType_initWithNSString_withNSString_withNSString_withBoolean_withBoolean_withBoolean_withCoTouchlabSqueakyFieldDataType_withIOSClass_withBoolean_withNSString_withBoolean_withBoolean_withBoolean_withBoolean_withNSString_withNSString_withNSString_withBoolean_(@"manytypes", @"dateYYMMDD", @"dateYYMMDD", false, false, false, JreLoadEnum(CoTouchlabSqueakyFieldDataType, DATE), JavaUtilDate_class_(), true, @"MM/dd/yyyy", false, false, false, false, nil, nil, nil, false), @"dateYYMMDD", 18);
    J2OBJC_SET_INITIALIZED(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields)
  }
}

@end

void CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initWithCoTouchlabSqueakyFieldFieldType_withNSString_withInt_(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields *self, CoTouchlabSqueakyFieldFieldType *fieldType, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  JreStrongAssign(&self->fieldType_, fieldType);
}

IOSObjectArray *CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_values() {
  CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initialize();
  return [IOSObjectArray arrayWithObjects:CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_values_ count:19 type:CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_class_()];
}

CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields *CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_valueOfWithNSString_(NSString *name) {
  CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initialize();
  for (int i = 0; i < 19; i++) {
    CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields *e = CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields *CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_fromOrdinal(NSUInteger ordinal) {
  CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_initialize();
  if (ordinal >= 19) {
    return nil;
  }
  return CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyOldTypesTest_ManyTypes_Configuration_Fields)
