//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/field/ViewTest.java
//

#include "CoTouchlabDopplTestingDopplContextDelegateTestRunner.h"
#include "CoTouchlabSqueakyDaoDao.h"
#include "CoTouchlabSqueakyFieldDataType.h"
#include "CoTouchlabSqueakyFieldDatabaseField.h"
#include "CoTouchlabSqueakyFieldTypesBaseTypeTestHide.h"
#include "CoTouchlabSqueakyFieldTypesVoidType.h"
#include "CoTouchlabSqueakyFieldViewTest.h"
#include "CoTouchlabSqueakyTableDatabaseTable.h"
#include "CoTouchlabSqueakyTableDatabaseView.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Random.h"
#include "org/junit/After.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/junit/runner/RunWith.h"

@interface CoTouchlabSqueakyFieldViewTest () {
 @public
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *helper_;
}

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)getHelper;

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldViewTest, helper_, CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *CoTouchlabSqueakyFieldViewTest_getHelper(CoTouchlabSqueakyFieldViewTest *self);

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldViewTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldViewTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldViewTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldViewTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldViewTest_Parent__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldViewTest_Parent__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldViewTest_Parent__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldViewTest_Child__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldViewTest_Child__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldViewTest_Child__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldViewTest_Child__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldViewTest_ParentChildView__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldViewTest_ParentChildView__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldViewTest_ParentChildView__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldViewTest_ParentChildView__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldViewTest_ParentChildView__Annotations$4();

@implementation CoTouchlabSqueakyFieldViewTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldViewTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)before {
  JreStrongAssign(&helper_, CoTouchlabSqueakyFieldViewTest_getHelper(self));
}

- (void)after {
  [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) close];
}

- (void)testView {
  id<CoTouchlabSqueakyDaoDao> parentDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldViewTest_Parent_class_()];
  id<CoTouchlabSqueakyDaoDao> childDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldViewTest_Child_class_()];
  for (jint p = 0; p < 3; p++) {
    CoTouchlabSqueakyFieldViewTest_Parent *parent = create_CoTouchlabSqueakyFieldViewTest_Parent_init();
    JreStrongAssign(&parent->name_, JreStrcat("$I", @"p ", p));
    [((id<CoTouchlabSqueakyDaoDao>) nil_chk(parentDao)) createWithId:parent];
    JavaUtilRandom *random = create_JavaUtilRandom_init();
    id<JavaUtilList> children = create_JavaUtilArrayList_init();
    for (jint i = 0; i < 20; i++) {
      CoTouchlabSqueakyFieldViewTest_Child *child = create_CoTouchlabSqueakyFieldViewTest_Child_init();
      JreStrongAssign(&child->asdf_, JreStrcat("$I", @"Hello ", [random nextIntWithInt:10000]));
      JreStrongAssign(&child->parent_, parent);
      [((id<CoTouchlabSqueakyDaoDao>) nil_chk(childDao)) createWithId:child];
      [children addWithId:child];
    }
  }
  id<CoTouchlabSqueakyDaoDao> parentChildViewDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldViewTest_ParentChildView_class_()];
  id<JavaUtilList> parentChildViews = [((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(parentChildViewDao)) queryForAll])) list];
  OrgJunitAssert_assertEqualsWithNSString_withLong_withLong_(@"Not enough view results", [((id<JavaUtilList>) nil_chk(parentChildViews)) size], 60);
  for (CoTouchlabSqueakyFieldViewTest_ParentChildView * __strong parentChildView in parentChildViews) {
    OrgJunitAssert_assertTrueWithBoolean_(((CoTouchlabSqueakyFieldViewTest_ParentChildView *) nil_chk(parentChildView))->childId_ > 0);
    OrgJunitAssert_assertTrueWithBoolean_([((NSString *) nil_chk(parentChildView->parentName_)) hasPrefix:@"p "]);
  }
}

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)getHelper {
  return CoTouchlabSqueakyFieldViewTest_getHelper(self);
}

- (void)dealloc {
  RELEASE_(helper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 3, -1 },
    { NULL, "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(before);
  methods[2].selector = @selector(after);
  methods[3].selector = @selector(testView);
  methods[4].selector = @selector(getHelper);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "helper_", "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&CoTouchlabSqueakyFieldViewTest__Annotations$0, (void *)&CoTouchlabSqueakyFieldViewTest__Annotations$1, "LJavaLangException;", (void *)&CoTouchlabSqueakyFieldViewTest__Annotations$2, "LCoTouchlabSqueakyFieldViewTest_Parent;LCoTouchlabSqueakyFieldViewTest_Child;LCoTouchlabSqueakyFieldViewTest_ParentChildView;", (void *)&CoTouchlabSqueakyFieldViewTest__Annotations$3 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldViewTest = { "ViewTest", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, 4, -1, -1, 5 };
  return &_CoTouchlabSqueakyFieldViewTest;
}

@end

void CoTouchlabSqueakyFieldViewTest_init(CoTouchlabSqueakyFieldViewTest *self) {
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_init(self);
}

CoTouchlabSqueakyFieldViewTest *new_CoTouchlabSqueakyFieldViewTest_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldViewTest, init)
}

CoTouchlabSqueakyFieldViewTest *create_CoTouchlabSqueakyFieldViewTest_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldViewTest, init)
}

CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *CoTouchlabSqueakyFieldViewTest_getHelper(CoTouchlabSqueakyFieldViewTest *self) {
  return [self createViewHelperWithNSString:@"create view ParentChildView as select p.id parentId, p.name parentName, c.id childId, c.asdf from Parent p join Child c on p.id = c.parent_id" withIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ CoTouchlabSqueakyFieldViewTest_Child_class_(), CoTouchlabSqueakyFieldViewTest_Parent_class_() } count:2 type:IOSClass_class_()]];
}

IOSObjectArray *CoTouchlabSqueakyFieldViewTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldViewTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitAfter() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldViewTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldViewTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(CoTouchlabDopplTestingDopplContextDelegateTestRunner_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldViewTest)

@implementation CoTouchlabSqueakyFieldViewTest_Parent

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldViewTest_Parent_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(children_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "I", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 2 },
    { "children_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "id", (void *)&CoTouchlabSqueakyFieldViewTest_Parent__Annotations$0, (void *)&CoTouchlabSqueakyFieldViewTest_Parent__Annotations$1, "Ljava/util/List<Lco/touchlab/squeaky/field/ViewTest$Child;>;", "LCoTouchlabSqueakyFieldViewTest;", (void *)&CoTouchlabSqueakyFieldViewTest_Parent__Annotations$2 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldViewTest_Parent = { "Parent", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0xc, 1, 3, 4, -1, -1, -1, 5 };
  return &_CoTouchlabSqueakyFieldViewTest_Parent;
}

@end

void CoTouchlabSqueakyFieldViewTest_Parent_init(CoTouchlabSqueakyFieldViewTest_Parent *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldViewTest_Parent *new_CoTouchlabSqueakyFieldViewTest_Parent_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldViewTest_Parent, init)
}

CoTouchlabSqueakyFieldViewTest_Parent *create_CoTouchlabSqueakyFieldViewTest_Parent_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldViewTest_Parent, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldViewTest_Parent__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", true, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldViewTest_Parent__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldViewTest_Parent__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldViewTest_Parent)

@implementation CoTouchlabSqueakyFieldViewTest_Child

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldViewTest_Child_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(asdf_);
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "I", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
    { "asdf_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 2 },
    { "parent_", "LCoTouchlabSqueakyFieldViewTest_Parent;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 3 },
  };
  static const void *ptrTable[] = { "id", (void *)&CoTouchlabSqueakyFieldViewTest_Child__Annotations$0, (void *)&CoTouchlabSqueakyFieldViewTest_Child__Annotations$1, (void *)&CoTouchlabSqueakyFieldViewTest_Child__Annotations$2, "LCoTouchlabSqueakyFieldViewTest;", (void *)&CoTouchlabSqueakyFieldViewTest_Child__Annotations$3 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldViewTest_Child = { "Child", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0xc, 1, 3, 4, -1, -1, -1, 5 };
  return &_CoTouchlabSqueakyFieldViewTest_Child;
}

@end

void CoTouchlabSqueakyFieldViewTest_Child_init(CoTouchlabSqueakyFieldViewTest_Child *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldViewTest_Child *new_CoTouchlabSqueakyFieldViewTest_Child_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldViewTest_Child, init)
}

CoTouchlabSqueakyFieldViewTest_Child *create_CoTouchlabSqueakyFieldViewTest_Child_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldViewTest_Child, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldViewTest_Child__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", true, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldViewTest_Child__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldViewTest_Child__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", true, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldViewTest_Child__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldViewTest_Child)

@implementation CoTouchlabSqueakyFieldViewTest_ParentChildView

- (instancetype)initWithInt:(jint)parentId
               withNSString:(NSString *)parentName
                    withInt:(jint)childId
               withNSString:(NSString *)asdf {
  CoTouchlabSqueakyFieldViewTest_ParentChildView_initWithInt_withNSString_withInt_withNSString_(self, parentId, parentName, childId, asdf);
  return self;
}

- (void)dealloc {
  RELEASE_(parentName_);
  RELEASE_(asdf_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:withNSString:withInt:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parentId_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, 1 },
    { "parentName_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, 2 },
    { "childId_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, 3 },
    { "asdf_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, 4 },
  };
  static const void *ptrTable[] = { "ILNSString;ILNSString;", (void *)&CoTouchlabSqueakyFieldViewTest_ParentChildView__Annotations$0, (void *)&CoTouchlabSqueakyFieldViewTest_ParentChildView__Annotations$1, (void *)&CoTouchlabSqueakyFieldViewTest_ParentChildView__Annotations$2, (void *)&CoTouchlabSqueakyFieldViewTest_ParentChildView__Annotations$3, "LCoTouchlabSqueakyFieldViewTest;", (void *)&CoTouchlabSqueakyFieldViewTest_ParentChildView__Annotations$4 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldViewTest_ParentChildView = { "ParentChildView", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0xc, 1, 4, 5, -1, -1, -1, 6 };
  return &_CoTouchlabSqueakyFieldViewTest_ParentChildView;
}

@end

void CoTouchlabSqueakyFieldViewTest_ParentChildView_initWithInt_withNSString_withInt_withNSString_(CoTouchlabSqueakyFieldViewTest_ParentChildView *self, jint parentId, NSString *parentName, jint childId, NSString *asdf) {
  NSObject_init(self);
  self->parentId_ = parentId;
  JreStrongAssign(&self->parentName_, parentName);
  self->childId_ = childId;
  JreStrongAssign(&self->asdf_, asdf);
}

CoTouchlabSqueakyFieldViewTest_ParentChildView *new_CoTouchlabSqueakyFieldViewTest_ParentChildView_initWithInt_withNSString_withInt_withNSString_(jint parentId, NSString *parentName, jint childId, NSString *asdf) {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldViewTest_ParentChildView, initWithInt_withNSString_withInt_withNSString_, parentId, parentName, childId, asdf)
}

CoTouchlabSqueakyFieldViewTest_ParentChildView *create_CoTouchlabSqueakyFieldViewTest_ParentChildView_initWithInt_withNSString_withInt_withNSString_(jint parentId, NSString *parentName, jint childId, NSString *asdf) {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldViewTest_ParentChildView, initWithInt_withNSString_withInt_withNSString_, parentId, parentName, childId, asdf)
}

IOSObjectArray *CoTouchlabSqueakyFieldViewTest_ParentChildView__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldViewTest_ParentChildView__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldViewTest_ParentChildView__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldViewTest_ParentChildView__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldViewTest_ParentChildView__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseView(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldViewTest_ParentChildView)
