//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/dao/DaoTest.java
//

#include "CoTouchlabDopplTestingDopplContextDelegateTestRunner.h"
#include "CoTouchlabSqueakyDaoCloseableIterator.h"
#include "CoTouchlabSqueakyDaoDao.h"
#include "CoTouchlabSqueakyDaoDaoHelper.h"
#include "CoTouchlabSqueakyDaoDaoTest.h"
#include "CoTouchlabSqueakyDaoQuery.h"
#include "CoTouchlabSqueakyFieldDataType.h"
#include "CoTouchlabSqueakyFieldDatabaseField.h"
#include "CoTouchlabSqueakyFieldTypesBaseTypeTestHide.h"
#include "CoTouchlabSqueakyFieldTypesVoidType.h"
#include "CoTouchlabSqueakyStmtWhere.h"
#include "CoTouchlabSqueakyTableDatabaseTable.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/annotation/Annotation.h"
#include "java/sql/SQLException.h"
#include "java/util/ArrayList.h"
#include "java/util/Date.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "org/junit/After.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/junit/runner/RunWith.h"

@interface CoTouchlabSqueakyDaoDaoTest () {
 @public
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *helper_;
}

- (CoTouchlabSqueakyDaoDaoTest_Foo *)createFooWithNSString:(NSString *)name
                                                   withInt:(jint)ival
                                                  withLong:(jlong)lval
                                          withJavaUtilDate:(JavaUtilDate *)aDate;

- (CoTouchlabSqueakyDaoDaoTest_Bar *)createBarWithInt:(jint)id_
                                         withNSString:(NSString *)name
                                          withBoolean:(jboolean)ifNotExists;

- (id<CoTouchlabSqueakyDaoDao>)getFooDao;

- (id<CoTouchlabSqueakyDaoDao>)getBarDao;

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)getHelper;

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoDaoTest, helper_, CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)

__attribute__((unused)) static CoTouchlabSqueakyDaoDaoTest_Foo *CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(CoTouchlabSqueakyDaoDaoTest *self, NSString *name, jint ival, jlong lval, JavaUtilDate *aDate);

__attribute__((unused)) static CoTouchlabSqueakyDaoDaoTest_Bar *CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(CoTouchlabSqueakyDaoDaoTest *self, jint id_, NSString *name, jboolean ifNotExists);

__attribute__((unused)) static id<CoTouchlabSqueakyDaoDao> CoTouchlabSqueakyDaoDaoTest_getFooDao(CoTouchlabSqueakyDaoDaoTest *self);

__attribute__((unused)) static id<CoTouchlabSqueakyDaoDao> CoTouchlabSqueakyDaoDaoTest_getBarDao(CoTouchlabSqueakyDaoDaoTest *self);

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *CoTouchlabSqueakyDaoDaoTest_getHelper(CoTouchlabSqueakyDaoDaoTest *self);

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$15();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$16();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$17();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$18();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$19();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$20();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$21();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$22();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$23();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$24();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$25();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$26();

@interface CoTouchlabSqueakyDaoDaoTest_1 : NSObject < CoTouchlabSqueakyDaoQuery >

- (instancetype)init;

- (NSString *)getFromStatementWithBoolean:(jboolean)joinsAllowed;

- (NSString *)getWhereStatementWithBoolean:(jboolean)joinsAllowed;

- (IOSObjectArray *)getParameters;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyDaoDaoTest_1)

__attribute__((unused)) static void CoTouchlabSqueakyDaoDaoTest_1_init(CoTouchlabSqueakyDaoDaoTest_1 *self);

__attribute__((unused)) static CoTouchlabSqueakyDaoDaoTest_1 *new_CoTouchlabSqueakyDaoDaoTest_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyDaoDaoTest_1 *create_CoTouchlabSqueakyDaoDaoTest_1_init();

@interface CoTouchlabSqueakyDaoDaoTest_2 : NSObject < CoTouchlabSqueakyDaoDao_DaoObserver > {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *val$changeCount_;
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0;

- (void)onChange;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyDaoDaoTest_2)

__attribute__((unused)) static void CoTouchlabSqueakyDaoDaoTest_2_initWithJavaUtilConcurrentAtomicAtomicInteger_(CoTouchlabSqueakyDaoDaoTest_2 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static CoTouchlabSqueakyDaoDaoTest_2 *new_CoTouchlabSqueakyDaoDaoTest_2_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyDaoDaoTest_2 *create_CoTouchlabSqueakyDaoDaoTest_2_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0);

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$4();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$5();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Bar__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Bar__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Bar__Annotations$2();

@implementation CoTouchlabSqueakyDaoDaoTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyDaoDaoTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)before {
  JreStrongAssign(&helper_, CoTouchlabSqueakyDaoDaoTest_getHelper(self));
}

- (void)after {
  [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) close];
}

- (void)testQueryForId {
  CoTouchlabSqueakyDaoDaoTest_Foo *foo = CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 123, 23523534234l, create_JavaUtilDate_init());
  OrgJunitAssert_assertEqualsWithLong_withLong_(((CoTouchlabSqueakyDaoDaoTest_Foo *) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getFooDao(self))) queryForIdWithId:JavaLangInteger_valueOfWithInt_(((CoTouchlabSqueakyDaoDaoTest_Foo *) nil_chk(foo))->id__)]))->lval_, foo->lval_);
}

- (void)testQueryForAll {
  CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 123, 23523534234l, create_JavaUtilDate_init());
  CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 123, 23523534234l, create_JavaUtilDate_init());
  CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 123, 23523534234l, create_JavaUtilDate_init());
  OrgJunitAssert_assertEqualsWithLong_withLong_([((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getFooDao(self))) queryForAll])) list])) size], 3);
}

- (void)testQueryForEq {
  CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 123, 23523534234l, create_JavaUtilDate_init());
  CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 444, 23523534255l, create_JavaUtilDate_init());
  CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 123, 23523534234l, create_JavaUtilDate_init());
}

- (void)testQueryForFieldValues {
  CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 123, 23523534234l, create_JavaUtilDate_init());
  CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 444, 23523534255l, create_JavaUtilDate_init());
  CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 123, 23523534255l, create_JavaUtilDate_init());
  id<JavaUtilMap> fieldValues = create_JavaUtilHashMap_init();
  [fieldValues putWithId:@"name" withId:@"asdf"];
  [fieldValues putWithId:@"ival" withId:JavaLangInteger_valueOfWithInt_(444)];
  OrgJunitAssert_assertEqualsWithLong_withLong_([((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getFooDao(self))) queryForFieldValuesWithJavaUtilMap:fieldValues])) list])) size], 1);
  [fieldValues removeWithId:@"ival"];
  [fieldValues putWithId:@"lval" withId:JavaLangLong_valueOfWithLong_(23523534255l)];
  OrgJunitAssert_assertEqualsWithLong_withLong_([((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getFooDao(self))) queryForFieldValuesWithJavaUtilMap:fieldValues])) list])) size], 2);
}

- (void)testQueryObject {
  CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 123, 23523534234l, create_JavaUtilDate_init());
  CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 444, 23523534255l, create_JavaUtilDate_init());
  CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 123, 23523534255l, create_JavaUtilDate_init());
  id<JavaUtilList> results = [((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getFooDao(self))) queryWithCoTouchlabSqueakyDaoQuery:create_CoTouchlabSqueakyDaoDaoTest_1_init()])) list];
  OrgJunitAssert_assertEqualsWithLong_withLong_([((id<JavaUtilList>) nil_chk(results)) size], 2);
}

- (void)testCreateIfNotExistsFail {
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 12, @"qwert", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 12, @"qwert", false);
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) countOf]);
}

- (void)testCreateIfNotExistsSkip {
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 12, @"qwert", true);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 12, @"qwert", true);
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) countOf]);
}

- (void)testCreateOrUpdate {
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) createOrUpdateWithId:create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(13, @"aaa")];
  OrgJunitAssert_assertEqualsWithLong_withLong_([((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) queryForEqWithNSString:@"name" withId:@"aaa"])) list])) size], 1);
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) createOrUpdateWithId:create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(13, @"bbb")];
  OrgJunitAssert_assertEqualsWithLong_withLong_([((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) queryForEqWithNSString:@"name" withId:@"aaa"])) list])) size], 0);
  OrgJunitAssert_assertEqualsWithLong_withLong_([((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) queryForEqWithNSString:@"name" withId:@"bbb"])) list])) size], 1);
}

- (void)testUpdate {
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) createWithId:create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(13, @"aaa")];
  OrgJunitAssert_assertEqualsWithLong_withLong_([((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) queryForEqWithNSString:@"name" withId:@"aaa"])) list])) size], 1);
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) updateWithId:create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(13, @"bbb")];
  OrgJunitAssert_assertEqualsWithLong_withLong_([((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) queryForEqWithNSString:@"name" withId:@"aaa"])) list])) size], 0);
  OrgJunitAssert_assertEqualsWithLong_withLong_([((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) queryForEqWithNSString:@"name" withId:@"bbb"])) list])) size], 1);
}

- (void)testUpdateId {
  CoTouchlabSqueakyDaoDaoTest_Bar *bar = create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(13, @"aaa");
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) createWithId:bar];
  OrgJunitAssert_assertEqualsWithLong_withLong_([((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) queryForEqWithNSString:@"id" withId:@"13"])) list])) size], 1);
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) updateIdWithId:bar withId:JavaLangInteger_valueOfWithInt_(14)];
  OrgJunitAssert_assertEqualsWithLong_withLong_([((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) queryForEqWithNSString:@"id" withId:@"13"])) list])) size], 0);
  OrgJunitAssert_assertEqualsWithLong_withLong_([((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) queryForEqWithNSString:@"id" withId:@"14"])) list])) size], 1);
}

- (void)testUpdateQuery {
  CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 123, 23523534234l, create_JavaUtilDate_init());
  CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 444, 23523534255l, create_JavaUtilDate_init());
  CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 123, 23523534255l, create_JavaUtilDate_init());
  id<CoTouchlabSqueakyDaoDao> fooDao = CoTouchlabSqueakyDaoDaoTest_getFooDao(self);
  CoTouchlabSqueakyStmtWhere *where = create_CoTouchlabSqueakyStmtWhere_initWithCoTouchlabSqueakyDaoDao_(fooDao);
  [where eqWithNSString:@"ival" withId:JavaLangInteger_valueOfWithInt_(123)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(2, [((id<CoTouchlabSqueakyDaoDao>) nil_chk(fooDao)) countOfWithCoTouchlabSqueakyDaoQuery:where]);
  id<JavaUtilMap> changes = create_JavaUtilHashMap_init();
  [changes putWithId:@"ival" withId:JavaLangInteger_valueOfWithInt_(444)];
  [fooDao updateWithCoTouchlabSqueakyDaoQuery:where withJavaUtilMap:changes];
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [fooDao countOfWithCoTouchlabSqueakyDaoQuery:where]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [fooDao countOfWithCoTouchlabSqueakyDaoQuery:[((CoTouchlabSqueakyStmtWhere *) nil_chk([where reset])) eqWithNSString:@"ival" withId:JavaLangInteger_valueOfWithInt_(444)]]);
}

- (void)testRefresh {
  CoTouchlabSqueakyDaoDaoTest_Foo *foo = CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, @"asdf", 123, 23523534234l, create_JavaUtilDate_init());
  CoTouchlabSqueakyDaoDaoTest_Foo *dbFoo = [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getFooDao(self))) queryForAll])) list])) getWithInt:0];
  ((CoTouchlabSqueakyDaoDaoTest_Foo *) nil_chk(dbFoo))->ival_ = 222;
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getFooDao(self))) updateWithId:dbFoo];
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getFooDao(self))) refreshWithId:foo];
  OrgJunitAssert_assertEqualsWithLong_withLong_(222, ((CoTouchlabSqueakyDaoDaoTest_Foo *) nil_chk(foo))->ival_);
}

- (void)testDelete {
  CoTouchlabSqueakyDaoDaoTest_Bar *bar = CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 123, @"gobyebye", false);
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) countOf]);
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) delete__WithId:bar];
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) countOf]);
}

- (void)testDeleteById {
  CoTouchlabSqueakyDaoDaoTest_Bar *bar = CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 123, @"gobyebye", false);
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) countOf]);
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) deleteByIdWithId:JavaLangInteger_valueOfWithInt_(123)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) countOf]);
}

- (void)testDeleteCollection {
  id<JavaUtilList> bars = create_JavaUtilArrayList_init();
  [bars addWithId:CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 12, @"a", false)];
  [bars addWithId:CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 13, @"b", false)];
  [bars addWithId:CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 14, @"c", false)];
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) countOf]);
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) delete__WithJavaUtilCollection:bars];
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) countOf]);
}

- (void)testDeleteQuery {
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 12, @"a", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 13, @"b", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 14, @"c", false);
  id<CoTouchlabSqueakyDaoDao> dao = CoTouchlabSqueakyDaoDaoTest_getBarDao(self);
  CoTouchlabSqueakyStmtWhere *where = create_CoTouchlabSqueakyStmtWhere_initWithCoTouchlabSqueakyDaoDao_(dao);
  [where geWithNSString:@"id" withId:JavaLangInteger_valueOfWithInt_(13)];
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(dao)) delete__WithCoTouchlabSqueakyDaoQuery:where];
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [dao countOf]);
}

- (void)testIterator {
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 12, @"a", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 13, @"b", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 14, @"c", false);
  id<CoTouchlabSqueakyDaoCloseableIterator> iterator = [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) iterator];
  CoTouchlabSqueakyDaoDaoTest_Bar *bar12 = [((id<CoTouchlabSqueakyDaoCloseableIterator>) nil_chk(iterator)) next];
  OrgJunitAssert_assertEqualsWithLong_withLong_(12, ((CoTouchlabSqueakyDaoDaoTest_Bar *) nil_chk(bar12))->id__);
  CoTouchlabSqueakyDaoDaoTest_Bar *bar13 = [iterator next];
  OrgJunitAssert_assertEqualsWithLong_withLong_(13, ((CoTouchlabSqueakyDaoDaoTest_Bar *) nil_chk(bar13))->id__);
  CoTouchlabSqueakyDaoDaoTest_Bar *bar14 = [iterator next];
  OrgJunitAssert_assertEqualsWithLong_withLong_(14, ((CoTouchlabSqueakyDaoDaoTest_Bar *) nil_chk(bar14))->id__);
  [iterator closeQuietly];
}

- (void)testIteratorOtherMethods {
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 12, @"a", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 13, @"b", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 14, @"c", false);
  id<CoTouchlabSqueakyDaoCloseableIterator> iterator = [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) iterator];
  CoTouchlabSqueakyDaoDaoTest_Bar *bar12 = [((id<CoTouchlabSqueakyDaoCloseableIterator>) nil_chk(iterator)) nextThrow];
  OrgJunitAssert_assertEqualsWithLong_withLong_(12, ((CoTouchlabSqueakyDaoDaoTest_Bar *) nil_chk(bar12))->id__);
  CoTouchlabSqueakyDaoDaoTest_Bar *bar12a = [iterator current];
  OrgJunitAssert_assertEqualsWithLong_withLong_(bar12->id__, ((CoTouchlabSqueakyDaoDaoTest_Bar *) nil_chk(bar12a))->id__);
  CoTouchlabSqueakyDaoDaoTest_Bar *bar13 = [iterator nextThrow];
  OrgJunitAssert_assertEqualsWithLong_withLong_(13, ((CoTouchlabSqueakyDaoDaoTest_Bar *) nil_chk(bar13))->id__);
  jint previousId = ((CoTouchlabSqueakyDaoDaoTest_Bar *) nil_chk([iterator previous]))->id__;
  OrgJunitAssert_assertEqualsWithLong_withLong_(12, previousId);
  OrgJunitAssert_assertNullWithId_([iterator previous]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(((CoTouchlabSqueakyDaoDaoTest_Bar *) nil_chk([iterator moveRelativeWithInt:2]))->id__, 13);
  [iterator moveToNext];
  OrgJunitAssert_assertEqualsWithLong_withLong_(((CoTouchlabSqueakyDaoDaoTest_Bar *) nil_chk([iterator current]))->id__, 14);
  [iterator closeQuietly];
}

- (void)testIteratorQuery {
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 12, @"a", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 13, @"b", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 14, @"c", false);
  CoTouchlabSqueakyStmtWhere *where = create_CoTouchlabSqueakyStmtWhere_initWithCoTouchlabSqueakyDaoDao_(CoTouchlabSqueakyDaoDaoTest_getBarDao(self));
  [where inWithNSString:@"id" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(12), JavaLangInteger_valueOfWithInt_(14) } count:2 type:NSObject_class_()]];
  id<CoTouchlabSqueakyDaoCloseableIterator> iterator = [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) iteratorWithCoTouchlabSqueakyDaoQuery:where];
  CoTouchlabSqueakyDaoDaoTest_Bar *bar12 = [((id<CoTouchlabSqueakyDaoCloseableIterator>) nil_chk(iterator)) next];
  OrgJunitAssert_assertEqualsWithLong_withLong_(12, ((CoTouchlabSqueakyDaoDaoTest_Bar *) nil_chk(bar12))->id__);
  CoTouchlabSqueakyDaoDaoTest_Bar *bar14 = [iterator next];
  OrgJunitAssert_assertEqualsWithLong_withLong_(14, ((CoTouchlabSqueakyDaoDaoTest_Bar *) nil_chk(bar14))->id__);
  OrgJunitAssert_assertFalseWithBoolean_([iterator hasNext]);
  [iterator closeQuietly];
}

- (void)testQueryRawValue {
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 12, @"a", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 13, @"a", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 14, @"c", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 15, @"c", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 16, @"c", false);
  jlong sum = [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) queryRawValueWithNSString:@"select sum(id) from bar where name = ?" withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ @"a" } count:1 type:NSString_class_()]];
  OrgJunitAssert_assertEqualsWithLong_withLong_(25, sum);
}

- (void)testCountOf {
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 12, @"a", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 13, @"a", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 14, @"c", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 15, @"c", false);
  CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, 16, @"c", false);
  OrgJunitAssert_assertEqualsWithLong_withLong_(5, [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) countOf]);
  CoTouchlabSqueakyStmtWhere *where = create_CoTouchlabSqueakyStmtWhere_initWithCoTouchlabSqueakyDaoDao_(CoTouchlabSqueakyDaoDaoTest_getBarDao(self));
  [where eqWithNSString:@"name" withId:@"c"];
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) countOfWithCoTouchlabSqueakyDaoQuery:where]);
}

- (void)testObserver {
  JavaUtilConcurrentAtomicAtomicInteger *changeCount = create_JavaUtilConcurrentAtomicAtomicInteger_init();
  id<CoTouchlabSqueakyDaoDao_DaoObserver> observer = create_CoTouchlabSqueakyDaoDaoTest_2_initWithJavaUtilConcurrentAtomicAtomicInteger_(changeCount);
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) registerObserverWithCoTouchlabSqueakyDaoDao_DaoObserver:observer];
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) createWithId:create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(12, @"asdf")];
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) createWithId:create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(13, @"asdf")];
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) updateWithId:create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(13, @"qwert")];
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [changeCount get]);
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) unregisterObserverWithCoTouchlabSqueakyDaoDao_DaoObserver:observer];
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) createWithId:create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(14, @"asdf")];
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) createWithId:create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(15, @"asdf")];
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) updateWithId:create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(15, @"qwert")];
  OrgJunitAssert_assertEqualsWithLong_withLong_(3, [changeCount get]);
}

- (void)testAll {
  id<CoTouchlabSqueakyDaoDao> barDao = CoTouchlabSqueakyDaoDaoTest_getBarDao(self);
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(barDao)) createWithId:create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(12, @"asdf")];
  [barDao createWithId:create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(13, @"asdf")];
  OrgJunitAssert_assertEqualsWithLong_withLong_(2, [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([barDao queryWithCoTouchlabSqueakyDaoQuery:[barDao all]])) list])) size]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([barDao queryForEqWithNSString:@"name" withId:@"quert"])) list])) size]);
  [barDao updateWithCoTouchlabSqueakyDaoQuery:[barDao all] withJavaUtilMap:[((CoTouchlabSqueakyDaoDaoHelper_ValBuilder *) nil_chk([((CoTouchlabSqueakyDaoDaoHelper_ValBuilder *) nil_chk(CoTouchlabSqueakyDaoDaoHelper_vals())) addWithNSString:@"name" withId:@"quert"])) build]];
  OrgJunitAssert_assertEqualsWithLong_withLong_(2, [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([barDao queryForEqWithNSString:@"name" withId:@"quert"])) list])) size]);
}

- (void)testQueryModifiers {
  id<CoTouchlabSqueakyDaoDao> barDao = CoTouchlabSqueakyDaoDaoTest_getBarDao(self);
  for (jint i = 0; i < 50; i++) {
    [((id<CoTouchlabSqueakyDaoDao>) nil_chk(barDao)) createWithId:create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(i, @"asdf")];
  }
  id<JavaUtilList> firstList = [((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(barDao)) queryForAll])) limitWithJavaLangInteger:JavaLangInteger_valueOfWithInt_(20)])) list];
  OrgJunitAssert_assertEqualsWithLong_withLong_(20, [((id<JavaUtilList>) nil_chk(firstList)) size]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, ((CoTouchlabSqueakyDaoDaoTest_Bar *) nil_chk([firstList getWithInt:0]))->id__);
  OrgJunitAssert_assertEqualsWithLong_withLong_(19, ((CoTouchlabSqueakyDaoDaoTest_Bar *) nil_chk([firstList getWithInt:[firstList size] - 1]))->id__);
  id<JavaUtilList> offsetList = [((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([barDao queryForAll])) offsetWithJavaLangInteger:JavaLangInteger_valueOfWithInt_(12)])) limitWithJavaLangInteger:JavaLangInteger_valueOfWithInt_(20)])) list];
  OrgJunitAssert_assertEqualsWithLong_withLong_(20, [((id<JavaUtilList>) nil_chk(offsetList)) size]);
  OrgJunitAssert_assertEqualsWithLong_withLong_(12, ((CoTouchlabSqueakyDaoDaoTest_Bar *) nil_chk([offsetList getWithInt:0]))->id__);
  OrgJunitAssert_assertEqualsWithLong_withLong_(31, ((CoTouchlabSqueakyDaoDaoTest_Bar *) nil_chk([offsetList getWithInt:[firstList size] - 1]))->id__);
  id<JavaUtilList> reverseList = [((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([barDao queryForAll])) orderByWithNSString:@"id desc"])) limitWithJavaLangInteger:JavaLangInteger_valueOfWithInt_(20)])) list];
  OrgJunitAssert_assertEqualsWithLong_withLong_(49, ((CoTouchlabSqueakyDaoDaoTest_Bar *) nil_chk([((id<JavaUtilList>) nil_chk(reverseList)) getWithInt:0]))->id__);
  [barDao delete__WithCoTouchlabSqueakyDaoQuery:[barDao all]];
  OrgJunitAssert_assertEqualsWithLong_withLong_(0, [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([barDao queryForAll])) list])) size]);
}

- (CoTouchlabSqueakyDaoDaoTest_Foo *)createFooWithNSString:(NSString *)name
                                                   withInt:(jint)ival
                                                  withLong:(jlong)lval
                                          withJavaUtilDate:(JavaUtilDate *)aDate {
  return CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(self, name, ival, lval, aDate);
}

- (CoTouchlabSqueakyDaoDaoTest_Bar *)createBarWithInt:(jint)id_
                                         withNSString:(NSString *)name
                                          withBoolean:(jboolean)ifNotExists {
  return CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(self, id_, name, ifNotExists);
}

- (id<CoTouchlabSqueakyDaoDao>)getFooDao {
  return CoTouchlabSqueakyDaoDaoTest_getFooDao(self);
}

- (id<CoTouchlabSqueakyDaoDao>)getBarDao {
  return CoTouchlabSqueakyDaoDaoTest_getBarDao(self);
}

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)getHelper {
  return CoTouchlabSqueakyDaoDaoTest_getHelper(self);
}

- (void)dealloc {
  RELEASE_(helper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 6, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 7, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 12, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 13, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 14, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 15, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 16, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 17, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 18, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 19, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 20, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 21, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 22, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 23, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 24, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 25, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 26, -1 },
    { NULL, "LCoTouchlabSqueakyDaoDaoTest_Foo;", 0x2, 27, 28, 2, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoDaoTest_Bar;", 0x2, 29, 30, 2, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoDao;", 0x2, -1, -1, -1, 31, -1, -1 },
    { NULL, "LCoTouchlabSqueakyDaoDao;", 0x2, -1, -1, -1, 32, -1, -1 },
    { NULL, "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(before);
  methods[2].selector = @selector(after);
  methods[3].selector = @selector(testQueryForId);
  methods[4].selector = @selector(testQueryForAll);
  methods[5].selector = @selector(testQueryForEq);
  methods[6].selector = @selector(testQueryForFieldValues);
  methods[7].selector = @selector(testQueryObject);
  methods[8].selector = @selector(testCreateIfNotExistsFail);
  methods[9].selector = @selector(testCreateIfNotExistsSkip);
  methods[10].selector = @selector(testCreateOrUpdate);
  methods[11].selector = @selector(testUpdate);
  methods[12].selector = @selector(testUpdateId);
  methods[13].selector = @selector(testUpdateQuery);
  methods[14].selector = @selector(testRefresh);
  methods[15].selector = @selector(testDelete);
  methods[16].selector = @selector(testDeleteById);
  methods[17].selector = @selector(testDeleteCollection);
  methods[18].selector = @selector(testDeleteQuery);
  methods[19].selector = @selector(testIterator);
  methods[20].selector = @selector(testIteratorOtherMethods);
  methods[21].selector = @selector(testIteratorQuery);
  methods[22].selector = @selector(testQueryRawValue);
  methods[23].selector = @selector(testCountOf);
  methods[24].selector = @selector(testObserver);
  methods[25].selector = @selector(testAll);
  methods[26].selector = @selector(testQueryModifiers);
  methods[27].selector = @selector(createFooWithNSString:withInt:withLong:withJavaUtilDate:);
  methods[28].selector = @selector(createBarWithInt:withNSString:withBoolean:);
  methods[29].selector = @selector(getFooDao);
  methods[30].selector = @selector(getBarDao);
  methods[31].selector = @selector(getHelper);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "helper_", "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$0, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$1, "LJavaSqlSQLException;", (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$2, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$3, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$4, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$5, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$6, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$7, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$8, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$9, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$10, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$11, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$12, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$13, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$14, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$15, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$16, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$17, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$18, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$19, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$20, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$21, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$22, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$23, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$24, (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$25, "createFoo", "LNSString;IJLJavaUtilDate;", "createBar", "ILNSString;Z", "()Lco/touchlab/squeaky/dao/Dao<Lco/touchlab/squeaky/dao/DaoTest$Foo;>;", "()Lco/touchlab/squeaky/dao/Dao<Lco/touchlab/squeaky/dao/DaoTest$Bar;>;", "LCoTouchlabSqueakyDaoDaoTest_Foo;LCoTouchlabSqueakyDaoDaoTest_Bar;", (void *)&CoTouchlabSqueakyDaoDaoTest__Annotations$26 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoDaoTest = { "DaoTest", "co.touchlab.squeaky.dao", ptrTable, methods, fields, 7, 0x1, 32, 1, -1, 33, -1, -1, 34 };
  return &_CoTouchlabSqueakyDaoDaoTest;
}

@end

void CoTouchlabSqueakyDaoDaoTest_init(CoTouchlabSqueakyDaoDaoTest *self) {
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_init(self);
}

CoTouchlabSqueakyDaoDaoTest *new_CoTouchlabSqueakyDaoDaoTest_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyDaoDaoTest, init)
}

CoTouchlabSqueakyDaoDaoTest *create_CoTouchlabSqueakyDaoDaoTest_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyDaoDaoTest, init)
}

CoTouchlabSqueakyDaoDaoTest_Foo *CoTouchlabSqueakyDaoDaoTest_createFooWithNSString_withInt_withLong_withJavaUtilDate_(CoTouchlabSqueakyDaoDaoTest *self, NSString *name, jint ival, jlong lval, JavaUtilDate *aDate) {
  CoTouchlabSqueakyDaoDaoTest_Foo *foo = create_CoTouchlabSqueakyDaoDaoTest_Foo_init();
  JreStrongAssign(&foo->name_, name);
  foo->ival_ = ival;
  foo->lval_ = lval;
  JreStrongAssign(&foo->sDate_, aDate);
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getFooDao(self))) createWithId:foo];
  return foo;
}

CoTouchlabSqueakyDaoDaoTest_Bar *CoTouchlabSqueakyDaoDaoTest_createBarWithInt_withNSString_withBoolean_(CoTouchlabSqueakyDaoDaoTest *self, jint id_, NSString *name, jboolean ifNotExists) {
  CoTouchlabSqueakyDaoDaoTest_Bar *bar = create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(id_, name);
  if (ifNotExists) [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) createIfNotExistsWithId:bar];
  else [((id<CoTouchlabSqueakyDaoDao>) nil_chk(CoTouchlabSqueakyDaoDaoTest_getBarDao(self))) createWithId:bar];
  return bar;
}

id<CoTouchlabSqueakyDaoDao> CoTouchlabSqueakyDaoDaoTest_getFooDao(CoTouchlabSqueakyDaoDaoTest *self) {
  return [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(self->helper_)) getDaoWithIOSClass:CoTouchlabSqueakyDaoDaoTest_Foo_class_()];
}

id<CoTouchlabSqueakyDaoDao> CoTouchlabSqueakyDaoDaoTest_getBarDao(CoTouchlabSqueakyDaoDaoTest *self) {
  return [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(self->helper_)) getDaoWithIOSClass:CoTouchlabSqueakyDaoDaoTest_Bar_class_()];
}

CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *CoTouchlabSqueakyDaoDaoTest_getHelper(CoTouchlabSqueakyDaoDaoTest *self) {
  return [self createHelperWithIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ CoTouchlabSqueakyDaoDaoTest_Foo_class_(), CoTouchlabSqueakyDaoDaoTest_Bar_class_() } count:2 type:IOSClass_class_()]];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitAfter() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(JavaSqlSQLException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$16() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$17() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$18() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$19() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$20() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$21() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$22() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$23() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$24() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$25() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest__Annotations$26() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(CoTouchlabDopplTestingDopplContextDelegateTestRunner_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyDaoDaoTest)

@implementation CoTouchlabSqueakyDaoDaoTest_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyDaoDaoTest_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getFromStatementWithBoolean:(jboolean)joinsAllowed {
  return @"foo t";
}

- (NSString *)getWhereStatementWithBoolean:(jboolean)joinsAllowed {
  return @"t.ival = ?";
}

- (IOSObjectArray *)getParameters {
  return [IOSObjectArray arrayWithObjects:(id[]){ @"123" } count:1 type:NSString_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 1, 2, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getFromStatementWithBoolean:);
  methods[2].selector = @selector(getWhereStatementWithBoolean:);
  methods[3].selector = @selector(getParameters);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getFromStatement", "Z", "LJavaSqlSQLException;", "getWhereStatement", "LCoTouchlabSqueakyDaoDaoTest;", "testQueryObject" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoDaoTest_1 = { "", "co.touchlab.squeaky.dao", ptrTable, methods, NULL, 7, 0x8018, 4, 0, 4, -1, 5, -1, -1 };
  return &_CoTouchlabSqueakyDaoDaoTest_1;
}

@end

void CoTouchlabSqueakyDaoDaoTest_1_init(CoTouchlabSqueakyDaoDaoTest_1 *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyDaoDaoTest_1 *new_CoTouchlabSqueakyDaoDaoTest_1_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyDaoDaoTest_1, init)
}

CoTouchlabSqueakyDaoDaoTest_1 *create_CoTouchlabSqueakyDaoDaoTest_1_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyDaoDaoTest_1, init)
}

@implementation CoTouchlabSqueakyDaoDaoTest_2

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicInteger:(JavaUtilConcurrentAtomicAtomicInteger *)capture$0 {
  CoTouchlabSqueakyDaoDaoTest_2_initWithJavaUtilConcurrentAtomicAtomicInteger_(self, capture$0);
  return self;
}

- (void)onChange {
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(val$changeCount_)) addAndGetWithInt:1];
}

- (void)dealloc {
  RELEASE_(val$changeCount_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilConcurrentAtomicAtomicInteger:);
  methods[1].selector = @selector(onChange);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$changeCount_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LCoTouchlabSqueakyDaoDaoTest;", "testObserver" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoDaoTest_2 = { "", "co.touchlab.squeaky.dao", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
  return &_CoTouchlabSqueakyDaoDaoTest_2;
}

@end

void CoTouchlabSqueakyDaoDaoTest_2_initWithJavaUtilConcurrentAtomicAtomicInteger_(CoTouchlabSqueakyDaoDaoTest_2 *self, JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  JreStrongAssign(&self->val$changeCount_, capture$0);
  NSObject_init(self);
}

CoTouchlabSqueakyDaoDaoTest_2 *new_CoTouchlabSqueakyDaoDaoTest_2_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyDaoDaoTest_2, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

CoTouchlabSqueakyDaoDaoTest_2 *create_CoTouchlabSqueakyDaoDaoTest_2_initWithJavaUtilConcurrentAtomicAtomicInteger_(JavaUtilConcurrentAtomicAtomicInteger *capture$0) {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyDaoDaoTest_2, initWithJavaUtilConcurrentAtomicAtomicInteger_, capture$0)
}

@implementation CoTouchlabSqueakyDaoDaoTest_Foo

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyDaoDaoTest_Foo_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(sDate_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "I", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 2 },
    { "ival_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, 3 },
    { "lval_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, 4 },
    { "sDate_", "LJavaUtilDate;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 5 },
  };
  static const void *ptrTable[] = { "id", (void *)&CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$0, (void *)&CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$1, (void *)&CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$2, (void *)&CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$3, (void *)&CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$4, "LCoTouchlabSqueakyDaoDaoTest;", (void *)&CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$5 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoDaoTest_Foo = { "Foo", "co.touchlab.squeaky.dao", ptrTable, methods, fields, 7, 0xc, 1, 5, 6, -1, -1, -1, 7 };
  return &_CoTouchlabSqueakyDaoDaoTest_Foo;
}

@end

void CoTouchlabSqueakyDaoDaoTest_Foo_init(CoTouchlabSqueakyDaoDaoTest_Foo *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyDaoDaoTest_Foo *new_CoTouchlabSqueakyDaoDaoTest_Foo_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyDaoDaoTest_Foo, init)
}

CoTouchlabSqueakyDaoDaoTest_Foo *create_CoTouchlabSqueakyDaoDaoTest_Foo_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyDaoDaoTest_Foo, init)
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", true, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, DATE_STRING), @"__ormlite__ no default value string was specified", false, false, @"MM/dd/yyyy HH:mm", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Foo__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyDaoDaoTest_Foo)

@implementation CoTouchlabSqueakyDaoDaoTest_Bar

- (instancetype)initWithInt:(jint)id_
               withNSString:(NSString *)name {
  CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(self, id_, name);
  return self;
}

- (void)dealloc {
  RELEASE_(name_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "I", .constantValue.asLong = 0, 0x10, 1, -1, -1, 2 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, 3 },
  };
  static const void *ptrTable[] = { "ILNSString;", "id", (void *)&CoTouchlabSqueakyDaoDaoTest_Bar__Annotations$0, (void *)&CoTouchlabSqueakyDaoDaoTest_Bar__Annotations$1, "LCoTouchlabSqueakyDaoDaoTest;", (void *)&CoTouchlabSqueakyDaoDaoTest_Bar__Annotations$2 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoDaoTest_Bar = { "Bar", "co.touchlab.squeaky.dao", ptrTable, methods, fields, 7, 0xc, 1, 2, 4, -1, -1, -1, 5 };
  return &_CoTouchlabSqueakyDaoDaoTest_Bar;
}

@end

void CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(CoTouchlabSqueakyDaoDaoTest_Bar *self, jint id_, NSString *name) {
  NSObject_init(self);
  self->id__ = id_;
  JreStrongAssign(&self->name_, name);
}

CoTouchlabSqueakyDaoDaoTest_Bar *new_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(jint id_, NSString *name) {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyDaoDaoTest_Bar, initWithInt_withNSString_, id_, name)
}

CoTouchlabSqueakyDaoDaoTest_Bar *create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(jint id_, NSString *name) {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyDaoDaoTest_Bar, initWithInt_withNSString_, id_, name)
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Bar__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, true, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Bar__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyDaoDaoTest_Bar__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyDaoDaoTest_Bar)
