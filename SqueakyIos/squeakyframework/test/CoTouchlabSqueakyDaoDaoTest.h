//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/dao/DaoTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabSqueakyDaoDaoTest")
#ifdef RESTRICT_CoTouchlabSqueakyDaoDaoTest
#define INCLUDE_ALL_CoTouchlabSqueakyDaoDaoTest 0
#else
#define INCLUDE_ALL_CoTouchlabSqueakyDaoDaoTest 1
#endif
#undef RESTRICT_CoTouchlabSqueakyDaoDaoTest

#if !defined (CoTouchlabSqueakyDaoDaoTest_) && (INCLUDE_ALL_CoTouchlabSqueakyDaoDaoTest || defined(INCLUDE_CoTouchlabSqueakyDaoDaoTest))
#define CoTouchlabSqueakyDaoDaoTest_

#define RESTRICT_CoTouchlabSqueakyFieldTypesBaseTypeTestHide 1
#define INCLUDE_CoTouchlabSqueakyFieldTypesBaseTypeTestHide 1
#include "CoTouchlabSqueakyFieldTypesBaseTypeTestHide.h"

@interface CoTouchlabSqueakyDaoDaoTest : CoTouchlabSqueakyFieldTypesBaseTypeTestHide

#pragma mark Public

- (instancetype)init;

- (void)after;

- (void)before;

- (void)testAll;

- (void)testCountOf;

- (void)testCreateIfNotExistsFail;

- (void)testCreateIfNotExistsSkip;

- (void)testCreateOrUpdate;

- (void)testDelete;

- (void)testDeleteById;

- (void)testDeleteCollection;

- (void)testDeleteQuery;

- (void)testIterator;

- (void)testIteratorOtherMethods;

- (void)testIteratorQuery;

- (void)testObserver;

- (void)testQueryForAll;

- (void)testQueryForEq;

- (void)testQueryForFieldValues;

- (void)testQueryForId;

- (void)testQueryModifiers;

- (void)testQueryObject;

- (void)testQueryRawValue;

- (void)testRefresh;

- (void)testUpdate;

- (void)testUpdateId;

- (void)testUpdateQuery;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyDaoDaoTest)

FOUNDATION_EXPORT void CoTouchlabSqueakyDaoDaoTest_init(CoTouchlabSqueakyDaoDaoTest *self);

FOUNDATION_EXPORT CoTouchlabSqueakyDaoDaoTest *new_CoTouchlabSqueakyDaoDaoTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyDaoDaoTest *create_CoTouchlabSqueakyDaoDaoTest_init();

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyDaoDaoTest)

#endif

#if !defined (CoTouchlabSqueakyDaoDaoTest_Foo_) && (INCLUDE_ALL_CoTouchlabSqueakyDaoDaoTest || defined(INCLUDE_CoTouchlabSqueakyDaoDaoTest_Foo))
#define CoTouchlabSqueakyDaoDaoTest_Foo_

@class JavaUtilDate;

@interface CoTouchlabSqueakyDaoDaoTest_Foo : NSObject {
 @public
  jint id__;
  NSString *name_;
  jint ival_;
  jlong lval_;
  JavaUtilDate *sDate_;
}

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyDaoDaoTest_Foo)

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoDaoTest_Foo, name_, NSString *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoDaoTest_Foo, sDate_, JavaUtilDate *)

FOUNDATION_EXPORT void CoTouchlabSqueakyDaoDaoTest_Foo_init(CoTouchlabSqueakyDaoDaoTest_Foo *self);

FOUNDATION_EXPORT CoTouchlabSqueakyDaoDaoTest_Foo *new_CoTouchlabSqueakyDaoDaoTest_Foo_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyDaoDaoTest_Foo *create_CoTouchlabSqueakyDaoDaoTest_Foo_init();

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyDaoDaoTest_Foo)

#endif

#if !defined (CoTouchlabSqueakyDaoDaoTest_Bar_) && (INCLUDE_ALL_CoTouchlabSqueakyDaoDaoTest || defined(INCLUDE_CoTouchlabSqueakyDaoDaoTest_Bar))
#define CoTouchlabSqueakyDaoDaoTest_Bar_

@interface CoTouchlabSqueakyDaoDaoTest_Bar : NSObject {
 @public
  jint id__;
  NSString *name_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)id_
               withNSString:(NSString *)name;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyDaoDaoTest_Bar)

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoDaoTest_Bar, name_, NSString *)

FOUNDATION_EXPORT void CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(CoTouchlabSqueakyDaoDaoTest_Bar *self, jint id_, NSString *name);

FOUNDATION_EXPORT CoTouchlabSqueakyDaoDaoTest_Bar *new_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(jint id_, NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyDaoDaoTest_Bar *create_CoTouchlabSqueakyDaoDaoTest_Bar_initWithInt_withNSString_(jint id_, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyDaoDaoTest_Bar)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabSqueakyDaoDaoTest")
