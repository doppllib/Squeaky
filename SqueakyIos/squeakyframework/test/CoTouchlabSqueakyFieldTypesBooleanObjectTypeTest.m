//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/field/types/BooleanObjectTypeTest.java
//

#include "CoTouchlabDopplTestingDopplContextDelegateTestRunner.h"
#include "CoTouchlabSqueakyDaoDao.h"
#include "CoTouchlabSqueakyFieldDataType.h"
#include "CoTouchlabSqueakyFieldDatabaseField.h"
#include "CoTouchlabSqueakyFieldTypesBaseTypeTestHide.h"
#include "CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest.h"
#include "CoTouchlabSqueakyFieldTypesVoidType.h"
#include "CoTouchlabSqueakyTableDatabaseTable.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgApacheCommonsLang3BuilderEqualsBuilder.h"
#include "java/lang/Boolean.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/List.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"
#include "org/junit/runner/RunWith.h"

inline NSString *CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_get_BOOLEAN_COLUMN();
static NSString *CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_BOOLEAN_COLUMN = @"bool";
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest, BOOLEAN_COLUMN, NSString *)

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj__Annotations$1();

@implementation CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)testBooleanObj {
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *helper = [self createHelperWithIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj_class_() } count:1 type:IOSClass_class_()]];
  IOSClass *clazz = CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj_class_();
  id<CoTouchlabSqueakyDaoDao> dao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper)) getDaoWithIOSClass:clazz];
  JavaLangBoolean *val = JavaLangBoolean_valueOfWithBoolean_(true);
  NSString *valStr = [val description];
  CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj *foo = create_CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj_init();
  JreStrongAssign(&foo->bool__, val);
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(dao)) createWithId:foo];
  OrgJunitAssert_assertTrueWithBoolean_(OrgApacheCommonsLang3BuilderEqualsBuilder_reflectionEqualsWithId_withId_withNSStringArray_(foo, [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([dao queryForAll])) list])) getWithInt:0], [IOSObjectArray arrayWithLength:0 type:NSString_class_()]));
  [helper close];
}

- (void)testBooleanObjNull {
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *helper = [self createHelperWithIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj_class_() } count:1 type:IOSClass_class_()]];
  IOSClass *clazz = CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj_class_();
  id<CoTouchlabSqueakyDaoDao> dao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper)) getDaoWithIOSClass:clazz];
  CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj *foo = create_CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj_init();
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(dao)) createWithId:foo];
  OrgJunitAssert_assertTrueWithBoolean_(OrgApacheCommonsLang3BuilderEqualsBuilder_reflectionEqualsWithId_withId_withNSStringArray_(foo, [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([dao queryForAll])) list])) getWithInt:0], [IOSObjectArray arrayWithLength:0 type:NSString_class_()]));
  [helper close];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 2, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testBooleanObj);
  methods[2].selector = @selector(testBooleanObjNull);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BOOLEAN_COLUMN", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", (void *)&CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest__Annotations$0, (void *)&CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest__Annotations$1, &CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_BOOLEAN_COLUMN, "LCoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj;", (void *)&CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest__Annotations$2 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest = { "BooleanObjectTypeTest", "co.touchlab.squeaky.field.types", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, 4, -1, -1, 5 };
  return &_CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest;
}

@end

void CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_init(CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest *self) {
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_init(self);
}

CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest *new_CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest, init)
}

CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest *create_CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(CoTouchlabDopplTestingDopplContextDelegateTestRunner_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest)

@implementation CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(bool__);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bool__", "LJavaLangBoolean;", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
  };
  static const void *ptrTable[] = { "bool", (void *)&CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj__Annotations$0, "LCoTouchlabSqueakyFieldTypesBooleanObjectTypeTest;", (void *)&CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj__Annotations$1 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj = { "LocalBooleanObj", "co.touchlab.squeaky.field.types", ptrTable, methods, fields, 7, 0xc, 1, 1, 2, -1, -1, -1, 3 };
  return &_CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj;
}

@end

void CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj_init(CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj *new_CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj, init)
}

CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj *create_CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"bool", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBooleanObjectTypeTest_LocalBooleanObj)
