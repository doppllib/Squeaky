//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/field/types/BigIntegerTypeTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest")
#ifdef RESTRICT_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest
#define INCLUDE_ALL_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest 0
#else
#define INCLUDE_ALL_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest 1
#endif
#undef RESTRICT_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest

#if !defined (CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_) && (INCLUDE_ALL_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest || defined(INCLUDE_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest))
#define CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_

#define RESTRICT_CoTouchlabSqueakyFieldTypesBaseTypeTestHide 1
#define INCLUDE_CoTouchlabSqueakyFieldTypesBaseTypeTestHide 1
#include "CoTouchlabSqueakyFieldTypesBaseTypeTestHide.h"

@interface CoTouchlabSqueakyFieldTypesBigIntegerTypeTest : CoTouchlabSqueakyFieldTypesBaseTypeTestHide

#pragma mark Public

- (instancetype)init;

- (void)after;

- (void)before;

- (void)testBigInteger;

- (void)testBigIntegerInvalidDbValue;

- (void)testBigIntegerNull;

- (void)testCoverage;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyFieldTypesBigIntegerTypeTest)

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_init(CoTouchlabSqueakyFieldTypesBigIntegerTypeTest *self);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesBigIntegerTypeTest *new_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesBigIntegerTypeTest *create_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_init();

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesBigIntegerTypeTest)

#endif

#if !defined (CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_LocalBigInteger_) && (INCLUDE_ALL_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest || defined(INCLUDE_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_LocalBigInteger))
#define CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_LocalBigInteger_

@class JavaMathBigInteger;

@interface CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_LocalBigInteger : NSObject {
 @public
  JavaMathBigInteger *bigInteger_;
}

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_LocalBigInteger)

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_LocalBigInteger, bigInteger_, JavaMathBigInteger *)

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_LocalBigInteger_init(CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_LocalBigInteger *self);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_LocalBigInteger *new_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_LocalBigInteger_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_LocalBigInteger *create_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_LocalBigInteger_init();

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_LocalBigInteger)

#endif

#if !defined (CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_NotBigInteger_) && (INCLUDE_ALL_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest || defined(INCLUDE_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_NotBigInteger))
#define CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_NotBigInteger_

@interface CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_NotBigInteger : NSObject {
 @public
  NSString *bigInteger_;
}

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_NotBigInteger)

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_NotBigInteger, bigInteger_, NSString *)

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_NotBigInteger_init(CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_NotBigInteger *self);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_NotBigInteger *new_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_NotBigInteger_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_NotBigInteger *create_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_NotBigInteger_init();

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_NotBigInteger)

#endif

#if !defined (CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_BigIntegerBadDefault_) && (INCLUDE_ALL_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest || defined(INCLUDE_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_BigIntegerBadDefault))
#define CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_BigIntegerBadDefault_

@class JavaMathBigInteger;

@interface CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_BigIntegerBadDefault : NSObject {
 @public
  JavaMathBigInteger *bigInteger_;
}

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_BigIntegerBadDefault)

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_BigIntegerBadDefault, bigInteger_, JavaMathBigInteger *)

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_BigIntegerBadDefault_init(CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_BigIntegerBadDefault *self);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_BigIntegerBadDefault *new_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_BigIntegerBadDefault_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_BigIntegerBadDefault *create_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_BigIntegerBadDefault_init();

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesBigIntegerTypeTest_BigIntegerBadDefault)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabSqueakyFieldTypesBigIntegerTypeTest")
