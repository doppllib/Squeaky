//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/field/types/BooleanTypeTest.java
//

#include "CoTouchlabDopplTestingDopplContextDelegateTestRunner.h"
#include "CoTouchlabSqueakyDaoDao.h"
#include "CoTouchlabSqueakyFieldDataType.h"
#include "CoTouchlabSqueakyFieldDatabaseField.h"
#include "CoTouchlabSqueakyFieldSqlType.h"
#include "CoTouchlabSqueakyFieldTypesBaseTypeTestHide.h"
#include "CoTouchlabSqueakyFieldTypesBooleanType.h"
#include "CoTouchlabSqueakyFieldTypesBooleanTypeTest.h"
#include "CoTouchlabSqueakyFieldTypesVoidType.h"
#include "CoTouchlabSqueakyTableDatabaseTable.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/List.h"
#include "org/junit/After.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/junit/runner/RunWith.h"

@interface CoTouchlabSqueakyFieldTypesBooleanTypeTest () {
 @public
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *helper_;
}

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)getHelper;

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldTypesBooleanTypeTest, helper_, CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)

inline NSString *CoTouchlabSqueakyFieldTypesBooleanTypeTest_get_BOOLEAN_COLUMN();
static NSString *CoTouchlabSqueakyFieldTypesBooleanTypeTest_BOOLEAN_COLUMN = @"bool";
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesBooleanTypeTest, BOOLEAN_COLUMN, NSString *)

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *CoTouchlabSqueakyFieldTypesBooleanTypeTest_getHelper(CoTouchlabSqueakyFieldTypesBooleanTypeTest *self);

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj__Annotations$1();

NSString *CoTouchlabSqueakyFieldTypesBooleanTypeTest_LOCAL_BOOLEAN = @"LocalBoolean";

@implementation CoTouchlabSqueakyFieldTypesBooleanTypeTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesBooleanTypeTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)before {
  JreStrongAssign(&helper_, CoTouchlabSqueakyFieldTypesBooleanTypeTest_getHelper(self));
}

- (void)after {
  [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) close];
}

- (void)testBoolean {
  IOSClass *clazz = CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean_class_();
  id<CoTouchlabSqueakyDaoDao> dao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:clazz];
  jboolean val = true;
  NSString *valStr = JavaLangBoolean_toStringWithBoolean_(val);
  CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean *foo = create_CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean_init();
  foo->bool__ = val;
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(dao)) createWithId:foo];
}

- (void)testBooleanPrimitiveNull {
  id<CoTouchlabSqueakyDaoDao> objDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj_class_()];
  CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj *foo = create_CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj_init();
  JreStrongAssign(&foo->bool__, nil);
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(objDao)) createWithId:foo];
  id<CoTouchlabSqueakyDaoDao> dao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean_class_()];
  id<JavaUtilList> all = [((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(dao)) queryForAll])) list];
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((id<JavaUtilList>) nil_chk(all)) size]);
  OrgJunitAssert_assertFalseWithBoolean_(((CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean *) nil_chk([all getWithInt:0]))->bool__);
}

- (void)testCoverage {
  create_CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(JreLoadEnum(CoTouchlabSqueakyFieldSqlType, BOOLEAN), [IOSObjectArray arrayWithLength:0 type:IOSClass_class_()]);
}

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)getHelper {
  return CoTouchlabSqueakyFieldTypesBooleanTypeTest_getHelper(self);
}

- (void)dealloc {
  RELEASE_(helper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 5, -1 },
    { NULL, "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(before);
  methods[2].selector = @selector(after);
  methods[3].selector = @selector(testBoolean);
  methods[4].selector = @selector(testBooleanPrimitiveNull);
  methods[5].selector = @selector(testCoverage);
  methods[6].selector = @selector(getHelper);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BOOLEAN_COLUMN", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "LOCAL_BOOLEAN", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "helper_", "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$0, (void *)&CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$1, "LJavaLangException;", (void *)&CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$2, (void *)&CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$3, (void *)&CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$4, &CoTouchlabSqueakyFieldTypesBooleanTypeTest_BOOLEAN_COLUMN, &CoTouchlabSqueakyFieldTypesBooleanTypeTest_LOCAL_BOOLEAN, "LCoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean;LCoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj;", (void *)&CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$5 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBooleanTypeTest = { "BooleanTypeTest", "co.touchlab.squeaky.field.types", ptrTable, methods, fields, 7, 0x1, 7, 3, -1, 8, -1, -1, 9 };
  return &_CoTouchlabSqueakyFieldTypesBooleanTypeTest;
}

@end

void CoTouchlabSqueakyFieldTypesBooleanTypeTest_init(CoTouchlabSqueakyFieldTypesBooleanTypeTest *self) {
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_init(self);
}

CoTouchlabSqueakyFieldTypesBooleanTypeTest *new_CoTouchlabSqueakyFieldTypesBooleanTypeTest_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldTypesBooleanTypeTest, init)
}

CoTouchlabSqueakyFieldTypesBooleanTypeTest *create_CoTouchlabSqueakyFieldTypesBooleanTypeTest_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldTypesBooleanTypeTest, init)
}

CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *CoTouchlabSqueakyFieldTypesBooleanTypeTest_getHelper(CoTouchlabSqueakyFieldTypesBooleanTypeTest *self) {
  return [self createHelperWithIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean_class_() } count:1 type:IOSClass_class_()]];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitAfter() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(CoTouchlabDopplTestingDopplContextDelegateTestRunner_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBooleanTypeTest)

@implementation CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bool__", "Z", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
  };
  static const void *ptrTable[] = { "bool", (void *)&CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean__Annotations$0, "LCoTouchlabSqueakyFieldTypesBooleanTypeTest;", (void *)&CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean__Annotations$1 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean = { "LocalBoolean", "co.touchlab.squeaky.field.types", ptrTable, methods, fields, 7, 0xc, 1, 1, 2, -1, -1, -1, 3 };
  return &_CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean;
}

@end

void CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean_init(CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean *new_CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean, init)
}

CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean *create_CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"bool", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"LocalBoolean") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBoolean)

@implementation CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(bool__);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bool__", "LJavaLangBoolean;", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
  };
  static const void *ptrTable[] = { "bool", (void *)&CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj__Annotations$0, "LCoTouchlabSqueakyFieldTypesBooleanTypeTest;", (void *)&CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj__Annotations$1 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj = { "LocalBooleanObj", "co.touchlab.squeaky.field.types", ptrTable, methods, fields, 7, 0xc, 1, 1, 2, -1, -1, -1, 3 };
  return &_CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj;
}

@end

void CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj_init(CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj *new_CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj, init)
}

CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj *create_CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"bool", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"LocalBoolean") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBooleanTypeTest_LocalBooleanObj)
