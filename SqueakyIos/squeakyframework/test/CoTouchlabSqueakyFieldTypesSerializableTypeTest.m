//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/field/types/SerializableTypeTest.java
//

#include "CoTouchlabDopplTestingDopplContextDelegateTestRunner.h"
#include "CoTouchlabSqueakyDaoDao.h"
#include "CoTouchlabSqueakyFieldDataPersister.h"
#include "CoTouchlabSqueakyFieldDataType.h"
#include "CoTouchlabSqueakyFieldDatabaseField.h"
#include "CoTouchlabSqueakyFieldSqlType.h"
#include "CoTouchlabSqueakyFieldTypesBaseTypeTestHide.h"
#include "CoTouchlabSqueakyFieldTypesSerializableType.h"
#include "CoTouchlabSqueakyFieldTypesSerializableTypeTest.h"
#include "CoTouchlabSqueakyFieldTypesVoidType.h"
#include "CoTouchlabSqueakyTableDatabaseTable.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "OrgApacheCommonsLang3BuilderEqualsBuilder.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "java/sql/SQLException.h"
#include "java/util/List.h"
#include "org/junit/After.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/junit/runner/RunWith.h"

@interface CoTouchlabSqueakyFieldTypesSerializableTypeTest () {
 @public
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *helper_;
}

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)getHelper;

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldTypesSerializableTypeTest, helper_, CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)

inline NSString *CoTouchlabSqueakyFieldTypesSerializableTypeTest_get_SERIALIZABLE_COLUMN();
static NSString *CoTouchlabSqueakyFieldTypesSerializableTypeTest_SERIALIZABLE_COLUMN = @"serializable";
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesSerializableTypeTest, SERIALIZABLE_COLUMN, NSString *)

inline NSString *CoTouchlabSqueakyFieldTypesSerializableTypeTest_get_BYTE_COLUMN();
static NSString *CoTouchlabSqueakyFieldTypesSerializableTypeTest_BYTE_COLUMN = @"byteField";
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesSerializableTypeTest, BYTE_COLUMN, NSString *)

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *CoTouchlabSqueakyFieldTypesSerializableTypeTest_getHelper(CoTouchlabSqueakyFieldTypesSerializableTypeTest *self);

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable__Annotations$1();

@implementation CoTouchlabSqueakyFieldTypesSerializableTypeTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesSerializableTypeTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)before {
  JreStrongAssign(&helper_, CoTouchlabSqueakyFieldTypesSerializableTypeTest_getHelper(self));
}

- (void)after {
  [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) close];
}

- (void)testSerializable {
  IOSClass *clazz = CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable_class_();
  id<CoTouchlabSqueakyDaoDao> dao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:clazz];
  JavaLangInteger *val = JavaLangInteger_valueOfWithInt_(1331333131);
  JavaIoByteArrayOutputStream *outStream = create_JavaIoByteArrayOutputStream_init();
  JavaIoObjectOutputStream *objOutStream = create_JavaIoObjectOutputStream_initWithJavaIoOutputStream_(outStream);
  [objOutStream writeObjectWithId:val];
  IOSByteArray *sqlArg = [outStream toByteArray];
  NSString *valStr = [val description];
  CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable *foo = create_CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable_init();
  JreStrongAssign(&foo->serializable_, val);
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(dao)) createWithId:foo];
  OrgJunitAssert_assertTrueWithBoolean_(OrgApacheCommonsLang3BuilderEqualsBuilder_reflectionEqualsWithId_withId_withNSStringArray_(foo, [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([dao queryForAll])) list])) getWithInt:0], [IOSObjectArray arrayWithLength:0 type:NSString_class_()]));
}

- (void)testSerializableNull {
  IOSClass *clazz = CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable_class_();
  id<CoTouchlabSqueakyDaoDao> dao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:clazz];
  CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable *foo = create_CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable_init();
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(dao)) createWithId:foo];
  OrgJunitAssert_assertTrueWithBoolean_(OrgApacheCommonsLang3BuilderEqualsBuilder_reflectionEqualsWithId_withId_withNSStringArray_(foo, [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([dao queryForAll])) list])) getWithInt:0], [IOSObjectArray arrayWithLength:0 type:NSString_class_()]));
}

- (void)testSerializableParseDefault {
  [((id<CoTouchlabSqueakyFieldDataPersister>) nil_chk([((CoTouchlabSqueakyFieldDataType *) nil_chk(JreLoadEnum(CoTouchlabSqueakyFieldDataType, SERIALIZABLE))) getDataPersister])) parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:nil withNSString:nil];
}

- (void)testCoverage {
  create_CoTouchlabSqueakyFieldTypesSerializableType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(JreLoadEnum(CoTouchlabSqueakyFieldSqlType, SERIALIZABLE), [IOSObjectArray arrayWithLength:0 type:IOSClass_class_()]);
}

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)getHelper {
  return CoTouchlabSqueakyFieldTypesSerializableTypeTest_getHelper(self);
}

- (void)dealloc {
  RELEASE_(helper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 5, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 6, -1 },
    { NULL, "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(before);
  methods[2].selector = @selector(after);
  methods[3].selector = @selector(testSerializable);
  methods[4].selector = @selector(testSerializableNull);
  methods[5].selector = @selector(testSerializableParseDefault);
  methods[6].selector = @selector(testCoverage);
  methods[7].selector = @selector(getHelper);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SERIALIZABLE_COLUMN", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "BYTE_COLUMN", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "helper_", "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$0, (void *)&CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$1, "LJavaLangException;", (void *)&CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$2, (void *)&CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$3, (void *)&CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$4, (void *)&CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$5, &CoTouchlabSqueakyFieldTypesSerializableTypeTest_SERIALIZABLE_COLUMN, &CoTouchlabSqueakyFieldTypesSerializableTypeTest_BYTE_COLUMN, "LCoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable;", (void *)&CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$6 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesSerializableTypeTest = { "SerializableTypeTest", "co.touchlab.squeaky.field.types", ptrTable, methods, fields, 7, 0x1, 8, 3, -1, 9, -1, -1, 10 };
  return &_CoTouchlabSqueakyFieldTypesSerializableTypeTest;
}

@end

void CoTouchlabSqueakyFieldTypesSerializableTypeTest_init(CoTouchlabSqueakyFieldTypesSerializableTypeTest *self) {
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_init(self);
}

CoTouchlabSqueakyFieldTypesSerializableTypeTest *new_CoTouchlabSqueakyFieldTypesSerializableTypeTest_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldTypesSerializableTypeTest, init)
}

CoTouchlabSqueakyFieldTypesSerializableTypeTest *create_CoTouchlabSqueakyFieldTypesSerializableTypeTest_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldTypesSerializableTypeTest, init)
}

CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *CoTouchlabSqueakyFieldTypesSerializableTypeTest_getHelper(CoTouchlabSqueakyFieldTypesSerializableTypeTest *self) {
  return [self createHelperWithIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable_class_() } count:1 type:IOSClass_class_()]];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitAfter() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(JavaSqlSQLException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(CoTouchlabDopplTestingDopplContextDelegateTestRunner_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesSerializableTypeTest)

@implementation CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(serializable_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serializable_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 0 },
  };
  static const void *ptrTable[] = { (void *)&CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable__Annotations$0, "LCoTouchlabSqueakyFieldTypesSerializableTypeTest;", (void *)&CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable__Annotations$1 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable = { "LocalSerializable", "co.touchlab.squeaky.field.types", ptrTable, methods, fields, 7, 0xc, 1, 1, 1, -1, -1, -1, 2 };
  return &_CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable;
}

@end

void CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable_init(CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable *new_CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable, init)
}

CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable *create_CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"serializable", JreLoadEnum(CoTouchlabSqueakyFieldDataType, SERIALIZABLE), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesSerializableTypeTest_LocalSerializable)
