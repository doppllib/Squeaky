//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/field/types/EnumIntegerTypeTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest")
#ifdef RESTRICT_CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest
#define INCLUDE_ALL_CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest 0
#else
#define INCLUDE_ALL_CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest 1
#endif
#undef RESTRICT_CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest

#if !defined (CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_) && (INCLUDE_ALL_CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest || defined(INCLUDE_CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest))
#define CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_

#define RESTRICT_CoTouchlabSqueakyFieldTypesBaseTypeTestHide 1
#define INCLUDE_CoTouchlabSqueakyFieldTypesBaseTypeTestHide 1
#include "CoTouchlabSqueakyFieldTypesBaseTypeTestHide.h"

@interface CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest : CoTouchlabSqueakyFieldTypesBaseTypeTestHide

#pragma mark Public

- (instancetype)init;

- (void)after;

- (void)before;

- (void)testCoverage;

- (void)testEnumInt;

- (void)testEnumIntNull;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest)

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_init(CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest *self);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest *new_CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest *create_CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_init();

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest)

#endif

#if !defined (CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_LocalEnumInt_) && (INCLUDE_ALL_CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest || defined(INCLUDE_CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_LocalEnumInt))
#define CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_LocalEnumInt_

@class CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum;

@interface CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_LocalEnumInt : NSObject {
 @public
  CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum *ourEnum_;
}

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_LocalEnumInt)

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_LocalEnumInt, ourEnum_, CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum *)

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_LocalEnumInt_init(CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_LocalEnumInt *self);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_LocalEnumInt *new_CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_LocalEnumInt_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_LocalEnumInt *create_CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_LocalEnumInt_init();

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_LocalEnumInt)

#endif

#if !defined (CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum_) && (INCLUDE_ALL_CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest || defined(INCLUDE_CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum))
#define CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum_Enum) {
  CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum_Enum_FIRST = 0,
  CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum_Enum_SECOND = 1,
};

@interface CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum : JavaLangEnum < NSCopying >

#pragma mark Public

+ (CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum *CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum_values_[];

inline CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum *CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum_get_FIRST();
J2OBJC_ENUM_CONSTANT(CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum, FIRST)

inline CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum *CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum_get_SECOND();
J2OBJC_ENUM_CONSTANT(CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum, SECOND)

FOUNDATION_EXPORT IOSObjectArray *CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum_values();

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum *CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum *CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest_OurEnum)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabSqueakyFieldTypesEnumIntegerTypeTest")
