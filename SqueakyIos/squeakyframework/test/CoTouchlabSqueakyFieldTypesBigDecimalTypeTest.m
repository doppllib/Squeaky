//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/field/types/BigDecimalTypeTest.java
//

#include "CoTouchlabDopplTestingDopplContextDelegateTestRunner.h"
#include "CoTouchlabSqueakyDaoDao.h"
#include "CoTouchlabSqueakyFieldDataType.h"
#include "CoTouchlabSqueakyFieldDatabaseField.h"
#include "CoTouchlabSqueakyFieldTypesBaseTypeTestHide.h"
#include "CoTouchlabSqueakyFieldTypesBigDecimalTypeTest.h"
#include "CoTouchlabSqueakyFieldTypesVoidType.h"
#include "CoTouchlabSqueakyTableDatabaseTable.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgApacheCommonsLang3BuilderEqualsBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/math/BigDecimal.h"
#include "java/sql/SQLException.h"
#include "java/util/List.h"
#include "org/junit/After.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/junit/runner/RunWith.h"

@interface CoTouchlabSqueakyFieldTypesBigDecimalTypeTest () {
 @public
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *helper_;
}

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)getHelper;

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest, helper_, CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)

inline NSString *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_get_BIGDECIMAL_COLUMN();
static NSString *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_BIGDECIMAL_COLUMN = @"bigDecimal";
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest, BIGDECIMAL_COLUMN, NSString *)

inline NSString *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_get_DEFAULT_VALUE();
static NSString *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_DEFAULT_VALUE = @"1.3452904234234732472343454353453453453453453453453453453";
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest, DEFAULT_VALUE, NSString *)

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_getHelper(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest *self);

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal__Annotations$1();

NSString *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LOCAL_BIG_DECIMAL = @"LocalBigDecimal";

@implementation CoTouchlabSqueakyFieldTypesBigDecimalTypeTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)before {
  JreStrongAssign(&helper_, CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_getHelper(self));
}

- (void)after {
  [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) close];
}

- (void)testBigDecimal {
  IOSClass *clazz = CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal_class_();
  id<CoTouchlabSqueakyDaoDao> dao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal_class_()];
  JavaMathBigDecimal *val = create_JavaMathBigDecimal_initWithNSString_(@"1.345345435345345345345345345345345345345345346356524234234");
  NSString *valStr = [val description];
  CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal *foo = create_CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal_init();
  JreStrongAssign(&foo->bigDecimal_, val);
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(dao)) createWithId:foo];
  OrgJunitAssert_assertTrueWithBoolean_(OrgApacheCommonsLang3BuilderEqualsBuilder_reflectionEqualsWithId_withId_withNSStringArray_(foo, [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([dao queryForAll])) list])) getWithInt:0], [IOSObjectArray arrayWithLength:0 type:NSString_class_()]));
}

- (void)testBigDecimalNull {
  id<CoTouchlabSqueakyDaoDao> dao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal_class_()];
  CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal *foo = create_CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal_init();
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(dao)) createWithId:foo];
  id<JavaUtilList> results = [((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([dao queryForAll])) list];
  OrgJunitAssert_assertEqualsWithLong_withLong_(1, [((id<JavaUtilList>) nil_chk(results)) size]);
  OrgJunitAssert_assertNullWithId_(((CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal *) nil_chk([results getWithInt:0]))->bigDecimal_);
}

- (void)testBigDecimalInvalidDbValue {
  id<CoTouchlabSqueakyDaoDao> dao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal_class_()];
  id<CoTouchlabSqueakyDaoDao> notDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal_class_()];
  CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal *notFoo = create_CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal_init();
  JreStrongAssign(&notFoo->bigDecimal_, @"not valid form");
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(notDao)) createWithId:notFoo];
  [((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao>) nil_chk(dao)) queryForAll])) list];
}

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)getHelper {
  return CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_getHelper(self);
}

- (void)dealloc {
  RELEASE_(helper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 5, -1 },
    { NULL, "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(before);
  methods[2].selector = @selector(after);
  methods[3].selector = @selector(testBigDecimal);
  methods[4].selector = @selector(testBigDecimalNull);
  methods[5].selector = @selector(testBigDecimalInvalidDbValue);
  methods[6].selector = @selector(getHelper);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BIGDECIMAL_COLUMN", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "DEFAULT_VALUE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "LOCAL_BIG_DECIMAL", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "helper_", "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$0, (void *)&CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$1, "LJavaLangException;", (void *)&CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$2, (void *)&CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$3, (void *)&CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$4, &CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_BIGDECIMAL_COLUMN, &CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_DEFAULT_VALUE, &CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LOCAL_BIG_DECIMAL, "LCoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal;LCoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal;", (void *)&CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$5 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBigDecimalTypeTest = { "BigDecimalTypeTest", "co.touchlab.squeaky.field.types", ptrTable, methods, fields, 7, 0x1, 7, 4, -1, 9, -1, -1, 10 };
  return &_CoTouchlabSqueakyFieldTypesBigDecimalTypeTest;
}

@end

void CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_init(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest *self) {
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_init(self);
}

CoTouchlabSqueakyFieldTypesBigDecimalTypeTest *new_CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest, init)
}

CoTouchlabSqueakyFieldTypesBigDecimalTypeTest *create_CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest, init)
}

CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_getHelper(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest *self) {
  return [self createHelperWithIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal_class_() } count:1 type:IOSClass_class_()]];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitAfter() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(JavaSqlSQLException_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(CoTouchlabDopplTestingDopplContextDelegateTestRunner_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest)

@implementation CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(bigDecimal_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bigDecimal_", "LJavaMathBigDecimal;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 0 },
  };
  static const void *ptrTable[] = { (void *)&CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal__Annotations$0, "LCoTouchlabSqueakyFieldTypesBigDecimalTypeTest;", (void *)&CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal__Annotations$1 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal = { "LocalBigDecimal", "co.touchlab.squeaky.field.types", ptrTable, methods, fields, 7, 0xc, 1, 1, 1, -1, -1, -1, 2 };
  return &_CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal;
}

@end

void CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal_init(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal *new_CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal, init)
}

CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal *create_CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"bigDecimal", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"LocalBigDecimal") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_LocalBigDecimal)

@implementation CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(bigDecimal_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bigDecimal_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 0 },
  };
  static const void *ptrTable[] = { (void *)&CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal__Annotations$0, "LCoTouchlabSqueakyFieldTypesBigDecimalTypeTest;", (void *)&CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal__Annotations$1 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal = { "NotBigDecimal", "co.touchlab.squeaky.field.types", ptrTable, methods, fields, 7, 0xc, 1, 1, 1, -1, -1, -1, 2 };
  return &_CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal;
}

@end

void CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal_init(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal *new_CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal, init)
}

CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal *create_CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"bigDecimal", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"LocalBigDecimal") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBigDecimalTypeTest_NotBigDecimal)
