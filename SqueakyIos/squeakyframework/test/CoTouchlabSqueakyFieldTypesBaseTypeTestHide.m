//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/field/types/BaseTypeTestHide.java
//

#include "AndroidAppApplication.h"
#include "AndroidContentContext.h"
#include "AndroidDatabaseSqliteSQLiteDatabase.h"
#include "CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl.h"
#include "CoTouchlabSqueakyDbSqliteSqueakyOpenHelper.h"
#include "CoTouchlabSqueakyFieldTypesBaseTypeTestHide.h"
#include "CoTouchlabSqueakySuperBaseTestHide.h"
#include "CoTouchlabSqueakyTableTableUtils.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/RuntimeException.h"
#include "java/sql/SQLException.h"
#include "java/util/Collections.h"
#include "java/util/List.h"

@interface CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper () {
 @public
  IOSObjectArray *managingClasses_;
  id<JavaUtilList> createSqlList_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper, managingClasses_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper, createSqlList_, id<JavaUtilList>)

@implementation CoTouchlabSqueakyFieldTypesBaseTypeTestHide

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)createHelperWithIOSClassArray:(IOSObjectArray *)c {
  return create_CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper_initWithAndroidContentContext_withNSString_withIOSClassArray_([self getApp], JreStrcat("$$", [[self java_getClass] getSimpleName], @".db"), c);
}

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)createViewHelperWithNSString:(NSString *)viewSql
                                                                         withIOSClassArray:(IOSObjectArray *)c {
  return create_CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper_initWithAndroidContentContext_withJavaUtilList_withNSString_withIOSClassArray_([self getApp], JavaUtilCollections_singletonListWithId_(viewSql), JreStrcat("$$", [[self java_getClass] getSimpleName], @".db"), c);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", 0x81, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createHelperWithIOSClassArray:);
  methods[2].selector = @selector(createViewHelperWithNSString:withIOSClassArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "createHelper", "[LIOSClass;", "createViewHelper", "LNSString;[LIOSClass;", "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBaseTypeTestHide = { "BaseTypeTestHide", "co.touchlab.squeaky.field.types", ptrTable, methods, NULL, 7, 0x401, 3, 0, -1, 4, -1, -1, -1 };
  return &_CoTouchlabSqueakyFieldTypesBaseTypeTestHide;
}

@end

void CoTouchlabSqueakyFieldTypesBaseTypeTestHide_init(CoTouchlabSqueakyFieldTypesBaseTypeTestHide *self) {
  CoTouchlabSqueakySuperBaseTestHide_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBaseTypeTestHide)

@implementation CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSString:(NSString *)name
                            withIOSClassArray:(IOSObjectArray *)managingClasses {
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper_initWithAndroidContentContext_withNSString_withIOSClassArray_(self, context, name, managingClasses);
  return self;
}

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
                             withJavaUtilList:(id<JavaUtilList>)createSqlList
                                 withNSString:(NSString *)name
                            withIOSClassArray:(IOSObjectArray *)managingClasses {
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper_initWithAndroidContentContext_withJavaUtilList_withNSString_withIOSClassArray_(self, context, createSqlList, name, managingClasses);
  return self;
}

- (void)onCreateWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)sqLiteDatabase {
  @try {
    CoTouchlabSqueakyTableTableUtils_createTablesWithCoTouchlabSqueakyDbSQLiteDatabase_withIOSClassArray_(create_CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl_initWithAndroidDatabaseSqliteSQLiteDatabase_(sqLiteDatabase), managingClasses_);
    if (createSqlList_ != nil) {
      for (NSString * __strong s in createSqlList_) {
        [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(sqLiteDatabase)) execSQLWithNSString:s];
      }
    }
  }
  @catch (JavaSqlSQLException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

- (void)onUpgradeWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)sqLiteDatabase
                                                 withInt:(jint)oldVersion
                                                 withInt:(jint)newVersion {
  IOSObjectArray *reversed = [IOSObjectArray arrayWithLength:((IOSObjectArray *) nil_chk(managingClasses_))->size_ type:IOSClass_class_()];
  for (jint i = 0; i < managingClasses_->size_; i++) {
    IOSObjectArray_Set(reversed, (managingClasses_->size_ - i) - 1, IOSObjectArray_Get(managingClasses_, i));
  }
  @try {
    CoTouchlabSqueakyTableTableUtils_dropTablesWithCoTouchlabSqueakyDbSQLiteDatabase_withBoolean_withIOSClassArray_(create_CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl_initWithAndroidDatabaseSqliteSQLiteDatabase_(sqLiteDatabase), true, reversed);
  }
  @catch (JavaSqlSQLException *e) {
    @throw create_JavaLangRuntimeException_initWithNSException_(e);
  }
}

- (void)dealloc {
  RELEASE_(managingClasses_);
  RELEASE_(createSqlList_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x81, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x81, -1, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithAndroidContentContext:withNSString:withIOSClassArray:);
  methods[1].selector = @selector(initWithAndroidContentContext:withJavaUtilList:withNSString:withIOSClassArray:);
  methods[2].selector = @selector(onCreateWithAndroidDatabaseSqliteSQLiteDatabase:);
  methods[3].selector = @selector(onUpgradeWithAndroidDatabaseSqliteSQLiteDatabase:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "managingClasses_", "[LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "createSqlList_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LAndroidContentContext;LNSString;[LIOSClass;", "LAndroidContentContext;LJavaUtilList;LNSString;[LIOSClass;", "(Landroid/content/Context;Ljava/util/List<Ljava/lang/String;>;Ljava/lang/String;[Ljava/lang/Class;)V", "onCreate", "LAndroidDatabaseSqliteSQLiteDatabase;", "onUpgrade", "LAndroidDatabaseSqliteSQLiteDatabase;II", "Ljava/util/List<Ljava/lang/String;>;", "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper = { "SimpleHelper", "co.touchlab.squeaky.field.types", ptrTable, methods, fields, 7, 0x9, 4, 2, 8, -1, -1, -1, -1 };
  return &_CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;
}

@end

void CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper_initWithAndroidContentContext_withNSString_withIOSClassArray_(CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *self, AndroidContentContext *context, NSString *name, IOSObjectArray *managingClasses) {
  CoTouchlabSqueakyDbSqliteSqueakyOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(self, context, name, nil, 1);
  JreStrongAssign(&self->managingClasses_, managingClasses);
}

CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *new_CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper_initWithAndroidContentContext_withNSString_withIOSClassArray_(AndroidContentContext *context, NSString *name, IOSObjectArray *managingClasses) {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper, initWithAndroidContentContext_withNSString_withIOSClassArray_, context, name, managingClasses)
}

CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *create_CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper_initWithAndroidContentContext_withNSString_withIOSClassArray_(AndroidContentContext *context, NSString *name, IOSObjectArray *managingClasses) {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper, initWithAndroidContentContext_withNSString_withIOSClassArray_, context, name, managingClasses)
}

void CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper_initWithAndroidContentContext_withJavaUtilList_withNSString_withIOSClassArray_(CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *self, AndroidContentContext *context, id<JavaUtilList> createSqlList, NSString *name, IOSObjectArray *managingClasses) {
  CoTouchlabSqueakyDbSqliteSqueakyOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(self, context, name, nil, 1);
  JreStrongAssign(&self->managingClasses_, managingClasses);
  JreStrongAssign(&self->createSqlList_, createSqlList);
}

CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *new_CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper_initWithAndroidContentContext_withJavaUtilList_withNSString_withIOSClassArray_(AndroidContentContext *context, id<JavaUtilList> createSqlList, NSString *name, IOSObjectArray *managingClasses) {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper, initWithAndroidContentContext_withJavaUtilList_withNSString_withIOSClassArray_, context, createSqlList, name, managingClasses)
}

CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *create_CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper_initWithAndroidContentContext_withJavaUtilList_withNSString_withIOSClassArray_(AndroidContentContext *context, id<JavaUtilList> createSqlList, NSString *name, IOSObjectArray *managingClasses) {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper, initWithAndroidContentContext_withJavaUtilList_withNSString_withIOSClassArray_, context, createSqlList, name, managingClasses)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper)
