//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/stmt/StmtTestHelper.java
//

#include "CoTouchlabSqueakyStmtStmtTestHelper.h"
#include "CoTouchlabSqueakyStmtWhere.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "junit/framework/Assert.h"

@interface CoTouchlabSqueakyStmtStmtTestHelper ()

+ (NSString *)cleanWhitespaceWithNSString:(NSString *)a;

@end

__attribute__((unused)) static NSString *CoTouchlabSqueakyStmtStmtTestHelper_cleanWhitespaceWithNSString_(NSString *a);

@implementation CoTouchlabSqueakyStmtStmtTestHelper

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyStmtStmtTestHelper_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)assertWhereWithNSString:(NSString *)wherePart
 withCoTouchlabSqueakyStmtWhere:(CoTouchlabSqueakyStmtWhere *)w
              withNSStringArray:(IOSObjectArray *)params {
  CoTouchlabSqueakyStmtStmtTestHelper_assertWhereWithNSString_withCoTouchlabSqueakyStmtWhere_withNSStringArray_(wherePart, w, params);
}

+ (NSString *)cleanWhitespaceWithNSString:(NSString *)a {
  return CoTouchlabSqueakyStmtStmtTestHelper_cleanWhitespaceWithNSString_(a);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(assertWhereWithNSString:withCoTouchlabSqueakyStmtWhere:withNSStringArray:);
  methods[2].selector = @selector(cleanWhitespaceWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "assertWhere", "LNSString;LCoTouchlabSqueakyStmtWhere;[LNSString;", "LJavaLangException;", "cleanWhitespace", "LNSString;" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyStmtStmtTestHelper = { "StmtTestHelper", "co.touchlab.squeaky.stmt", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_CoTouchlabSqueakyStmtStmtTestHelper;
}

@end

void CoTouchlabSqueakyStmtStmtTestHelper_init(CoTouchlabSqueakyStmtStmtTestHelper *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyStmtStmtTestHelper *new_CoTouchlabSqueakyStmtStmtTestHelper_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyStmtStmtTestHelper, init)
}

CoTouchlabSqueakyStmtStmtTestHelper *create_CoTouchlabSqueakyStmtStmtTestHelper_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyStmtStmtTestHelper, init)
}

void CoTouchlabSqueakyStmtStmtTestHelper_assertWhereWithNSString_withCoTouchlabSqueakyStmtWhere_withNSStringArray_(NSString *wherePart, CoTouchlabSqueakyStmtWhere *w, IOSObjectArray *params) {
  CoTouchlabSqueakyStmtStmtTestHelper_initialize();
  wherePart = CoTouchlabSqueakyStmtStmtTestHelper_cleanWhitespaceWithNSString_(wherePart);
  NSString *whereStatement = CoTouchlabSqueakyStmtStmtTestHelper_cleanWhitespaceWithNSString_([((CoTouchlabSqueakyStmtWhere *) nil_chk(w)) getWhereStatementWithBoolean:true]);
  JunitFrameworkAssert_assertEqualsWithNSString_withNSString_([((NSString *) nil_chk(wherePart)) lowercaseString], [((NSString *) nil_chk(whereStatement)) lowercaseString]);
}

NSString *CoTouchlabSqueakyStmtStmtTestHelper_cleanWhitespaceWithNSString_(NSString *a) {
  CoTouchlabSqueakyStmtStmtTestHelper_initialize();
  jchar lastChar = ' ';
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  for (jint i = 0; i < ((jint) [((NSString *) nil_chk(a)) length]); i++) {
    jchar c = [a charAtWithInt:i];
    if (c == ' ') {
      if (i + 1 < ((jint) [a length]) && ([a charAtWithInt:i + 1] == ' ' || [a charAtWithInt:i + 1] == ')')) {
        continue;
      }
    }
    [sb appendWithChar:c];
    lastChar = c;
  }
  return [((NSString *) nil_chk([sb description])) java_trim];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyStmtStmtTestHelper)
