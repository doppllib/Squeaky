//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/experiments/InnerQueryTest.java
//

#include "AndroidDatabaseCursor.h"
#include "AndroidDatabaseSqliteSQLiteDatabase.h"
#include "CoTouchlabDopplTestingDopplContextDelegateTestRunner.h"
#include "CoTouchlabSqueakyDaoDao.h"
#include "CoTouchlabSqueakyExperimentsInnerQueryTest.h"
#include "CoTouchlabSqueakyFieldDataType.h"
#include "CoTouchlabSqueakyFieldDatabaseField.h"
#include "CoTouchlabSqueakyFieldTypesBaseTypeTestHide.h"
#include "CoTouchlabSqueakyFieldTypesVoidType.h"
#include "CoTouchlabSqueakyTableDatabaseTable.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Date.h"
#include "java/util/Random.h"
#include "org/junit/After.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/junit/runner/RunWith.h"

@interface CoTouchlabSqueakyExperimentsInnerQueryTest () {
 @public
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *helper_;
}

- (void)runQueryWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db;

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)getHelper;

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyExperimentsInnerQueryTest, helper_, CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)

__attribute__((unused)) static void CoTouchlabSqueakyExperimentsInnerQueryTest_runQueryWithAndroidDatabaseSqliteSQLiteDatabase_(CoTouchlabSqueakyExperimentsInnerQueryTest *self, AndroidDatabaseSqliteSQLiteDatabase *db);

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *CoTouchlabSqueakyExperimentsInnerQueryTest_getHelper(CoTouchlabSqueakyExperimentsInnerQueryTest *self);

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$4();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$5();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Parent__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Parent__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Parent__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Parent__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Parent__Annotations$4();

@implementation CoTouchlabSqueakyExperimentsInnerQueryTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyExperimentsInnerQueryTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)before {
  JreStrongAssign(&helper_, CoTouchlabSqueakyExperimentsInnerQueryTest_getHelper(self));
}

- (void)after {
  [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) close];
}

- (void)testBigDecimal {
  AndroidDatabaseSqliteSQLiteDatabase *writableDatabase = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getWritableDatabase];
  [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(writableDatabase)) beginTransaction];
  @try {
    id<CoTouchlabSqueakyDaoDao> parentDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyExperimentsInnerQueryTest_Parent_class_()];
    id<CoTouchlabSqueakyDaoDao> childDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyExperimentsInnerQueryTest_Child_class_()];
    JavaUtilRandom *random = create_JavaUtilRandom_init();
    for (jint i = 0; i < 1000; i++) {
      CoTouchlabSqueakyExperimentsInnerQueryTest_Parent *parent = create_CoTouchlabSqueakyExperimentsInnerQueryTest_Parent_init();
      JreStrongAssign(&parent->name_, JreStrcat("$I", @"parent ", i));
      JreStrongAssign(&parent->category_, JreStrcat("$I", @"category ", i));
      JreStrongAssign(&parent->otherShit_, JreStrcat("$I", @"other ", i));
      [((id<CoTouchlabSqueakyDaoDao>) nil_chk(parentDao)) createWithId:parent];
      for (jint j = 0; j < 10; j++) {
        CoTouchlabSqueakyExperimentsInnerQueryTest_Child *child = create_CoTouchlabSqueakyExperimentsInnerQueryTest_Child_init();
        JreStrongAssign(&child->someVal_, JreStrcat("$ICI", @"some ", i, '/', j));
        child->otherVal_ = [random nextInt];
        JreStrongAssignAndConsume(&child->moreWeight_, new_JavaUtilDate_init());
        JreStrongAssign(&child->parent_, parent);
        [((id<CoTouchlabSqueakyDaoDao>) nil_chk(childDao)) createWithId:child];
      }
    }
    [writableDatabase setTransactionSuccessful];
  }
  @finally {
    [writableDatabase endTransaction];
  }
  CoTouchlabSqueakyExperimentsInnerQueryTest_runQueryWithAndroidDatabaseSqliteSQLiteDatabase_(self, writableDatabase);
}

- (void)runQueryWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db {
  CoTouchlabSqueakyExperimentsInnerQueryTest_runQueryWithAndroidDatabaseSqliteSQLiteDatabase_(self, db);
}

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)getHelper {
  return CoTouchlabSqueakyExperimentsInnerQueryTest_getHelper(self);
}

- (void)dealloc {
  RELEASE_(helper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 3, -1 },
    { NULL, "V", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(before);
  methods[2].selector = @selector(after);
  methods[3].selector = @selector(testBigDecimal);
  methods[4].selector = @selector(runQueryWithAndroidDatabaseSqliteSQLiteDatabase:);
  methods[5].selector = @selector(getHelper);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "helper_", "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&CoTouchlabSqueakyExperimentsInnerQueryTest__Annotations$0, (void *)&CoTouchlabSqueakyExperimentsInnerQueryTest__Annotations$1, "LJavaLangException;", (void *)&CoTouchlabSqueakyExperimentsInnerQueryTest__Annotations$2, "runQuery", "LAndroidDatabaseSqliteSQLiteDatabase;", "LCoTouchlabSqueakyExperimentsInnerQueryTest_Child;LCoTouchlabSqueakyExperimentsInnerQueryTest_Parent;", (void *)&CoTouchlabSqueakyExperimentsInnerQueryTest__Annotations$3 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyExperimentsInnerQueryTest = { "InnerQueryTest", "co.touchlab.squeaky.experiments", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, 6, -1, -1, 7 };
  return &_CoTouchlabSqueakyExperimentsInnerQueryTest;
}

@end

void CoTouchlabSqueakyExperimentsInnerQueryTest_init(CoTouchlabSqueakyExperimentsInnerQueryTest *self) {
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_init(self);
}

CoTouchlabSqueakyExperimentsInnerQueryTest *new_CoTouchlabSqueakyExperimentsInnerQueryTest_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyExperimentsInnerQueryTest, init)
}

CoTouchlabSqueakyExperimentsInnerQueryTest *create_CoTouchlabSqueakyExperimentsInnerQueryTest_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyExperimentsInnerQueryTest, init)
}

void CoTouchlabSqueakyExperimentsInnerQueryTest_runQueryWithAndroidDatabaseSqliteSQLiteDatabase_(CoTouchlabSqueakyExperimentsInnerQueryTest *self, AndroidDatabaseSqliteSQLiteDatabase *db) {
  jint mid = JavaLangInteger_MAX_VALUE / 2;
  jlong start = JavaLangSystem_currentTimeMillis();
  id<AndroidDatabaseCursor> straightCursor = [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db)) rawQueryWithNSString:@"select * from child c left join parent p on c.parent_id = p.id where otherVal >= ?" withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_toStringWithInt_(mid) } count:1 type:NSString_class_()]];
  jlong afterFirst = JavaLangSystem_currentTimeMillis();
  id<AndroidDatabaseCursor> innerCursor = [db rawQueryWithNSString:@"select * from child c left join parent p on c.parent_id = p.id where c.id in (select id from child where otherVal >= ?)" withNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_toStringWithInt_(mid) } count:1 type:NSString_class_()]];
  jlong end = JavaLangSystem_currentTimeMillis();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"ugh"];
}

CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *CoTouchlabSqueakyExperimentsInnerQueryTest_getHelper(CoTouchlabSqueakyExperimentsInnerQueryTest *self) {
  return [self createHelperWithIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ CoTouchlabSqueakyExperimentsInnerQueryTest_Parent_class_(), CoTouchlabSqueakyExperimentsInnerQueryTest_Child_class_() } count:2 type:IOSClass_class_()]];
}

IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitAfter() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(CoTouchlabDopplTestingDopplContextDelegateTestRunner_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyExperimentsInnerQueryTest)

@implementation CoTouchlabSqueakyExperimentsInnerQueryTest_Child

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyExperimentsInnerQueryTest_Child_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(id__);
  RELEASE_(someVal_);
  RELEASE_(moreWeight_);
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "LJavaLangLong;", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
    { "someVal_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 2 },
    { "otherVal_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, 3 },
    { "moreWeight_", "LJavaUtilDate;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 4 },
    { "parent_", "LCoTouchlabSqueakyExperimentsInnerQueryTest_Parent;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 5 },
  };
  static const void *ptrTable[] = { "id", (void *)&CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$0, (void *)&CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$1, (void *)&CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$2, (void *)&CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$3, (void *)&CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$4, "LCoTouchlabSqueakyExperimentsInnerQueryTest;", (void *)&CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$5 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyExperimentsInnerQueryTest_Child = { "Child", "co.touchlab.squeaky.experiments", ptrTable, methods, fields, 7, 0x8, 1, 5, 6, -1, -1, -1, 7 };
  return &_CoTouchlabSqueakyExperimentsInnerQueryTest_Child;
}

@end

void CoTouchlabSqueakyExperimentsInnerQueryTest_Child_init(CoTouchlabSqueakyExperimentsInnerQueryTest_Child *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyExperimentsInnerQueryTest_Child *new_CoTouchlabSqueakyExperimentsInnerQueryTest_Child_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyExperimentsInnerQueryTest_Child, init)
}

CoTouchlabSqueakyExperimentsInnerQueryTest_Child *create_CoTouchlabSqueakyExperimentsInnerQueryTest_Child_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyExperimentsInnerQueryTest_Child, init)
}

IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", true, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", true, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Child__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyExperimentsInnerQueryTest_Child)

@implementation CoTouchlabSqueakyExperimentsInnerQueryTest_Parent

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyExperimentsInnerQueryTest_Parent_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(category_);
  RELEASE_(otherShit_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "J", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 2 },
    { "category_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 3 },
    { "otherShit_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 4 },
  };
  static const void *ptrTable[] = { "id", (void *)&CoTouchlabSqueakyExperimentsInnerQueryTest_Parent__Annotations$0, (void *)&CoTouchlabSqueakyExperimentsInnerQueryTest_Parent__Annotations$1, (void *)&CoTouchlabSqueakyExperimentsInnerQueryTest_Parent__Annotations$2, (void *)&CoTouchlabSqueakyExperimentsInnerQueryTest_Parent__Annotations$3, "LCoTouchlabSqueakyExperimentsInnerQueryTest;", (void *)&CoTouchlabSqueakyExperimentsInnerQueryTest_Parent__Annotations$4 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyExperimentsInnerQueryTest_Parent = { "Parent", "co.touchlab.squeaky.experiments", ptrTable, methods, fields, 7, 0x8, 1, 4, 5, -1, -1, -1, 6 };
  return &_CoTouchlabSqueakyExperimentsInnerQueryTest_Parent;
}

@end

void CoTouchlabSqueakyExperimentsInnerQueryTest_Parent_init(CoTouchlabSqueakyExperimentsInnerQueryTest_Parent *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyExperimentsInnerQueryTest_Parent *new_CoTouchlabSqueakyExperimentsInnerQueryTest_Parent_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyExperimentsInnerQueryTest_Parent, init)
}

CoTouchlabSqueakyExperimentsInnerQueryTest_Parent *create_CoTouchlabSqueakyExperimentsInnerQueryTest_Parent_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyExperimentsInnerQueryTest_Parent, init)
}

IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Parent__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", true, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Parent__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Parent__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Parent__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyExperimentsInnerQueryTest_Parent__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyExperimentsInnerQueryTest_Parent)
