//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/field/types/DoubleObjectTypeTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest")
#ifdef RESTRICT_CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest
#define INCLUDE_ALL_CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest 0
#else
#define INCLUDE_ALL_CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest 1
#endif
#undef RESTRICT_CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest

#if !defined (CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_) && (INCLUDE_ALL_CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest || defined(INCLUDE_CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest))
#define CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_

#define RESTRICT_CoTouchlabSqueakyFieldTypesBaseTypeTestHide 1
#define INCLUDE_CoTouchlabSqueakyFieldTypesBaseTypeTestHide 1
#include "CoTouchlabSqueakyFieldTypesBaseTypeTestHide.h"

@interface CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest : CoTouchlabSqueakyFieldTypesBaseTypeTestHide

#pragma mark Public

- (instancetype)init;

- (void)after;

- (void)before;

- (void)testDoubleObj;

- (void)testDoubleObjNull;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest)

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_init(CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest *self);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest *new_CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest *create_CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_init();

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest)

#endif

#if !defined (CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_LocalDoubleObj_) && (INCLUDE_ALL_CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest || defined(INCLUDE_CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_LocalDoubleObj))
#define CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_LocalDoubleObj_

@class JavaLangDouble;

@interface CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_LocalDoubleObj : NSObject {
 @public
  JavaLangDouble *doubleField_;
}

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_LocalDoubleObj)

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_LocalDoubleObj, doubleField_, JavaLangDouble *)

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_LocalDoubleObj_init(CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_LocalDoubleObj *self);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_LocalDoubleObj *new_CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_LocalDoubleObj_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_LocalDoubleObj *create_CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_LocalDoubleObj_init();

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest_LocalDoubleObj)

#endif

#pragma pop_macro("INCLUDE_ALL_CoTouchlabSqueakyFieldTypesDoubleObjectTypeTest")
