//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/field/types/BooleanCharTypeTest.java
//

#include "CoTouchlabDopplTestingDopplContextDelegateTestRunner.h"
#include "CoTouchlabSqueakyDaoDao.h"
#include "CoTouchlabSqueakyFieldDataType.h"
#include "CoTouchlabSqueakyFieldDatabaseField.h"
#include "CoTouchlabSqueakyFieldTypesBaseTypeTestHide.h"
#include "CoTouchlabSqueakyFieldTypesBooleanCharTypeTest.h"
#include "CoTouchlabSqueakyFieldTypesVoidType.h"
#include "CoTouchlabSqueakyTableDatabaseTable.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "OrgApacheCommonsLang3BuilderEqualsBuilder.h"
#include "java/lang/Boolean.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/List.h"
#include "org/junit/Assert.h"
#include "org/junit/Test.h"
#include "org/junit/runner/RunWith.h"

inline NSString *CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_get_BOOLEAN_COLUMN();
static NSString *CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_BOOLEAN_COLUMN = @"bool";
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesBooleanCharTypeTest, BOOLEAN_COLUMN, NSString *)

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanCharTypeTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanCharTypeTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar__Annotations$1();

@implementation CoTouchlabSqueakyFieldTypesBooleanCharTypeTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)testBooleanObj {
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *helper = [self createHelperWithIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar_class_() } count:1 type:IOSClass_class_()]];
  IOSClass *clazz = CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar_class_();
  id<CoTouchlabSqueakyDaoDao> dao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper)) getDaoWithIOSClass:clazz];
  jboolean val = true;
  NSString *valStr = JavaLangBoolean_toStringWithBoolean_(val);
  CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar *foo = create_CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar_init();
  foo->bool__ = val;
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(dao)) createWithId:foo];
  OrgJunitAssert_assertTrueWithBoolean_(OrgApacheCommonsLang3BuilderEqualsBuilder_reflectionEqualsWithId_withId_withNSStringArray_(foo, [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([dao queryForAll])) list])) getWithInt:0], [IOSObjectArray arrayWithLength:0 type:NSString_class_()]));
  [helper close];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testBooleanObj);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BOOLEAN_COLUMN", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", (void *)&CoTouchlabSqueakyFieldTypesBooleanCharTypeTest__Annotations$0, &CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_BOOLEAN_COLUMN, "LCoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar;", (void *)&CoTouchlabSqueakyFieldTypesBooleanCharTypeTest__Annotations$1 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBooleanCharTypeTest = { "BooleanCharTypeTest", "co.touchlab.squeaky.field.types", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, 3, -1, -1, 4 };
  return &_CoTouchlabSqueakyFieldTypesBooleanCharTypeTest;
}

@end

void CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_init(CoTouchlabSqueakyFieldTypesBooleanCharTypeTest *self) {
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_init(self);
}

CoTouchlabSqueakyFieldTypesBooleanCharTypeTest *new_CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldTypesBooleanCharTypeTest, init)
}

CoTouchlabSqueakyFieldTypesBooleanCharTypeTest *create_CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldTypesBooleanCharTypeTest, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanCharTypeTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanCharTypeTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(CoTouchlabDopplTestingDopplContextDelegateTestRunner_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBooleanCharTypeTest)

@implementation CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bool__", "Z", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
  };
  static const void *ptrTable[] = { "bool", (void *)&CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar__Annotations$0, "LCoTouchlabSqueakyFieldTypesBooleanCharTypeTest;", (void *)&CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar__Annotations$1 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar = { "LocalBooleanChar", "co.touchlab.squeaky.field.types", ptrTable, methods, fields, 7, 0xc, 1, 1, 2, -1, -1, -1, 3 };
  return &_CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar;
}

@end

void CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar_init(CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar *new_CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar, init)
}

CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar *create_CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"bool", JreLoadEnum(CoTouchlabSqueakyFieldDataType, BOOLEAN_CHAR), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBooleanCharTypeTest_LocalBooleanChar)
