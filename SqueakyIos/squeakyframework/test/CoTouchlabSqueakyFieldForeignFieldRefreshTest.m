//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel-doppl/Squeaky-doppl/tests/src/test/java/co/touchlab/squeaky/field/ForeignFieldRefreshTest.java
//

#include "CoTouchlabDopplTestingDopplContextDelegateTestRunner.h"
#include "CoTouchlabSqueakyDaoDao.h"
#include "CoTouchlabSqueakyDaoDaoHelper.h"
#include "CoTouchlabSqueakyDaoSqueakyContext.h"
#include "CoTouchlabSqueakyFieldDataType.h"
#include "CoTouchlabSqueakyFieldDatabaseField.h"
#include "CoTouchlabSqueakyFieldForeignFieldRefreshTest.h"
#include "CoTouchlabSqueakyFieldTypesBaseTypeTestHide.h"
#include "CoTouchlabSqueakyFieldTypesVoidType.h"
#include "CoTouchlabSqueakyStmtWhere.h"
#include "CoTouchlabSqueakyTableDatabaseTable.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/List.h"
#include "org/junit/After.h"
#include "org/junit/Assert.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"
#include "org/junit/runner/RunWith.h"

@interface CoTouchlabSqueakyFieldForeignFieldRefreshTest () {
 @public
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *helper_;
}

- (jboolean)sameRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray:(IOSObjectArray *)left
                          withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:(IOSObjectArray *)right;

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)getHelper;

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldForeignFieldRefreshTest, helper_, CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)

__attribute__((unused)) static jboolean CoTouchlabSqueakyFieldForeignFieldRefreshTest_sameRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(CoTouchlabSqueakyFieldForeignFieldRefreshTest *self, IOSObjectArray *left, IOSObjectArray *right);

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *CoTouchlabSqueakyFieldForeignFieldRefreshTest_getHelper(CoTouchlabSqueakyFieldForeignFieldRefreshTest *self);

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent__Annotations$4();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child__Annotations$3();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child__Annotations$4();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager__Annotations$0();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager__Annotations$1();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager__Annotations$2();

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager__Annotations$3();

NSString *CoTouchlabSqueakyFieldForeignFieldRefreshTest_PREFIX = @"Hello ";

@implementation CoTouchlabSqueakyFieldForeignFieldRefreshTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldForeignFieldRefreshTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)before {
  JreStrongAssign(&helper_, CoTouchlabSqueakyFieldForeignFieldRefreshTest_getHelper(self));
}

- (void)after {
  [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) close];
}

- (void)testRefreshMapAutofill {
  IOSObjectArray *oneLevel = CoTouchlabSqueakyDaoDaoHelper_fillForeignRefreshMapWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withInt_([((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getSqueakyContext], CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager_class_(), 1);
  IOSObjectArray *oneLevelCompare = CoTouchlabSqueakyDaoDaoHelper_refreshWithNSString_(@"parent");
  OrgJunitAssert_assertTrueWithBoolean_(CoTouchlabSqueakyFieldForeignFieldRefreshTest_sameRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(self, oneLevel, oneLevelCompare));
  IOSObjectArray *twoLevel = CoTouchlabSqueakyDaoDaoHelper_fillForeignRefreshMapWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withInt_([((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getSqueakyContext], CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager_class_(), 2);
  IOSObjectArray *twoLevelCompare = CoTouchlabSqueakyDaoDaoHelper_refreshWithNSString_(@"parent[grandParentEager]");
  OrgJunitAssert_assertTrueWithBoolean_(CoTouchlabSqueakyFieldForeignFieldRefreshTest_sameRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(self, twoLevel, twoLevelCompare));
  IOSObjectArray *threeLevel = CoTouchlabSqueakyDaoDaoHelper_fillForeignRefreshMapWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withInt_([((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getSqueakyContext], CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager_class_(), 3);
  IOSObjectArray *threeLevelCompare = CoTouchlabSqueakyDaoDaoHelper_refreshWithNSString_(@"parent[grandParentEager[childEager]]");
  OrgJunitAssert_assertTrueWithBoolean_(CoTouchlabSqueakyFieldForeignFieldRefreshTest_sameRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(self, threeLevel, threeLevelCompare));
  IOSObjectArray *sixLevel = CoTouchlabSqueakyDaoDaoHelper_fillForeignRefreshMapWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withInt_([((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getSqueakyContext], CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager_class_(), 6);
  IOSObjectArray *sixLevelCompare = CoTouchlabSqueakyDaoDaoHelper_refreshWithNSString_(@"parent[grandParentEager[childEager[parent[grandParentEager[childEager]]]]]");
  OrgJunitAssert_assertTrueWithBoolean_(CoTouchlabSqueakyFieldForeignFieldRefreshTest_sameRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(self, sixLevel, sixLevelCompare));
  IOSObjectArray *nineLevel = CoTouchlabSqueakyDaoDaoHelper_fillForeignRefreshMapWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withInt_([((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getSqueakyContext], CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager_class_(), 9);
  IOSObjectArray *nineLevelCompare = CoTouchlabSqueakyDaoDaoHelper_refreshWithNSString_(@"parent[grandParentEager[childEager[parent[grandParentEager[childEager[parent[grandParentEager[childEager]]]]]]]]");
  OrgJunitAssert_assertTrueWithBoolean_(CoTouchlabSqueakyFieldForeignFieldRefreshTest_sameRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(self, nineLevel, nineLevelCompare));
}

- (void)testForeignRefreshMap {
  id<CoTouchlabSqueakyDaoDao> grandParentDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent_class_()];
  id<CoTouchlabSqueakyDaoDao> parentDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent_class_()];
  id<CoTouchlabSqueakyDaoDao> childEagerDao = [((CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *) nil_chk(helper_)) getDaoWithIOSClass:CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager_class_()];
  CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent *grampsEager = create_CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent_init();
  JreStrongAssign(&grampsEager->name_, @"grampsEager");
  CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent *grampsLazy = create_CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent_init();
  JreStrongAssign(&grampsLazy->name_, @"grampsLazy");
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(grandParentDao)) createWithId:grampsEager];
  [grandParentDao createWithId:grampsLazy];
  CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent *popsEager = create_CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent_init();
  JreStrongAssign(&popsEager->name_, @"popsEager");
  CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent *popsLazy = create_CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent_init();
  JreStrongAssign(&popsLazy->name_, @"popsLazy");
  JreStrongAssign(&popsEager->grandParentEager_, grampsEager);
  JreStrongAssign(&popsEager->grandParentLazy_, grampsLazy);
  JreStrongAssign(&popsLazy->grandParentEager_, grampsEager);
  JreStrongAssign(&popsLazy->grandParentLazy_, grampsLazy);
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(parentDao)) createWithId:popsEager];
  [parentDao createWithId:popsLazy];
  CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager *child = create_CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager_init();
  JreStrongAssign(&child->asdf_, @"child");
  JreStrongAssign(&child->parent_, popsEager);
  [((id<CoTouchlabSqueakyDaoDao>) nil_chk(childEagerDao)) createWithId:child];
  grampsEager->childEager_ = child;
  grampsLazy->childEager_ = child;
  [grandParentDao updateWithId:grampsEager];
  [grandParentDao updateWithId:grampsLazy];
  CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager *testDefault = [childEagerDao queryForIdWithId:JavaLangInteger_valueOfWithInt_(child->id__)];
  OrgJunitAssert_assertTrueWithBoolean_(((CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent *) nil_chk(((CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent *) nil_chk(((CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager *) nil_chk(testDefault))->parent_))->grandParentLazy_))->name_ == nil && ((CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent *) nil_chk(testDefault->parent_->grandParentEager_))->name_ != nil && ((CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager *) nil_chk(testDefault->parent_->grandParentEager_->childEager_))->asdf_ == nil);
  CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager *noRefresh = [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([childEagerDao queryWithCoTouchlabSqueakyDaoQuery:[create_CoTouchlabSqueakyStmtWhere_initWithCoTouchlabSqueakyDaoDao_(childEagerDao) eqWithNSString:@"id" withId:JavaLangInteger_valueOfWithInt_(child->id__)]])) foreignRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray:[IOSObjectArray arrayWithLength:0 type:CoTouchlabSqueakyDaoDao_ForeignRefresh_class_()]])) list])) getWithInt:0];
  OrgJunitAssert_assertTrueWithBoolean_(((CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent *) nil_chk(((CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager *) nil_chk(noRefresh))->parent_))->name_ == nil);
  CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager *deepRefresh = [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([childEagerDao queryWithCoTouchlabSqueakyDaoQuery:[create_CoTouchlabSqueakyStmtWhere_initWithCoTouchlabSqueakyDaoDao_(childEagerDao) eqWithNSString:@"id" withId:JavaLangInteger_valueOfWithInt_(child->id__)]])) foreignRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray:CoTouchlabSqueakyDaoDaoHelper_refreshWithNSString_(@"parent[grandParentLazy[childEager]]")])) list])) getWithInt:0];
  OrgJunitAssert_assertTrueWithBoolean_(((CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent *) nil_chk(((CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager *) nil_chk(deepRefresh))->parent_))->name_ != nil && ((CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent *) nil_chk(deepRefresh->parent_->grandParentEager_))->name_ == nil && ((CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager *) nil_chk(((CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent *) nil_chk(deepRefresh->parent_->grandParentLazy_))->childEager_))->asdf_ != nil);
  CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent *testParent = [((id<JavaUtilList>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([parentDao queryWithCoTouchlabSqueakyDaoQuery:[create_CoTouchlabSqueakyStmtWhere_initWithCoTouchlabSqueakyDaoDao_(parentDao) eqWithNSString:@"id" withId:JavaLangInteger_valueOfWithInt_(popsEager->id__)]])) foreignRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray:CoTouchlabSqueakyDaoDaoHelper_refreshWithNSString_(@"grandParentLazy[childEager[parent[grandParentEager]]],grandParentEager")])) list])) getWithInt:0];
  OrgJunitAssert_assertTrueWithBoolean_(((CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent *) nil_chk(((CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent *) nil_chk(((CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager *) nil_chk(((CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent *) nil_chk(((CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent *) nil_chk(testParent))->grandParentLazy_))->childEager_))->parent_))->grandParentEager_))->name_ != nil && testParent->grandParentLazy_->childEager_->parent_->grandParentEager_->childEager_->asdf_ == nil && testParent->grandParentEager_->childEager_->asdf_ == nil);
}

- (jboolean)sameRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray:(IOSObjectArray *)left
                          withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:(IOSObjectArray *)right {
  return CoTouchlabSqueakyFieldForeignFieldRefreshTest_sameRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(self, left, right);
}

- (CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *)getHelper {
  return CoTouchlabSqueakyFieldForeignFieldRefreshTest_getHelper(self);
}

- (void)dealloc {
  RELEASE_(helper_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, 4, -1 },
    { NULL, "Z", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(before);
  methods[2].selector = @selector(after);
  methods[3].selector = @selector(testRefreshMapAutofill);
  methods[4].selector = @selector(testForeignRefreshMap);
  methods[5].selector = @selector(sameRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray:withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:);
  methods[6].selector = @selector(getHelper);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PREFIX", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "helper_", "LCoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest__Annotations$0, (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest__Annotations$1, "LJavaSqlSQLException;", (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest__Annotations$2, (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest__Annotations$3, "sameRefreshMap", "[LCoTouchlabSqueakyDaoDao_ForeignRefresh;[LCoTouchlabSqueakyDaoDao_ForeignRefresh;", &CoTouchlabSqueakyFieldForeignFieldRefreshTest_PREFIX, "LCoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent;LCoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent;LCoTouchlabSqueakyFieldForeignFieldRefreshTest_Child;LCoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager;", (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest__Annotations$4 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldForeignFieldRefreshTest = { "ForeignFieldRefreshTest", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, 8, -1, -1, 9 };
  return &_CoTouchlabSqueakyFieldForeignFieldRefreshTest;
}

@end

void CoTouchlabSqueakyFieldForeignFieldRefreshTest_init(CoTouchlabSqueakyFieldForeignFieldRefreshTest *self) {
  CoTouchlabSqueakyFieldTypesBaseTypeTestHide_init(self);
}

CoTouchlabSqueakyFieldForeignFieldRefreshTest *new_CoTouchlabSqueakyFieldForeignFieldRefreshTest_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldForeignFieldRefreshTest, init)
}

CoTouchlabSqueakyFieldForeignFieldRefreshTest *create_CoTouchlabSqueakyFieldForeignFieldRefreshTest_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldForeignFieldRefreshTest, init)
}

jboolean CoTouchlabSqueakyFieldForeignFieldRefreshTest_sameRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(CoTouchlabSqueakyFieldForeignFieldRefreshTest *self, IOSObjectArray *left, IOSObjectArray *right) {
  if (left == nil && right == nil) return true;
  if (left == nil || right == nil) return false;
  if (left->size_ != right->size_) return false;
  {
    IOSObjectArray *a__ = left;
    CoTouchlabSqueakyDaoDao_ForeignRefresh * const *b__ = a__->buffer_;
    CoTouchlabSqueakyDaoDao_ForeignRefresh * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      CoTouchlabSqueakyDaoDao_ForeignRefresh *leftRefresh = *b__++;
      jboolean fieldEquals = false;
      {
        IOSObjectArray *a__ = right;
        CoTouchlabSqueakyDaoDao_ForeignRefresh * const *b__ = a__->buffer_;
        CoTouchlabSqueakyDaoDao_ForeignRefresh * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          CoTouchlabSqueakyDaoDao_ForeignRefresh *rightRefresh = *b__++;
          if ([((NSString *) nil_chk(((CoTouchlabSqueakyDaoDao_ForeignRefresh *) nil_chk(leftRefresh))->field_)) isEqual:((CoTouchlabSqueakyDaoDao_ForeignRefresh *) nil_chk(rightRefresh))->field_]) {
            fieldEquals = CoTouchlabSqueakyFieldForeignFieldRefreshTest_sameRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(self, leftRefresh->refreshFields_, rightRefresh->refreshFields_);
            break;
          }
        }
      }
      if (!fieldEquals) return false;
    }
  }
  return true;
}

CoTouchlabSqueakyFieldTypesBaseTypeTestHide_SimpleHelper *CoTouchlabSqueakyFieldForeignFieldRefreshTest_getHelper(CoTouchlabSqueakyFieldForeignFieldRefreshTest *self) {
  return [self createHelperWithIOSClassArray:[IOSObjectArray arrayWithObjects:(id[]){ CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child_class_(), CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager_class_(), CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent_class_(), CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent_class_() } count:4 type:IOSClass_class_()]];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitAfter() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitRunnerRunWith(CoTouchlabDopplTestingDopplContextDelegateTestRunner_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldForeignFieldRefreshTest)

@implementation CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)__javaClone:(CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent *)original {
  [super __javaClone:original];
  [childEager_ release];
}

- (void)dealloc {
  RELEASE_(name_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "I", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 2 },
    { "childEager_", "LCoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 3 },
  };
  static const void *ptrTable[] = { "id", (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent__Annotations$0, (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent__Annotations$1, (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent__Annotations$2, "LCoTouchlabSqueakyFieldForeignFieldRefreshTest;", (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent__Annotations$3 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent = { "GrandParent", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0x8, 1, 3, 4, -1, -1, -1, 5 };
  return &_CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent;
}

@end

void CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent_init(CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent *new_CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent, init)
}

CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent *create_CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", true, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", true, true, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent)

@implementation CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(grandParentLazy_);
  RELEASE_(grandParentEager_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "I", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 2 },
    { "grandParentLazy_", "LCoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 3 },
    { "grandParentEager_", "LCoTouchlabSqueakyFieldForeignFieldRefreshTest_GrandParent;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 4 },
  };
  static const void *ptrTable[] = { "id", (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent__Annotations$0, (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent__Annotations$1, (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent__Annotations$2, (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent__Annotations$3, "LCoTouchlabSqueakyFieldForeignFieldRefreshTest;", (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent__Annotations$4 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent = { "Parent", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0xc, 1, 4, 5, -1, -1, -1, 6 };
  return &_CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent;
}

@end

void CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent_init(CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent *new_CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent, init)
}

CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent *create_CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", true, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", true, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", true, true, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent)

@implementation CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(asdf_);
  RELEASE_(parentLazy_);
  RELEASE_(parentEager_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "I", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
    { "asdf_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 2 },
    { "parentLazy_", "LCoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 3 },
    { "parentEager_", "LCoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 4 },
  };
  static const void *ptrTable[] = { "id", (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child__Annotations$0, (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child__Annotations$1, (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child__Annotations$2, (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child__Annotations$3, "LCoTouchlabSqueakyFieldForeignFieldRefreshTest;", (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child__Annotations$4 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child = { "Child", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0xc, 1, 4, 5, -1, -1, -1, 6 };
  return &_CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child;
}

@end

void CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child_init(CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child *new_CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child, init)
}

CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child *create_CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", true, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", true, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", true, true, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldForeignFieldRefreshTest_Child)

@implementation CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(asdf_);
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "id__", "I", .constantValue.asLong = 0, 0x0, 0, -1, -1, 1 },
    { "asdf_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 2 },
    { "parent_", "LCoTouchlabSqueakyFieldForeignFieldRefreshTest_Parent;", .constantValue.asLong = 0, 0x0, -1, -1, -1, 3 },
  };
  static const void *ptrTable[] = { "id", (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager__Annotations$0, (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager__Annotations$1, (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager__Annotations$2, "LCoTouchlabSqueakyFieldForeignFieldRefreshTest;", (void *)&CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager__Annotations$3 };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager = { "ChildEager", "co.touchlab.squeaky.field", ptrTable, methods, fields, 7, 0xc, 1, 3, 4, -1, -1, -1, 5 };
  return &_CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager;
}

@end

void CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager_init(CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager *new_CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager_init() {
  J2OBJC_NEW_IMPL(CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager, init)
}

CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager *create_CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager_init() {
  J2OBJC_CREATE_IMPL(CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager, init)
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", true, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", false, false, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyFieldDatabaseField(true, @"", JreLoadEnum(CoTouchlabSqueakyFieldDataType, UNKNOWN), @"__ormlite__ no default value string was specified", true, true, @"", false, false, false, @"", CoTouchlabSqueakyFieldTypesVoidType_class_(), false, false, false, @"", false) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_CoTouchlabSqueakyTableDatabaseTable(@"") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldForeignFieldRefreshTest_ChildEager)
